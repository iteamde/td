
SET NAMES utf8;;;;;
SET time_zone = '+00:00';;;;;
SET foreign_key_checks = 0;;;;;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';;;;;

DROP TABLE IF EXISTS `trendata_bigdata_country`;;;;;
CREATE TABLE `trendata_bigdata_country` (
  `trendata_bigdata_country_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_country_name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_country_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_bigdata_employee_type`;;;;;
CREATE TABLE `trendata_bigdata_employee_type` (
  `trendata_bigdata_employee_type_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_employee_type_name_token` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_bigdata_employee_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_bigdata_employee_type`;;;;;
INSERT INTO `trendata_bigdata_employee_type` (`trendata_bigdata_employee_type_id`, `trendata_bigdata_employee_type_name_token`, `created_at`, `updated_at`) VALUES
(1,	'full_time',	'2017-03-17 15:16:40',	'2017-03-17 15:16:40'),
(2,	'part_time',	'2017-03-17 15:16:53',	'2017-03-17 15:16:53'),
(3,	'contractor',	'2017-03-17 15:17:01',	'2017-03-17 15:17:01');;;;;

DROP TABLE IF EXISTS `trendata_bigdata_gender`;;;;;
CREATE TABLE `trendata_bigdata_gender` (
  `trendata_bigdata_gender_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_gender_name_token` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_bigdata_gender_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_bigdata_gender`;;;;;
INSERT INTO `trendata_bigdata_gender` (`trendata_bigdata_gender_id`, `trendata_bigdata_gender_name_token`, `created_at`, `updated_at`) VALUES
(1,	'male',	'2017-03-17 15:16:07',	'2017-03-17 15:16:07'),
(2,	'female',	'2017-03-17 15:16:15',	'2017-03-17 15:16:15');;;;;

DROP TABLE IF EXISTS `trendata_bigdata_hire_source`;;;;;
CREATE TABLE `trendata_bigdata_hire_source` (
  `trendata_bigdata_hire_source_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_hire_source_name_token` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_bigdata_hire_source_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_bigdata_hire_source`;;;;;
INSERT INTO `trendata_bigdata_hire_source` (`trendata_bigdata_hire_source_id`, `trendata_bigdata_hire_source_name_token`, `created_at`, `updated_at`) VALUES
(1,	'job_fair',	'2017-03-17 15:32:04',	'2017-03-17 15:32:04'),
(2,	'linkedin',	'2017-03-17 15:32:15',	'2017-03-17 15:32:15'),
(3,	'word_of_mouth',	'2017-03-17 15:32:34',	'2017-03-17 15:32:34'),
(4,	'facebook',	'2017-03-17 15:32:44',	'2017-03-17 15:32:44'),
(5,	'employee_referral',	'2017-03-17 15:33:02',	'2017-03-17 15:33:02');;;;;

DROP TABLE IF EXISTS `trendata_bigdata_job`;;;;;
CREATE TABLE `trendata_bigdata_job` (
  `trendata_bigdata_job_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_job_title` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_job_description` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_job_requirements` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_job_code` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_organizational_level_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_jobtype_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_jobfamily_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_salary_range_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_job_active` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_job_hourly` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_job_level_id` int(10) unsigned DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_job_id`),
  KEY `trendata_bigdata_organizational_level_id` (`trendata_bigdata_organizational_level_id`),
  KEY `trendata_bigdata_jobtype_id` (`trendata_bigdata_jobtype_id`),
  KEY `trendata_bigdata_salary_range_id` (`trendata_bigdata_salary_range_id`),
  CONSTRAINT `trendata_bigdata_job_ibfk_4` FOREIGN KEY (`trendata_bigdata_organizational_level_id`) REFERENCES `trendata_bigdata_organizational_level` (`trendata_bigdata_organizational_level_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_bigdata_job_ibfk_5` FOREIGN KEY (`trendata_bigdata_jobtype_id`) REFERENCES `trendata_bigdata_jobtype` (`trendata_bigdata_jobtype_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_bigdata_job_ibfk_6` FOREIGN KEY (`trendata_bigdata_salary_range_id`) REFERENCES `trendata_bigdata_salary_range` (`trendata_bigdata_salary_range_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_bigdata_jobtype`;;;;;
CREATE TABLE `trendata_bigdata_jobtype` (
  `trendata_bigdata_jobtype_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_jobtype_name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_jobtype_active` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_jobtype_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_bigdata_job_country`;;;;;
CREATE TABLE `trendata_bigdata_job_country` (
  `trendata_bigdata_job_country_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_job_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_country_id` int(10) unsigned DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_job_country_id`),
  UNIQUE KEY `trendata_bigdata_job_id_trendata_bigdata_country_id` (`trendata_bigdata_job_id`,`trendata_bigdata_country_id`),
  KEY `trendata_bigdata_country_id` (`trendata_bigdata_country_id`),
  CONSTRAINT `trendata_bigdata_job_country_ibfk_3` FOREIGN KEY (`trendata_bigdata_job_id`) REFERENCES `trendata_bigdata_job` (`trendata_bigdata_job_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_bigdata_job_country_ibfk_4` FOREIGN KEY (`trendata_bigdata_country_id`) REFERENCES `trendata_bigdata_country` (`trendata_bigdata_country_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_bigdata_organizational_level`;;;;;
CREATE TABLE `trendata_bigdata_organizational_level` (
  `trendata_bigdata_organizational_level_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_organizational_level_name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_organizational_level_parent_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_organizational_level_active` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_organizational_level_code` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_organizational_level_manager_id` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_organizational_level_notes` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_organizational_level_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_bigdata_salary_range`;;;;;
CREATE TABLE `trendata_bigdata_salary_range` (
  `trendata_bigdata_salary_range_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_salary_range_min` int(11) DEFAULT NULL,
  `trendata_bigdata_salary_range_max` int(11) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_salary_range_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_bigdata_user`;;;;;
CREATE TABLE `trendata_bigdata_user` (
  `trendata_bigdata_user_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_user_login` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_first_name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_middle_name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_last_name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_email` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_dob` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_department` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_rehire_date` date DEFAULT NULL,
  `trendata_bigdata_user_position_start_date` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_previous_position_start_date` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_country` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_org_level` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_current_job_code` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_industry_salary` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_salary` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_salary_1_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_salary_2_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_salary_3_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_salary_4_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_performance_percentage_this_year` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_performance_percentage_1_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_performance_percentage_2_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_performance_percentage_3_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_performance_percentage_4_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_remote_employee` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_voluntary_termination` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_prof_development` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_posting_date` date DEFAULT NULL,
  `trendata_bigdata_user_absences` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_successor` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_benefit_costs` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_benefit_costs_1_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_benefit_costs_2_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_benefit_costs_3_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_benefit_costs_4_year_ago` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_employee_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_user_manager_employee_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_employee_type_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_gender_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_nationality_country_id` int(10) unsigned DEFAULT NULL,
  `trendata_bigdata_hire_source_id` int(10) unsigned DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_user_id`),
  KEY `trendata_bigdata_nationality_country_id` (`trendata_bigdata_nationality_country_id`),
  KEY `trendata_bigdata_hire_source_id` (`trendata_bigdata_hire_source_id`),
  KEY `trendata_bigdata_employee_type_id` (`trendata_bigdata_employee_type_id`),
  KEY `trendata_bigdata_gender_id` (`trendata_bigdata_gender_id`),
  KEY `trendata_bigdata_user_employee_id` (`trendata_bigdata_user_employee_id`),
  CONSTRAINT `trendata_bigdata_user_ibfk_10` FOREIGN KEY (`trendata_bigdata_gender_id`) REFERENCES `trendata_bigdata_gender` (`trendata_bigdata_gender_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_bigdata_user_ibfk_7` FOREIGN KEY (`trendata_bigdata_nationality_country_id`) REFERENCES `trendata_bigdata_country` (`trendata_bigdata_country_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_bigdata_user_ibfk_8` FOREIGN KEY (`trendata_bigdata_hire_source_id`) REFERENCES `trendata_bigdata_hire_source` (`trendata_bigdata_hire_source_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_bigdata_user_ibfk_9` FOREIGN KEY (`trendata_bigdata_employee_type_id`) REFERENCES `trendata_bigdata_employee_type` (`trendata_bigdata_employee_type_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_bigdata_user_address`;;;;;
CREATE TABLE `trendata_bigdata_user_address` (
  `trendata_bigdata_user_address_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_user_id` int(10) unsigned NOT NULL,
  `trendata_bigdata_user_address_address` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_address_city` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_address_state` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_bigdata_user_address_zipcode` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_user_address_id`),
  KEY `trendata_bigdata_user_id` (`trendata_bigdata_user_id`),
  CONSTRAINT `trendata_bigdata_user_address_ibfk_2` FOREIGN KEY (`trendata_bigdata_user_id`) REFERENCES `trendata_bigdata_user` (`trendata_bigdata_user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_bigdata_user_education_history`;;;;;
CREATE TABLE `trendata_bigdata_user_education_history` (
  `trendata_bigdata_user_education_history_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_user_id` int(10) unsigned NOT NULL,
  `trendata_bigdata_user_education_history_level` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_user_education_history_id`),
  KEY `trendata_bigdata_user_id` (`trendata_bigdata_user_id`),
  CONSTRAINT `trendata_bigdata_user_education_history_ibfk_2` FOREIGN KEY (`trendata_bigdata_user_id`) REFERENCES `trendata_bigdata_user` (`trendata_bigdata_user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_bigdata_user_position`;;;;;
CREATE TABLE `trendata_bigdata_user_position` (
  `trendata_bigdata_user_position_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_bigdata_user_id` int(10) unsigned NOT NULL,
  `trendata_bigdata_user_position_hire_date` date DEFAULT NULL,
  `trendata_bigdata_user_position_termination_date` date DEFAULT NULL,
  `trendata_bigdata_user_position_current_job_code` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`trendata_bigdata_user_position_id`),
  KEY `trendata_bigdata_user_id` (`trendata_bigdata_user_id`),
  CONSTRAINT `trendata_bigdata_user_position_ibfk_2` FOREIGN KEY (`trendata_bigdata_user_id`) REFERENCES `trendata_bigdata_user` (`trendata_bigdata_user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_chart`;;;;;
CREATE TABLE `trendata_chart` (
  `trendata_chart_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_chart_key` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_chart_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_chart_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_chart_title_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_chart_description_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_chart_status` enum('0','1','2') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `trendata_chart_position_x` int(10) unsigned NOT NULL DEFAULT '0',
  `trendata_chart_position_y` int(10) unsigned NOT NULL DEFAULT '0',
  `trendata_chart_width` int(10) unsigned NOT NULL DEFAULT '3',
  `trendata_chart_height` int(10) unsigned NOT NULL DEFAULT '4',
  `trendata_chart_type` enum('1','2','3') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `trendata_chart_default_chart_display_type` int(10) unsigned NOT NULL DEFAULT '4',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_chart_type_id` int(10) unsigned DEFAULT NULL,
  `trendata_chart_id_parent` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_chart_id`),
  KEY `trendata_chart_default_chart_display_type` (`trendata_chart_default_chart_display_type`),
  KEY `trendata_chart_type_id` (`trendata_chart_type_id`),
  KEY `trendata_chart_id_parent` (`trendata_chart_id_parent`),
  CONSTRAINT `trendata_chart_ibfk_1` FOREIGN KEY (`trendata_chart_default_chart_display_type`) REFERENCES `trendata_chart_display_type` (`trendata_chart_display_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_chart_ibfk_2` FOREIGN KEY (`trendata_chart_type_id`) REFERENCES `trendata_chart_type` (`trendata_chart_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_chart_ibfk_3` FOREIGN KEY (`trendata_chart_id_parent`) REFERENCES `trendata_chart` (`trendata_chart_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_chart`;;;;;
INSERT INTO `trendata_chart` (`trendata_chart_id`, `trendata_chart_key`, `trendata_chart_created_by`, `trendata_chart_last_modified_by`, `trendata_chart_title_token`, `trendata_chart_description_token`, `trendata_chart_status`, `trendata_chart_position_x`, `trendata_chart_position_y`, `trendata_chart_width`, `trendata_chart_height`, `trendata_chart_type`, `trendata_chart_default_chart_display_type`, `created_at`, `updated_at`, `trendata_chart_type_id`, `trendata_chart_id_parent`) VALUES
(1,	'headcount_vs_location',	0,	0,	'db546fdc-b7f4-458f-b19c-6aa8af1ac0de',	'086a2280-1e87-40e5-9e60-6de3c4cbcec7',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(2,	'headcount_vs_departments',	0,	0,	'717ad7ed-b8eb-46e2-a6fd-cfb288d71408',	'8eb827e5-5c09-4071-b4d8-77f85c6d7871',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(3,	'headcount_vs_designations',	0,	0,	'fc166853-115d-4a95-a0aa-6e9a9603064f',	'07663e4a-cf66-4d1e-9d79-bb04d6bb8dcb',	'1',	0,	0,	3,	4,	'1',	4,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(4,	'headcount_vs_Time',	0,	0,	'c9b1629d-e78e-4362-8100-4e97346e279c',	'145d1c36-b8c8-4a69-b64f-06e32530aeea',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(5,	'talent_vs_potential',	0,	0,	'1dccc3ab-2bcd-4cae-b88f-cdfd1c0508fc',	'69a69115-3ce3-4d0d-9493-a4d8c2143c64',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(6,	'performance_rating',	0,	0,	'e5aacd6c-e3dc-4dc3-9e4c-18d4833d6a41',	'3ba782d6-8b1d-4913-a4a4-0fe59421f862',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(7,	'manager_performance',	0,	0,	'16395b33-b1c7-413a-9d60-16b59119c0e7',	'8f3c7058-fd70-4cdf-84a8-622eba2450f5',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(8,	'above_average_performer_yield_ratio',	0,	0,	'94063e63-fc20-4869-9f48-f5f3c4290cce',	'5f827ade-bd06-4cc2-90ae-8cd6648ce733',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(9,	'profit_per_employee',	0,	0,	'1189b79e-856b-4e77-bd1c-f63144ba1bc0',	'4a5a8d74-cacb-40fb-8d4f-8d3a7a87d8ac',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(10,	'employee_turnover_overall',	0,	0,	'ca4a84d1-33d8-4cee-afbc-a44e02b53c63',	'd5414e1b-82f5-49a1-b3a5-97b9a1df7633',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(11,	'employee_turnover_by_department',	0,	0,	'e7f16e32-4bf2-4e40-8f3e-fc97bd126068',	'90c13d2e-92b8-447f-a698-672112a95b41',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(12,	'employee_turnover_by_manager',	0,	0,	'f08b35e2-27f8-451b-966d-79d42f304fe9',	'60f7bbdc-7ebf-4dcd-a087-dbf7d4140b1a',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(13,	'attrition_rate_vs_reasons',	0,	0,	'2c511354-a824-4012-a022-fccef152af77',	'996d58af-0ddb-4035-9081-189375e6bcbf',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(14,	'average_tenure_vs_department',	0,	0,	'6aa9bda3-e8ef-4975-9040-b79630c2d18b',	'9d5ea324-5fe5-40d6-8280-8325693d8897',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(15,	'average_tenure',	0,	0,	'9d682fb3-dd78-466d-8a11-7508d46805b8',	'8183f572-c1da-4b8a-ac3f-82ff4e5afc45',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(16,	'equal_opportunities',	0,	0,	'87440058-bb5f-4fb6-ae71-0a7c114875bb',	'a6067e33-8b30-4ef3-b8d3-bbda404f80a1',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(17,	'salary_deviation',	0,	0,	'5bde7342-bfc9-45a3-b4d8-4e4e3156b7d7',	'0a3c5546-7e7b-4ec9-b98c-0444bdf1b13b',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(18,	'profit_per_employee',	0,	0,	'a4eb79d9-9406-44d6-9eb1-7df0cd797e0c',	'9d3b3751-2783-471a-9082-33671bb1c618',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(19,	'holiday_by_departments',	0,	0,	'dd8a6840-d022-4f15-b7aa-5b34c50fc853',	'8a04f332-7fd2-4a8b-9876-c4bdcf937dc1',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(20,	'sickness_by_departments',	0,	0,	'0dbeaa22-aab2-40c1-932e-e1288da41c4e',	'450066d7-0c6f-49b8-b3ad-153760c9e7d7',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(21,	'department_expenses',	0,	0,	'07695ea0-89e8-4334-9e02-c501935d7451',	'046c5676-87d3-4262-b9f4-a6319949b6fc',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(22,	'absence_rate',	0,	0,	'aa3ea071-5203-4b19-80b4-d9daaf3fca37',	'f0032877-6c4d-4acf-a1c5-94390ae97827',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(23,	'compa_ratio_calculation',	0,	0,	'9da1f3b3-8ab9-414d-8313-237fa54b5bdd',	'dd2abfb0-d12f-403f-910b-b8b025c2ad87',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(24,	'full_time_equivalents',	0,	0,	'de1c19cf-f7f0-407e-92b1-d5644d0cac74',	'2c2a4149-f0fb-42a8-b8f7-141edafffde8',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(25,	'health_care_costs',	0,	0,	'6159d62c-19ad-4f6c-9a8a-58871454fbd6',	'cc70b9f7-ea49-426f-b220-cf0447de59f5',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(26,	'interview_accept_yield_ratio',	0,	0,	'999b66d5-82f8-45e3-a7eb-c714f91322f1',	'7e13319f-6c68-425e-ace2-3ec8618601a8',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(27,	'interview_offer_yield_ratio',	0,	0,	'89e835d6-5e56-4d53-8187-43ad08064ca9',	'ddf6cac5-c034-4d48-ae2f-ae550f78f4ba',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(28,	'employee_satisfaction',	0,	0,	'f3aead0c-ac9b-4d74-a973-1be5f3620424',	'bf668eef-a8b4-4c91-8875-f219245a8267',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(29,	'gender_equality',	0,	0,	'3583300f-1899-4643-8b6d-6a12e28da956',	'1345a761-2ba1-4745-b18c-dbf87be2f8d0',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(30,	'job_empowerment',	0,	0,	'b550e591-c278-42fe-aff3-8594888605c8',	'1e6f4711-5195-4d97-9d12-523c826b1775',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(31,	'work_life_balance',	0,	0,	'56481e3c-aa73-4f0e-a477-a33212415c4f',	'd66ac665-5d5d-4633-bf18-7bc2a98c2b2e',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(32,	'global_presence',	0,	0,	'ac918054-beb2-4de4-b3e4-87be1691f675',	'0ebf4549-5bc7-419b-8c8c-9ea107e787ab',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(33,	'employee_engagement_score',	0,	0,	'22373c87-98ea-48fa-b8f6-270ea1c46d1d',	'876c8361-7459-43b6-b49e-e4c7ee59418b',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(34,	'workers_compensation_cost_per_employee',	0,	0,	'9fca591c-07da-49d1-bd18-d6c9c4c01cdc',	'a7913bee-1d9f-494e-84fb-d4bfd74d6a4f',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(35,	'workers_compensation_incident_rate',	0,	0,	'3efa59d3-8e0b-4be2-98a7-ccec581c85d4',	'4bb54b64-a56f-46f2-8ae5-ca79bb198a77',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(36,	'workers_compensation_severity_rate',	0,	0,	'f0fee89d-d445-4c9f-ac16-a2e52a52bda1',	'99d6ab5b-154d-47e9-acb0-5a502ade9306',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(37,	'training_cost_per_employee_vs_time',	0,	0,	'45c0107e-a062-43cd-8ad0-64fee2e9b905',	'c2257672-3019-4baf-9c47-7ac7fccb95f2',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(38,	'training_cost_vs_departments',	0,	0,	'b8bd4acc-4f42-44c7-ac24-d2ab44ae29d1',	'455cec57-551b-4f56-9b78-2e8de25c9e30',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(39,	'employees_training_factor',	0,	0,	'4b5ab9e9-939e-4833-b8bb-809ba81d5430',	'cf864f54-8e27-4578-ad20-56aea90040a9',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(40,	'recruiting_expenses',	0,	0,	'766ea7e7-ce54-4f02-8dad-e69654a6d1d2',	'ab4e98e7-f528-45b1-a559-f8935f10db0f',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(41,	'quality_of_new_hires',	0,	0,	'6266b8c2-fddd-4353-a26e-01ffb84c2792',	'71cc7487-8063-4011-aa0d-9faad7043e06',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(42,	'time_to_fill_open_positions',	0,	0,	'1bc6a4ba-c931-466d-8f8f-1547452c740e',	'fb16bc43-0ed8-4f25-9590-cd88e2fa2476',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(43,	'on_boarding_cost',	0,	0,	'6b6e7dbf-94e6-49d1-9474-ab815da07088',	'915e4b0e-66c0-401d-8429-1484aacf89d4',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(44,	'on_boarding_time',	0,	0,	'26722b1e-f590-41dd-88a8-dd3ed75bf1fd',	'2f919468-171c-4621-8de0-0825f243bfd0',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(45,	'employee_vs_monthly_salary_slab',	0,	0,	'e57a302c-11a3-4d6c-88d0-fd9a16b76a31',	'67099a19-56de-4790-b4d7-d450f44b0004',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(46,	'employee_vs_nationality',	0,	0,	'74ab88fb-90ec-4202-b020-9edb8ae0c5bf',	'76a09bcf-43c9-431d-84e2-8227cc138dcf',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(47,	'new_joining_vs_resignation',	0,	0,	'458cf396-a6a8-4862-9525-44e4c127cfba',	'16a8b2ca-18f7-4c10-ba34-29e698878252',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(48,	'human_resource_ratio',	0,	0,	'33d68c6f-be9b-4398-9aa3-573f21eadda7',	'9ba926af-0a9a-4a21-ad5a-c49eb2ee7455',	'1',	0,	0,	3,	4,	'1',	4,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(49,	'hiring_process',	0,	0,	'd995d16f-791f-48e8-9937-e11fec240598',	'c25a705e-406c-4e7b-aef2-f519911a9314',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(50,	'roi',	0,	0,	'dbeeda96-4111-4d04-9b30-4f221146e85a',	'f9a1bcf3-74a0-4c3b-bd27-0707d61ae9ee',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(51,	'cost_vs_revenue',	0,	0,	'fb549a75-3de3-48ce-ab97-f9fbef0def19',	'77238613-3f6c-4a93-9a0c-59b02b2f1d62',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(52,	'hr_expenses',	0,	0,	'7e34a459-2320-43bf-9146-30f9e483b89a',	'7afaa113-8fad-4b6b-93d3-1cd6e954a253',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(53,	'labor_cost_as_percent_of_revenue',	0,	0,	'050c3e7b-52c7-47e4-beb1-3b1e376c0a1b',	'4ad51192-d357-48e9-ace3-98ad5552c5fe',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(54,	'progress_of_objectives',	0,	0,	'fe5d58d5-60f9-4439-97bc-640bfa4f4743',	'c30217b2-9a56-4559-b504-ac29343f1b71',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(55,	'source_of_hire',	0,	0,	'8736c65c-f63a-463b-a1d3-8769bd869555',	'657b1d6a-880a-4cc6-90a8-68fcab4f8e80',	'1',	0,	0,	3,	4,	'1',	2,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(56,	'job_offer_yield_ratio',	0,	0,	'a9d34123-db81-4edc-8c2b-6e3226b8eb03',	'd7d190cc-91db-4e95-967f-5b334e05d66e',	'1',	0,	0,	3,	4,	'1',	6,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(57,	'employees_cost_with_revenue_details',	0,	0,	'd0b851a1c75a48ca9543fca0497625aa',	'7a66069d0afe4a5aaa8b5befa2b2f5c2',	'1',	0,	0,	3,	4,	'3',	8,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(58,	'hiring_cycle_time',	0,	0,	'd3ae9c70801a4560a810628f3b3f660a',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(59,	'acceptance_rate',	0,	0,	'6a508904e34446978168a63ea50d8adf',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(60,	'average_salary',	0,	0,	'602ceaec98474415b8e8efe9b485b53d',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	NULL,	NULL),
(61,	'salary_deviation',	0,	0,	'number_of_employee',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-03-10 10:47:14',	'2017-03-10 10:47:14',	1,	NULL),
(62,	'salary_deviation',	0,	0,	'number_of_employee_2',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-03-14 14:57:40',	'2017-03-14 14:57:40',	2,	61),
(63,	'salary_deviation',	0,	0,	'number_of_employee_3',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-03-15 18:36:17',	'2017-03-15 18:36:17',	3,	61),
(64,	'salary_deviation',	0,	0,	'number_of_employee_4',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-03-22 14:59:13',	'2017-03-22 14:59:13',	4,	61),
(65,	'manager_performance',	0,	0,	'16395b33-b1c7-413a-9d60-16b59119c0e7',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-03-27 16:31:53',	'2017-03-27 16:31:53',	3,	7),
(66,	'manager_performance',	0,	0,	'16395b33-b1c7-413a-9d60-16b59119c0e7',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-03-27 16:31:56',	'2017-03-27 16:31:56',	4,	7),
(67,	'headcount_vs_location',	0,	0,	'headcount_vs_location',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-03-29 15:17:08',	'2017-03-29 15:17:08',	3,	1),
(68,	'headcount_vs_location',	0,	0,	'headcount_vs_location',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-03-29 15:17:46',	'2017-03-29 15:17:46',	4,	1),
(69,	'gender_equality',	0,	0,	'3583300f-1899-4643-8b6d-6a12e28da956',	'1345a761-2ba1-4745-b18c-dbf87be2f8d0',	'1',	0,	0,	3,	4,	'2',	10,	'2017-04-07 15:47:03',	'2017-04-07 15:47:03',	2,	29),
(70,	'qweqweqweqweqweqwe',	0,	0,	'16395b33-b1c7-413a-9d60-16b59119c0e7',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-04-12 15:37:57',	'2017-04-12 15:37:57',	2,	7),
(71,	'revenue_per_employee',	0,	0,	'revenue_per_employee',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-04-18 12:51:46',	'2017-04-18 12:51:46',	1,	NULL),
(72,	'revenue_per_employee',	0,	0,	'revenue_per_employee',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-04-18 15:24:51',	'2017-04-18 15:24:51',	2,	71),
(73,	'absences_average',	0,	0,	'absences_average',	'',	'1',	0,	0,	3,	4,	'2',	9,	'2017-04-19 17:20:02',	'2017-04-19 17:20:02',	1,	NULL),
(74,	'professional_development',	0,	0,	'professional_development',	'',	'1',	0,	0,	3,	4,	'1',	6,	'2017-04-21 18:30:17',	'2017-04-21 18:30:17',	1,	NULL),
(75,	'successors_identified',	0,	0,	'successors_identified',	'',	'1',	0,	0,	3,	4,	'1',	2,	'2017-04-25 16:01:39',	'2017-04-25 16:01:39',	1,	NULL);;;;;

DROP TABLE IF EXISTS `trendata_chart_display_type`;;;;;
CREATE TABLE `trendata_chart_display_type` (
  `trendata_chart_display_type_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_chart_display_type_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_chart_display_type_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_chart_display_type_key` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_chart_display_type_title` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_chart_display_type_description` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_chart_display_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_chart_display_type`;;;;;
INSERT INTO `trendata_chart_display_type` (`trendata_chart_display_type_id`, `trendata_chart_display_type_created_by`, `trendata_chart_display_type_last_modified_by`, `trendata_chart_display_type_key`, `trendata_chart_display_type_title`, `trendata_chart_display_type_description`, `created_at`, `updated_at`) VALUES
(1,	0,	0,	'scrollline2d',	'scrollline2d',	'multiline chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(2,	0,	0,	'doughnut2d',	'doughnut2d',	'doughnut chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(3,	0,	0,	'scrollstackedcolumn2d',	'scrollstackedcolumn2d',	'stacked column chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(4,	0,	0,	'scrollarea2d',	'scrollarea2d',	'multi-series area chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(5,	0,	0,	'mssplinearea',	'mssplinearea',	'multi-series spine chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(6,	0,	0,	'scrollcolumn2d',	'scrollcolumn2d',	'multi-series column chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(7,	0,	0,	'mscolumn2d',	'mscolumn2d',	'multi-series 4 column chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(8,	0,	0,	'table',	'table',	'table',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(9,	0,	0,	'value_box',	'value_box',	'value_box',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(10,	0,	0,	'column2d',	'column2d',	'column2d',	'2017-04-07 14:21:40',	'2017-04-07 14:21:40');;;;;

DROP TABLE IF EXISTS `trendata_chart_tag`;;;;;
CREATE TABLE `trendata_chart_tag` (
  `trendata_chart_tag_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_chart_tag_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_chart_tag_last_modified_by` int(10) unsigned DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_chart_id` int(10) unsigned DEFAULT NULL,
  `trendata_tag_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_chart_tag_id`),
  KEY `trendata_chart_id` (`trendata_chart_id`),
  KEY `trendata_tag_id` (`trendata_tag_id`),
  CONSTRAINT `trendata_chart_tag_ibfk_1` FOREIGN KEY (`trendata_chart_id`) REFERENCES `trendata_chart` (`trendata_chart_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_chart_tag_ibfk_2` FOREIGN KEY (`trendata_tag_id`) REFERENCES `trendata_tag` (`trendata_tag_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_chart_tag`;;;;;
INSERT INTO `trendata_chart_tag` (`trendata_chart_tag_id`, `trendata_chart_tag_created_by`, `trendata_chart_tag_last_modified_by`, `created_at`, `updated_at`, `trendata_chart_id`, `trendata_tag_id`) VALUES
(1,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1,	1),
(2,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1,	2),
(3,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	2,	1),
(4,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	2,	3),
(5,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	3,	1),
(6,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	3,	4),
(7,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	4,	1),
(8,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	5,	5),
(9,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	5,	6),
(10,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	6,	6),
(11,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	7,	6),
(12,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	7,	7),
(13,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	8,	6),
(14,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	9,	9),
(15,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	9,	8),
(16,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	10,	9),
(17,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	10,	10),
(18,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	11,	9),
(19,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	11,	3),
(20,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	12,	9),
(21,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	12,	7),
(22,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	13,	11),
(23,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	14,	3),
(24,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	14,	12),
(25,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	15,	12),
(26,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	16,	13),
(27,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	17,	14),
(28,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	17,	29),
(29,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	18,	9),
(30,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	19,	3),
(31,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	19,	16),
(32,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	20,	3),
(33,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	20,	17),
(34,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	21,	3),
(35,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	21,	18),
(36,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	22,	19),
(37,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	23,	20),
(38,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	24,	21),
(39,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	25,	22),
(40,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	26,	23),
(41,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	27,	23),
(42,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	28,	9),
(43,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	28,	24),
(44,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	29,	25),
(45,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	29,	26),
(46,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	30,	27),
(47,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	25,	28),
(48,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	31,	30),
(49,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	32,	32),
(50,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	32,	31),
(51,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	33,	9),
(52,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	34,	33),
(53,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	33,	34),
(54,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	35,	33),
(55,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	36,	33),
(56,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	36,	35),
(57,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	37,	36),
(58,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	37,	9),
(59,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	38,	36),
(60,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	38,	3),
(61,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	39,	9),
(62,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	39,	36),
(63,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	40,	37),
(64,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	40,	18),
(65,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	41,	38),
(66,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	43,	41),
(67,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	44,	39),
(68,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	45,	9),
(69,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	45,	14),
(70,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	46,	9),
(71,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	46,	40),
(72,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	48,	41),
(73,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	50,	42),
(74,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	52,	41),
(75,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	52,	18);;;;;

DROP TABLE IF EXISTS `trendata_chart_type`;;;;;
CREATE TABLE `trendata_chart_type` (
  `trendata_chart_type_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_chart_type_name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_chart_type_id`),
  UNIQUE KEY `trendata_chart_type_trendata_chart_type_name` (`trendata_chart_type_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_chart_type`;;;;;
INSERT INTO `trendata_chart_type` (`trendata_chart_type_id`, `trendata_chart_type_name`, `created_at`, `updated_at`) VALUES
(1,	'metric',	'2017-03-13 17:05:53',	'2017-03-13 17:05:53'),
(2,	'drilldown',	'2017-03-13 17:06:13',	'2017-03-13 17:06:13'),
(3,	'analytics',	'2017-03-13 17:06:25',	'2017-03-13 17:06:25'),
(4,	'predictive',	'2017-03-13 17:06:50',	'2017-03-13 17:06:50');;;;;

DROP TABLE IF EXISTS `trendata_connector_csv`;;;;;
CREATE TABLE `trendata_connector_csv` (
  `trendata_connector_csv_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_connector_csv_type` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_connector_csv_file_type` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_connector_csv_filename` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_user_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_connector_csv_id`),
  KEY `trendata_user_id` (`trendata_user_id`),
  CONSTRAINT `trendata_connector_csv_ibfk_1` FOREIGN KEY (`trendata_user_id`) REFERENCES `trendata_user` (`trendata_user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_connector_csv`;;;;;
INSERT INTO `trendata_connector_csv` (`trendata_connector_csv_id`, `trendata_connector_csv_type`, `trendata_connector_csv_file_type`, `trendata_connector_csv_filename`, `created_at`, `updated_at`, `trendata_user_id`) VALUES
(1,	'tuff',	'users',	'1_1490622590254.csv',	'2017-03-27 13:49:50',	'2017-03-27 13:49:50',	1),
(5,	'tuff',	'users',	'1_1490625454212.csv',	'2017-03-27 14:37:34',	'2017-03-27 14:37:34',	1),
(6,	'tuff',	'users',	'1_1490625931730.csv',	'2017-03-27 14:45:31',	'2017-03-27 14:45:31',	1),
(7,	'tuff',	'users',	'1_1490626136770.csv',	'2017-03-27 14:48:56',	'2017-03-27 14:48:56',	1),
(8,	'tuff',	'users',	'1_1490627330727.csv',	'2017-03-27 15:08:50',	'2017-03-27 15:08:50',	1),
(10,	'tuff',	'users',	'1_1490711308076.csv',	'2017-03-28 14:28:28',	'2017-03-28 14:28:28',	1),
(11,	'tuff',	'users',	'1_1490863770540.csv',	'2017-03-30 08:49:30',	'2017-03-30 08:49:30',	1),
(15,	'tuff',	'users',	'1_1490871994228.csv',	'2017-03-30 11:06:34',	'2017-03-30 11:06:34',	1),
(16,	'tuff',	'users',	'1_1490874208707.csv',	'2017-03-30 11:43:28',	'2017-03-30 11:43:28',	1),
(17,	'tuff',	'users',	'1_1490874253763.csv',	'2017-03-30 11:44:13',	'2017-03-30 11:44:13',	1),
(18,	'tuff',	'users',	'1_1490876448661.csv',	'2017-03-30 12:20:48',	'2017-03-30 12:20:48',	1),
(19,	'tuff',	'users',	'1_1490876806668.csv',	'2017-03-30 12:26:46',	'2017-03-30 12:26:46',	1),
(20,	'tuff',	'users',	'1_1490877489177.csv',	'2017-03-30 12:38:09',	'2017-03-30 12:38:09',	1),
(21,	'tuff',	'users',	'1_1490877601207.csv',	'2017-03-30 12:40:01',	'2017-03-30 12:40:01',	1),
(22,	'tuff',	'users',	'1_1490877657920.csv',	'2017-03-30 12:40:57',	'2017-03-30 12:40:57',	1),
(23,	'tuff',	'users',	'1_1490877824332.csv',	'2017-03-30 12:43:44',	'2017-03-30 12:43:44',	1),
(24,	'tuff',	'users',	'1_1490878540047.csv',	'2017-03-30 12:55:40',	'2017-03-30 12:55:40',	1),
(25,	'tuff',	'users',	'1_1490878825505.csv',	'2017-03-30 13:00:25',	'2017-03-30 13:00:25',	1),
(26,	'tuff',	'users',	'1_1490879680067.csv',	'2017-03-30 13:14:40',	'2017-03-30 13:14:40',	1),
(27,	'tuff',	'users',	'1_1490880941213.csv',	'2017-03-30 13:35:41',	'2017-03-30 13:35:41',	1),
(28,	'tuff',	'users',	'1_1490881100760.csv',	'2017-03-30 13:38:20',	'2017-03-30 13:38:20',	1),
(29,	'tuff',	'users',	'1_1490881133739.csv',	'2017-03-30 13:38:53',	'2017-03-30 13:38:53',	1),
(30,	'tuff',	'users',	'1_1490881707946.csv',	'2017-03-30 13:48:27',	'2017-03-30 13:48:27',	1),
(35,	'tuff',	'users',	'1_1490962882120.csv',	'2017-03-31 12:21:22',	'2017-03-31 12:21:22',	1),
(37,	'tuff',	'users',	'1_1490963497352.csv',	'2017-03-31 12:31:37',	'2017-03-31 12:31:37',	1),
(39,	'tuff',	'users',	'1_1490972010818.csv',	'2017-03-31 14:53:30',	'2017-03-31 14:53:30',	1),
(40,	'tuff',	'users',	'1_1491307375498.csv',	'2017-04-04 12:02:55',	'2017-04-04 12:02:55',	1),
(41,	'tuff',	'users',	'1_1491315092859.csv',	'2017-04-04 14:11:32',	'2017-04-04 14:11:32',	1),
(42,	'tuff',	'users',	'1_1491315115048.csv',	'2017-04-04 14:11:55',	'2017-04-04 14:11:55',	1),
(43,	'tuff',	'users',	'1_1491315153319.csv',	'2017-04-04 14:12:33',	'2017-04-04 14:12:33',	1),
(44,	'tuff',	'users',	'1_1491315257540.csv',	'2017-04-04 14:14:17',	'2017-04-04 14:14:17',	1),
(45,	'tuff',	'users',	'1_1491315291360.csv',	'2017-04-04 14:14:51',	'2017-04-04 14:14:51',	1),
(48,	'tuff',	'users',	'1_1491388295702.csv',	'2017-04-05 10:31:35',	'2017-04-05 10:31:35',	1),
(49,	'tuff',	'users',	'1_1491388597393.csv',	'2017-04-05 10:36:37',	'2017-04-05 10:36:37',	1),
(50,	'tuff',	'users',	'1_1491388635426.csv',	'2017-04-05 10:37:15',	'2017-04-05 10:37:15',	1),
(51,	'tuff',	'users',	'1_1491388754178.csv',	'2017-04-05 10:39:14',	'2017-04-05 10:39:14',	1),
(52,	'tuff',	'users',	'1_1491389080398.csv',	'2017-04-05 10:44:40',	'2017-04-05 10:44:40',	1),
(54,	'tuff',	'users',	'1_1491393206412.csv',	'2017-04-05 11:53:26',	'2017-04-05 11:53:26',	1),
(55,	'tuff',	'users',	'1_1491393473191.csv',	'2017-04-05 11:57:53',	'2017-04-05 11:57:53',	1),
(56,	'tuff',	'users',	'1_1491395693068.csv',	'2017-04-05 12:34:53',	'2017-04-05 12:34:53',	1),
(58,	'tuff',	'users',	'1_1491396431493.csv',	'2017-04-05 12:47:11',	'2017-04-05 12:47:11',	1),
(59,	'tuff',	'users',	'1_1491396472661.csv',	'2017-04-05 12:47:52',	'2017-04-05 12:47:52',	1),
(60,	'tuff',	'users',	'1_1491396610620.csv',	'2017-04-05 12:50:10',	'2017-04-05 12:50:10',	1),
(61,	'tuff',	'users',	'1_1491396710223.csv',	'2017-04-05 12:51:50',	'2017-04-05 12:51:50',	1),
(62,	'tuff',	'users',	'1_1491396808550.csv',	'2017-04-05 12:53:28',	'2017-04-05 12:53:28',	1),
(63,	'tuff',	'users',	'1_1491397722610.csv',	'2017-04-05 13:08:42',	'2017-04-05 13:08:42',	1),
(64,	'tuff',	'users',	'1_1491559806064.csv',	'2017-04-07 10:10:06',	'2017-04-07 10:10:06',	1),
(65,	'tuff',	'users',	'1_1491572219767.csv',	'2017-04-07 13:36:59',	'2017-04-07 13:36:59',	1),
(66,	'tuff',	'users',	'1_1491572247610.csv',	'2017-04-07 13:37:27',	'2017-04-07 13:37:27',	1),
(67,	'tuff',	'users',	'1_1491818999847.csv',	'2017-04-10 10:09:59',	'2017-04-10 10:09:59',	1),
(68,	'tuff',	'users',	'1_1491819469816.csv',	'2017-04-10 10:17:49',	'2017-04-10 10:17:49',	1),
(69,	'tuff',	'users',	'1_1491819817922.csv',	'2017-04-10 10:23:37',	'2017-04-10 10:23:37',	1),
(70,	'tuff',	'users',	'1_1491820054265.csv',	'2017-04-10 10:27:34',	'2017-04-10 10:27:34',	1),
(71,	'tuff',	'users',	'1_1491820171226.csv',	'2017-04-10 10:29:31',	'2017-04-10 10:29:31',	1),
(72,	'tuff',	'users',	'1_1491820338425.csv',	'2017-04-10 10:32:18',	'2017-04-10 10:32:18',	1),
(73,	'tuff',	'users',	'1_1491820407184.csv',	'2017-04-10 10:33:27',	'2017-04-10 10:33:27',	1),
(74,	'tuff',	'users',	'1_1491820515925.csv',	'2017-04-10 10:35:15',	'2017-04-10 10:35:15',	1),
(75,	'tuff',	'users',	'1_1491824396313.csv',	'2017-04-10 11:39:56',	'2017-04-10 11:39:56',	1),
(76,	'tuff',	'users',	'1_1491826060876.csv',	'2017-04-10 12:07:40',	'2017-04-10 12:07:40',	1),
(77,	'tuff',	'users',	'1_1491826556502.csv',	'2017-04-10 12:15:56',	'2017-04-10 12:15:56',	1),
(78,	'tuff',	'users',	'1_1491826574322.csv',	'2017-04-10 12:16:14',	'2017-04-10 12:16:14',	1),
(79,	'tuff',	'users',	'1_1491826940748.csv',	'2017-04-10 12:22:20',	'2017-04-10 12:22:20',	1),
(80,	'tuff',	'users',	'1_1491827052581.csv',	'2017-04-10 12:24:12',	'2017-04-10 12:24:12',	1),
(81,	'tuff',	'users',	'1_1491895133257.csv',	'2017-04-11 07:18:53',	'2017-04-11 07:18:53',	1),
(82,	'tuff',	'users',	'1_1492004077062.csv',	'2017-04-12 13:34:37',	'2017-04-12 13:34:37',	1),
(83,	'tuff',	'users',	'1_1492526535439.csv',	'2017-04-18 14:42:15',	'2017-04-18 14:42:15',	1),
(86,	'tuff',	'users',	'1_1492609418006.csv',	'2017-04-19 13:43:38',	'2017-04-19 13:43:38',	1),
(87,	'tuff',	'users',	'1_1492776647914.csv',	'2017-04-21 12:10:47',	'2017-04-21 12:10:48',	1),
(88,	'tuff',	'users',	'1_1492776721442.csv',	'2017-04-21 12:12:01',	'2017-04-21 12:12:01',	1),
(89,	'tuff',	'users',	'1_1492776792425.csv',	'2017-04-21 12:13:12',	'2017-04-21 12:13:12',	1),
(90,	'tuff',	'users',	'1_1493284840574.csv',	'2017-04-27 09:20:40',	'2017-04-27 09:20:40',	1),
(91,	'tuff',	'users',	'1_1493284992370.csv',	'2017-04-27 09:23:12',	'2017-04-27 09:23:12',	1),
(92,	'tuff',	'users',	'1_1493286523295.csv',	'2017-04-27 09:48:43',	'2017-04-27 09:48:43',	1),
(93,	'tuff',	'users',	'1_1493296902178.csv',	'2017-04-27 12:41:42',	'2017-04-27 12:41:42',	1),
(94,	'tuff',	'users',	'1_1493308960003.csv',	'2017-04-27 16:02:40',	'2017-04-27 16:02:40',	1),
(95,	'tuff',	'users',	'1_1493309148439.csv',	'2017-04-27 16:05:48',	'2017-04-27 16:05:48',	1),
(96,	'tuff',	'users',	'1_1493309430943.csv',	'2017-04-27 16:10:30',	'2017-04-27 16:10:30',	1),
(97,	'tuff',	'users',	'1_1493309630393.csv',	'2017-04-27 16:13:50',	'2017-04-27 16:13:50',	1),
(98,	'tuff',	'users',	'1_1493309654738.csv',	'2017-04-27 16:14:14',	'2017-04-27 16:14:14',	1),
(99,	'tuff',	'users',	'1_1493309743302.csv',	'2017-04-27 16:15:43',	'2017-04-27 16:15:43',	1),
(100,	'tuff',	'users',	'1_1493309901322.csv',	'2017-04-27 16:18:21',	'2017-04-27 16:18:21',	1),
(101,	'tuff',	'users',	'1_1493309915259.csv',	'2017-04-27 16:18:35',	'2017-04-27 16:18:35',	1),
(102,	'tuff',	'users',	'1_1493310014259.csv',	'2017-04-27 16:20:14',	'2017-04-27 16:20:14',	1),
(103,	'tuff',	'users',	'1_1493310516104.csv',	'2017-04-27 16:28:36',	'2017-04-27 16:28:36',	1),
(104,	'tuff',	'users',	'1_1493311845115.csv',	'2017-04-27 16:50:45',	'2017-04-27 16:50:45',	1),
(105,	'tuff',	'users',	'1_1493323597766.csv',	'2017-04-27 20:06:37',	'2017-04-27 20:06:37',	1);;;;;

DROP TABLE IF EXISTS `trendata_country`;;;;;
CREATE TABLE `trendata_country` (
  `trendata_country_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_country_name` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_country_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_country`;;;;;

DROP TABLE IF EXISTS `trendata_dashboard`;;;;;
CREATE TABLE `trendata_dashboard` (
  `trendata_dashboard_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_dashboard_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_dashboard_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_dashboard_title_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_dashboard_description_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_dashboard_status` enum('0','1','2') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `trendata_dashboard_is_default` tinyint(1) NOT NULL DEFAULT '0',
  `trendata_dashboard_icon` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_dashboard_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_dashboard`;;;;;
INSERT INTO `trendata_dashboard` (`trendata_dashboard_id`, `trendata_dashboard_created_by`, `trendata_dashboard_last_modified_by`, `trendata_dashboard_title_token`, `trendata_dashboard_description_token`, `trendata_dashboard_status`, `trendata_dashboard_is_default`, `trendata_dashboard_icon`, `created_at`, `updated_at`) VALUES
(1,	0,	0,	'c0eadd82-4bff-4e2f-bbf2-c6ad630f6406',	'',	'1',	0,	'fa fa-tachometer',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00');;;;;

DROP TABLE IF EXISTS `trendata_dashboard_chart`;;;;;
CREATE TABLE `trendata_dashboard_chart` (
  `trendata_dashboard_chart_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_dashboard_chart_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_dashboard_chart_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_dashboard_chart_order` int(10) unsigned NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_dashboard_id` int(10) unsigned DEFAULT NULL,
  `trendata_chart_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_dashboard_chart_id`),
  KEY `trendata_dashboard_id` (`trendata_dashboard_id`),
  KEY `trendata_chart_id` (`trendata_chart_id`),
  CONSTRAINT `trendata_dashboard_chart_ibfk_1` FOREIGN KEY (`trendata_dashboard_id`) REFERENCES `trendata_dashboard` (`trendata_dashboard_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_dashboard_chart_ibfk_2` FOREIGN KEY (`trendata_chart_id`) REFERENCES `trendata_chart` (`trendata_chart_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_dashboard_chart`;;;;;
INSERT INTO `trendata_dashboard_chart` (`trendata_dashboard_chart_id`, `trendata_dashboard_chart_created_by`, `trendata_dashboard_chart_last_modified_by`, `trendata_dashboard_chart_order`, `created_at`, `updated_at`, `trendata_dashboard_id`, `trendata_chart_id`) VALUES
(1,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-05-03 00:14:48',	1,	7),
(3,	0,	0,	2,	'2017-01-01 00:00:00',	'2017-05-03 00:14:48',	1,	30),
(4,	0,	0,	1,	'2017-01-01 00:00:00',	'2017-05-03 00:14:48',	1,	29),
(6,	0,	0,	6,	'2017-01-01 00:00:00',	'2017-05-03 00:14:48',	1,	17),
(9,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1,	58),
(10,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1,	59),
(11,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1,	60),
(13,	0,	0,	0,	'2017-03-10 10:59:50',	'2017-03-10 12:59:46',	1,	61),
(14,	NULL,	NULL,	4,	'2017-04-19 15:53:26',	'2017-05-03 00:14:48',	1,	55),
(15,	0,	0,	0,	'2017-04-18 12:58:15',	'2017-04-18 12:58:15',	1,	71),
(16,	0,	0,	0,	'2017-04-19 17:41:05',	'2017-04-19 17:41:05',	1,	73),
(18,	0,	0,	3,	'2017-04-21 18:37:10',	'2017-05-03 00:14:48',	1,	74),
(19,	0,	0,	5,	'2017-04-25 16:05:54',	'2017-05-03 00:14:48',	1,	75);;;;;

DROP TABLE IF EXISTS `trendata_dashboard_tile`;;;;;
CREATE TABLE `trendata_dashboard_tile` (
  `trendata_dashboard_tile_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_dashboard_tile_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_dashboard_tile_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_dashboard_tile_order` int(10) unsigned NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_dashboard_id` int(10) unsigned DEFAULT NULL,
  `trendata_tile_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_dashboard_tile_id`),
  KEY `trendata_dashboard_id` (`trendata_dashboard_id`),
  KEY `trendata_tile_id` (`trendata_tile_id`),
  CONSTRAINT `trendata_dashboard_tile_ibfk_1` FOREIGN KEY (`trendata_dashboard_id`) REFERENCES `trendata_dashboard` (`trendata_dashboard_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_dashboard_tile_ibfk_2` FOREIGN KEY (`trendata_tile_id`) REFERENCES `trendata_tile` (`trendata_tile_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_dashboard_tile`;;;;;
INSERT INTO `trendata_dashboard_tile` (`trendata_dashboard_tile_id`, `trendata_dashboard_tile_created_by`, `trendata_dashboard_tile_last_modified_by`, `trendata_dashboard_tile_order`, `created_at`, `updated_at`, `trendata_dashboard_id`, `trendata_tile_id`) VALUES
(1,	0,	0,	0,	'0000-00-00 00:00:00',	'2017-03-03 21:02:27',	1,	7),
(2,	0,	0,	1,	'0000-00-00 00:00:00',	'2017-03-03 21:02:27',	1,	9),
(3,	0,	0,	2,	'0000-00-00 00:00:00',	'2017-03-03 21:02:27',	1,	30),
(4,	0,	0,	3,	'0000-00-00 00:00:00',	'2017-03-03 21:02:27',	1,	29),
(5,	0,	0,	4,	'0000-00-00 00:00:00',	'2017-03-03 21:02:27',	1,	16),
(6,	0,	0,	5,	'0000-00-00 00:00:00',	'2017-03-03 21:02:27',	1,	17),
(7,	0,	0,	6,	'0000-00-00 00:00:00',	'2017-03-03 21:02:27',	1,	32),
(9,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1,	58),
(10,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1,	59),
(11,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1,	60),
(12,	0,	0,	7,	'2017-02-14 14:23:06',	'2017-03-03 21:02:27',	1,	11);;;;;

DROP TABLE IF EXISTS `trendata_email_template`;;;;;
CREATE TABLE `trendata_email_template` (
  `trendata_email_template_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_email_template_key` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_email_subject_token` varchar(64) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_email_msg_token` varchar(64) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_email_template_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_email_template`;;;;;
INSERT INTO `trendata_email_template` (`trendata_email_template_id`, `trendata_email_template_key`, `trendata_email_subject_token`, `trendata_email_msg_token`, `created_at`, `updated_at`) VALUES
(1,	'delete_user',	'0861a054-bc57-11e6-a4a6-cec0c932ce01',	'0861a2f2-bc57-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(2,	'suspend_user',	'0861a3ec-bc57-11e6-a4a6-cec0c932ce01',	'0861a4d2-bc57-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(3,	'update_user_profile',	'ad40d75e-bc7d-11e6-a4a6-cec0c932ce01',	'ad40db8c-bc7d-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(4,	'welcome_email',	'930a5278-bc89-11e6-a4a6-cec0c932ce01',	'930a6240-bc89-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00');;;;;

DROP TABLE IF EXISTS `trendata_event`;;;;;
CREATE TABLE `trendata_event` (
  `trendata_event_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_event_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_event_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_event_title_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_event_description_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_event_start_on` date DEFAULT NULL,
  `trendata_event_end_on` date DEFAULT NULL,
  `trendata_event_is_public` tinyint(1) NOT NULL DEFAULT '0',
  `trendata_event_status` enum('0','1','2') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_event_category_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_event_id`),
  KEY `trendata_event_category_id` (`trendata_event_category_id`),
  CONSTRAINT `trendata_event_ibfk_1` FOREIGN KEY (`trendata_event_category_id`) REFERENCES `trendata_event_category` (`trendata_event_category_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

DROP TABLE IF EXISTS `trendata_event_category`;;;;;
CREATE TABLE `trendata_event_category` (
  `trendata_event_category_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_event_category_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_event_category_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_event_category_title_token` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_event_category_description_token` text COLLATE utf8_unicode_ci NOT NULL,
  `trendata_event_category_color_code` varchar(10) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_event_category_order` int(10) unsigned NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_event_category_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_event_category`;;;;;
INSERT INTO `trendata_event_category` (`trendata_event_category_id`, `trendata_event_category_created_by`, `trendata_event_category_last_modified_by`, `trendata_event_category_title_token`, `trendata_event_category_description_token`, `trendata_event_category_color_code`, `trendata_event_category_order`, `created_at`, `updated_at`) VALUES
(1,	1,	0,	'ab2371a8-b6f5-11e6-80f5-76304dec7eb7',	'',	'',	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(2,	1,	0,	'ab2374b4-b6f5-11e6-80f5-76304dec7eb7',	'',	'',	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(3,	1,	0,	'ab2375d6-b6f5-11e6-80f5-76304dec7eb7',	'',	'',	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(4,	1,	0,	'15331f40-bd3f-11e6-a994-33f704ba913f',	'15331f41-bd3f-11e6-a994-33f704ba913f',	'',	0,	'2016-12-08 17:38:51',	'2017-01-01 00:00:00');;;;;

DROP TABLE IF EXISTS `trendata_financial_data`;;;;;
CREATE TABLE `trendata_financial_data` (
  `trendata_financial_data_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_financial_data_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_financial_data_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_financial_data_year` int(10) unsigned NOT NULL,
  `trendata_financial_data_json_data` text COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_financial_data_id`),
  UNIQUE KEY `trendata_financial_data_trendata_financial_data_year` (`trendata_financial_data_year`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_financial_data`;;;;;
INSERT INTO `trendata_financial_data` (`trendata_financial_data_id`, `trendata_financial_data_created_by`, `trendata_financial_data_last_modified_by`, `trendata_financial_data_year`, `trendata_financial_data_json_data`, `created_at`, `updated_at`) VALUES
(2,	NULL,	NULL,	2012,	'[{\"title\":\"Gross Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Net Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Settlement/Penalty Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Cost of Benefits\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Hiring Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Termination Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]}]',	'2017-01-01 00:00:00',	'2017-04-30 16:59:23'),
(3,	NULL,	NULL,	2017,	'[{\"title\":\"Gross Revenue\",\"data\":[{\"value\":\"20374725\"},{\"value\":\"20685000\"},{\"value\":\"21000000\"},{\"value\":\"21168040\"},{\"value\":\"21535848\"},{\"value\":\"21803062\"},{\"value\":\"22069284\"},{\"value\":\"22334075\"},{\"value\":\"22569959\"},{\"value\":\"22857410\"},{\"value\":\"23114855\"},{\"value\":\"23868668\"}]},{\"title\":\"Net Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Settlement/Penalty Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Cost of Benefits\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Hiring Costs\",\"data\":[{\"value\":\"155592\"},{\"value\":\"165538\"},{\"value\":\"160322\"},{\"value\":\"164107\"},{\"value\":\"167538\"},{\"value\":\"171032\"},{\"value\":\"173080\"},{\"value\":\"174308\"},{\"value\":\"174510\"},{\"value\":\"175988\"},{\"value\":\"174071\"},{\"value\":\"174221\"}]},{\"title\":\"Termination Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]}]',	'2017-01-01 00:00:00',	'2017-04-28 17:58:04'),
(4,	NULL,	NULL,	2014,	'[{\"title\":\"Gross Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Net Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Settlement/Penalty Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Cost of Benefits\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Hiring Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Termination Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]}]',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(5,	NULL,	NULL,	2013,	'[{\"title\":\"Gross Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Net Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Settlement/Penalty Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Cost of Benefits\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Hiring Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Termination Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]}]',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(6,	NULL,	NULL,	2015,	'[{\"title\":\"Gross Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Net Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Settlement/Penalty Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Cost of Benefits\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Hiring Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Termination Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]}]',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(7,	NULL,	NULL,	2016,	'[{\"title\":\"Gross Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"17783524\"},{\"value\":\"18054339\"},{\"value\":\"18329278\"},{\"value\":\"18608405\"},{\"value\":\"18891781\"},{\"value\":\"19179473\"},{\"value\":\"19471547\"},{\"value\":\"19768068\"},{\"value\":\"20069104\"}]},{\"title\":\"Net Revenue\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"HR Settlement/Penalty Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Cost of Benefits\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]},{\"title\":\"Hiring Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"114906\"},{\"value\":\"122928\"},{\"value\":\"126516\"},{\"value\":\"146450\"},{\"value\":\"158348\"},{\"value\":\"171885\"},{\"value\":\"156768\"},{\"value\":\"199000\"},{\"value\":\"172263\"}]},{\"title\":\"Termination Costs\",\"data\":[{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"},{\"value\":\"\"}]}]',	'2017-01-01 00:00:00',	'2017-04-28 18:02:10');;;;;

DROP TABLE IF EXISTS `trendata_language`;;;;;
CREATE TABLE `trendata_language` (
  `trendata_language_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_language_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_language_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_language_key` varchar(5) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_language_title` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_language_description` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_language_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_language`;;;;;
INSERT INTO `trendata_language` (`trendata_language_id`, `trendata_language_created_by`, `trendata_language_last_modified_by`, `trendata_language_key`, `trendata_language_title`, `trendata_language_description`, `created_at`, `updated_at`) VALUES
(1,	0,	0,	'en',	'english',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(2,	0,	0,	'fr',	'french',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(3,	0,	0,	'es',	'spanish',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00');;;;;

DROP TABLE IF EXISTS `trendata_login_details`;;;;;
CREATE TABLE `trendata_login_details` (
  `trendata_login_details_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_login_details_auth_token` text COLLATE utf8_unicode_ci,
  `trendata_login_details_ip_address` varchar(50) COLLATE utf8_unicode_ci DEFAULT NULL,
  `trendata_login_details_login_time` datetime DEFAULT NULL,
  `trendata_login_details_logout_time` datetime DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_login_details_user_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_login_details_id`),
  KEY `trendata_login_details_user_id` (`trendata_login_details_user_id`),
  CONSTRAINT `trendata_login_details_ibfk_1` FOREIGN KEY (`trendata_login_details_user_id`) REFERENCES `trendata_user` (`trendata_user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;


DROP TABLE IF EXISTS `trendata_menu`;;;;;
CREATE TABLE `trendata_menu` (
  `trendata_menu_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_menu_pid` int(10) unsigned NOT NULL,
  `trendata_menu_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_menu_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_menu_title_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_menu_description_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_menu_redirect_path` varchar(1000) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_menu_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_menu`;;;;;

DROP TABLE IF EXISTS `trendata_menu_permission`;;;;;
CREATE TABLE `trendata_menu_permission` (
  `trendata_menu_permission_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_menu_permission_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_menu_permission_last_modified_by` int(10) unsigned DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_role_id` int(10) unsigned DEFAULT NULL,
  `trendata_menu_id` int(10) unsigned DEFAULT NULL,
  `trendata_permission_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_menu_permission_id`),
  KEY `trendata_role_id` (`trendata_role_id`),
  KEY `trendata_menu_id` (`trendata_menu_id`),
  KEY `trendata_permission_id` (`trendata_permission_id`),
  CONSTRAINT `trendata_menu_permission_ibfk_1` FOREIGN KEY (`trendata_role_id`) REFERENCES `trendata_role` (`trendata_role_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_menu_permission_ibfk_2` FOREIGN KEY (`trendata_menu_id`) REFERENCES `trendata_menu` (`trendata_menu_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_menu_permission_ibfk_3` FOREIGN KEY (`trendata_permission_id`) REFERENCES `trendata_permission` (`trendata_permission_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_menu_permission`;;;;;

DROP TABLE IF EXISTS `trendata_metric`;;;;;
CREATE TABLE `trendata_metric` (
  `trendata_metric_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_metric_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_metric_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_metric_title_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_metric_description_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_metric_status` enum('0','1','2') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `trendata_metric_icon` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_metric_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_metric`;;;;;
INSERT INTO `trendata_metric` (`trendata_metric_id`, `trendata_metric_created_by`, `trendata_metric_last_modified_by`, `trendata_metric_title_token`, `trendata_metric_description_token`, `trendata_metric_status`, `trendata_metric_icon`, `created_at`, `updated_at`) VALUES
(1,	0,	0,	'59271b3ab2df41e3bb885eb5ec9e174b',	'c1b6ce2dd2cb4fd1b4b34838bd2e328c',	'1',	'fa fa-usd',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(2,	0,	0,	'599610e09cf84f7da452f8afaefaeab3',	'4822b7576f1f47e6b9502af8663baa20',	'1',	'fa fa-rocket',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(3,	0,	0,	'c93c95bf14f44c5aa3685dabedd9f460',	'a49c256e98e245b3a645199a237916f4',	'1',	'fa fa-question',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(4,	0,	0,	'3d346ad2f051496aac8cd606f115b92d',	'c90d9811673246af81a80811a09fd234',	'1',	'fa fa-binoculars',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(5,	0,	0,	'7327f74bbbdf415086f4c862b2eb19ac',	'7fab0c9e9c8044348395e8c58a0170a8',	'1',	'fa fa-line-chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(6,	0,	0,	'df548600dc7e41a7be8fe0c31b498b83',	'5faee1a557184db58b0a6a325d98a86c',	'1',	'fa fa-tachometer',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(7,	0,	0,	'0b7d216ab7784640b91d66837b741ad0',	'f16ce19bbf174065a42ca2a5a2fba498',	'1',	'fa fa-money',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(8,	0,	0,	'd3b1562d119a4acf876e61c50b6be4eb',	'eada056534574da5b9a128e6aa0e9580',	'1',	'fa fa-key',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(9,	0,	0,	'94b4b2e146574607a25e0ffe30cf3a8c',	'00f769accd24437b876c90913ef78cd8',	'1',	'fa fa-arrows-h',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(10,	0,	0,	'961608e4cb7d4b4584a6d5f5188218a9',	'857c3b208b1a4dc781bc8fd51ab76a47',	'1',	'fa fa-bullhorn',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(11,	0,	0,	'e93aed9c68824740b582e5e8f1e2f74f',	'a0549138e3f2458ba41dec79814353a0',	'1',	'fa fa-thumbs-o-up',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(12,	0,	0,	'324471e6853f4d049bfbf82308cf66da',	'c0ac6d1176a0443e9d365d369ef0d4bc',	'1',	'fa fa-street-view',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00');;;;;

DROP TABLE IF EXISTS `trendata_metric_chart`;;;;;
CREATE TABLE `trendata_metric_chart` (
  `trendata_metric_chart_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_metric_chart_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_metric_chart_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_metric_chart_order` int(10) unsigned NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_metric_id` int(10) unsigned DEFAULT NULL,
  `trendata_chart_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_metric_chart_id`),
  KEY `trendata_metric_id` (`trendata_metric_id`),
  KEY `trendata_chart_id` (`trendata_chart_id`),
  CONSTRAINT `trendata_metric_chart_ibfk_1` FOREIGN KEY (`trendata_metric_id`) REFERENCES `trendata_metric` (`trendata_metric_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_metric_chart_ibfk_2` FOREIGN KEY (`trendata_chart_id`) REFERENCES `trendata_chart` (`trendata_chart_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_metric_chart`;;;;;
INSERT INTO `trendata_metric_chart` (`trendata_metric_chart_id`, `trendata_metric_chart_created_by`, `trendata_metric_chart_last_modified_by`, `trendata_metric_chart_order`, `created_at`, `updated_at`, `trendata_metric_id`, `trendata_chart_id`) VALUES
(2,	0,	0,	0,	'2017-02-01 11:38:13',	'2017-02-01 11:38:13',	6,	1),
(3,	0,	0,	0,	'2017-02-01 11:40:53',	'2017-02-01 11:40:53',	6,	2),
(4,	0,	0,	0,	'2017-02-01 11:41:38',	'2017-02-01 11:41:38',	6,	3),
(6,	0,	0,	0,	'2017-02-01 11:43:46',	'2017-02-01 11:43:46',	7,	5),
(7,	0,	0,	0,	'2017-02-01 11:44:31',	'2017-02-01 11:44:31',	7,	6),
(8,	0,	0,	0,	'2017-02-01 11:45:05',	'2017-02-28 20:14:56',	1,	7),
(9,	0,	0,	0,	'2017-02-01 11:45:54',	'2017-02-01 11:45:54',	7,	8),
(11,	0,	0,	1,	'2017-02-01 12:04:34',	'2017-02-28 20:14:56',	1,	10),
(12,	0,	0,	2,	'2017-02-01 12:05:05',	'2017-02-28 20:14:56',	1,	11),
(13,	0,	0,	3,	'2017-02-01 12:05:34',	'2017-02-28 20:14:56',	1,	12),
(14,	0,	0,	4,	'2017-02-01 12:21:06',	'2017-02-28 20:14:56',	1,	13),
(15,	0,	0,	0,	'2017-02-01 12:21:45',	'2017-02-01 12:21:45',	6,	14),
(16,	0,	0,	0,	'2017-02-01 12:22:27',	'2017-02-01 12:22:27',	6,	15),
(17,	0,	0,	0,	'2017-02-01 12:24:01',	'2017-02-01 12:24:01',	8,	16),
(18,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	9,	17),
(19,	0,	0,	0,	'2017-02-01 12:24:36',	'2017-02-01 12:24:36',	5,	18),
(20,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	9,	19),
(21,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	9,	20),
(22,	0,	0,	0,	'2017-02-01 12:25:28',	'2017-02-01 12:25:28',	5,	21),
(24,	0,	0,	0,	'2017-02-01 12:26:03',	'2017-02-01 12:26:03',	10,	23),
(25,	0,	0,	0,	'2017-02-01 12:26:32',	'2017-02-01 12:26:32',	10,	24),
(26,	0,	0,	0,	'2017-02-01 12:27:10',	'2017-02-01 12:27:10',	8,	25),
(27,	0,	0,	0,	'2017-02-01 12:27:41',	'2017-02-01 12:27:41',	4,	26),
(28,	0,	0,	0,	'2017-02-01 12:28:08',	'2017-02-01 12:28:08',	4,	27),
(29,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	11,	28),
(30,	0,	0,	0,	'2017-02-01 12:46:33',	'2017-02-01 12:46:33',	7,	29),
(31,	0,	0,	0,	'2017-02-01 12:47:02',	'2017-02-01 12:47:02',	6,	30),
(32,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	11,	31),
(34,	0,	0,	0,	'2017-02-01 12:48:29',	'2017-02-01 12:48:29',	7,	33),
(35,	0,	0,	0,	'2017-02-01 12:49:23',	'2017-02-01 12:49:23',	5,	34),
(36,	0,	0,	0,	'2017-02-01 12:49:58',	'2017-02-01 12:49:58',	9,	35),
(37,	0,	0,	0,	'2017-02-01 12:50:23',	'2017-02-01 12:50:23',	9,	36),
(38,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	12,	37),
(39,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	12,	38),
(40,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	12,	39),
(41,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	2,	40),
(42,	0,	0,	0,	'2017-02-01 10:47:36',	'2017-03-28 11:59:35',	3,	41),
(44,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	2,	43),
(45,	0,	0,	0,	'2017-02-01 10:52:49',	'2017-02-01 10:52:49',	4,	44),
(46,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	2,	45),
(47,	0,	0,	0,	'2017-02-01 11:05:57',	'2017-02-01 11:05:57',	6,	46),
(48,	0,	0,	0,	'2017-02-01 11:07:35',	'2017-02-01 11:07:35',	6,	47),
(50,	0,	0,	0,	'2017-02-01 11:19:16',	'2017-02-01 11:19:16',	4,	49),
(51,	0,	0,	0,	'2017-02-01 10:40:01',	'2017-02-01 10:40:01',	2,	50),
(52,	0,	0,	0,	'2017-02-01 10:40:17',	'2017-02-01 10:40:17',	2,	51),
(53,	0,	0,	0,	'2017-02-01 10:40:27',	'2017-02-01 10:40:27',	2,	52),
(54,	0,	0,	0,	'2017-02-01 10:40:36',	'2017-02-01 10:40:36',	2,	53),
(56,	0,	0,	1,	'2017-02-01 11:27:54',	'2017-03-28 11:59:35',	3,	55),
(57,	0,	0,	0,	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	4,	56),
(68,	0,	0,	0,	'2017-02-01 10:30:11',	'2017-02-01 10:30:11',	4,	58),
(69,	0,	0,	0,	'2017-02-01 10:40:43',	'2017-02-01 10:40:43',	2,	59);;;;;

DROP TABLE IF EXISTS `trendata_metric_tile`;;;;;
CREATE TABLE `trendata_metric_tile` (
  `trendata_metric_tile_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_metric_tile_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_metric_tile_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_metric_tile_order` int(10) unsigned NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_metric_id` int(10) unsigned DEFAULT NULL,
  `trendata_tile_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_metric_tile_id`),
  KEY `trendata_metric_id` (`trendata_metric_id`),
  KEY `trendata_tile_id` (`trendata_tile_id`),
  CONSTRAINT `trendata_metric_tile_ibfk_1` FOREIGN KEY (`trendata_metric_id`) REFERENCES `trendata_metric` (`trendata_metric_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_metric_tile_ibfk_2` FOREIGN KEY (`trendata_tile_id`) REFERENCES `trendata_tile` (`trendata_tile_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_metric_tile`;;;;;
INSERT INTO `trendata_metric_tile` (`trendata_metric_tile_id`, `trendata_metric_tile_created_by`, `trendata_metric_tile_last_modified_by`, `trendata_metric_tile_order`, `created_at`, `updated_at`, `trendata_metric_id`, `trendata_tile_id`) VALUES
(2,	0,	0,	0,	'2017-02-01 11:38:13',	'2017-02-01 11:38:13',	6,	1),
(3,	0,	0,	0,	'2017-02-01 11:40:53',	'2017-02-01 11:40:53',	6,	2),
(4,	0,	0,	0,	'2017-02-01 11:41:38',	'2017-02-01 11:41:38',	6,	3),
(6,	0,	0,	0,	'2017-02-01 11:43:46',	'2017-02-01 11:43:46',	7,	5),
(7,	0,	0,	0,	'2017-02-01 11:44:31',	'2017-02-01 11:44:31',	7,	6),
(8,	0,	0,	0,	'2017-02-01 11:45:05',	'2017-03-03 17:05:13',	1,	7),
(9,	0,	0,	0,	'2017-02-01 11:45:54',	'2017-02-01 11:45:54',	7,	8),
(11,	0,	0,	1,	'2017-02-01 12:04:34',	'2017-03-03 17:05:13',	1,	10),
(12,	0,	0,	2,	'2017-02-01 12:05:05',	'2017-03-03 17:05:13',	1,	11),
(13,	0,	0,	3,	'2017-02-01 12:05:34',	'2017-03-03 17:05:13',	1,	12),
(14,	0,	0,	4,	'2017-02-01 12:21:06',	'2017-03-03 17:05:13',	1,	13),
(15,	0,	0,	0,	'2017-02-01 12:21:45',	'2017-02-01 12:21:45',	6,	14),
(16,	0,	0,	0,	'2017-02-01 12:22:27',	'2017-02-01 12:22:27',	6,	15),
(17,	0,	0,	0,	'2017-02-01 12:24:01',	'2017-02-01 12:24:01',	8,	16),
(18,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	9,	17),
(19,	0,	0,	0,	'2017-02-01 12:24:36',	'2017-02-01 12:24:36',	5,	18),
(20,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	9,	19),
(21,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	9,	20),
(22,	0,	0,	0,	'2017-02-01 12:25:28',	'2017-02-01 12:25:28',	5,	21),
(24,	0,	0,	0,	'2017-02-01 12:26:03',	'2017-03-03 15:16:38',	10,	23),
(25,	0,	0,	1,	'2017-02-01 12:26:32',	'2017-03-03 15:16:38',	10,	24),
(26,	0,	0,	0,	'2017-02-01 12:27:10',	'2017-02-01 12:27:10',	8,	25),
(27,	0,	0,	0,	'2017-02-01 12:27:41',	'2017-02-01 12:27:41',	4,	26),
(28,	0,	0,	0,	'2017-02-01 12:28:08',	'2017-02-01 12:28:08',	4,	27),
(29,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	11,	28),
(30,	0,	0,	0,	'2017-02-01 12:46:33',	'2017-02-01 12:46:33',	7,	29),
(31,	0,	0,	0,	'2017-02-01 12:47:02',	'2017-02-01 12:47:02',	6,	30),
(32,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	11,	31),
(34,	0,	0,	0,	'2017-02-01 12:48:29',	'2017-02-01 12:48:29',	7,	33),
(35,	0,	0,	0,	'2017-02-01 12:49:23',	'2017-02-01 12:49:23',	5,	34),
(36,	0,	0,	0,	'2017-02-01 12:49:58',	'2017-02-01 12:49:58',	9,	35),
(37,	0,	0,	0,	'2017-02-01 12:50:23',	'2017-02-01 12:50:23',	9,	36),
(38,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	12,	37),
(39,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	12,	38),
(40,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	12,	39),
(41,	0,	0,	0,	'0000-00-00 00:00:00',	'2017-03-03 15:12:07',	2,	40),
(42,	0,	0,	0,	'2017-02-01 10:47:36',	'2017-02-01 10:47:36',	3,	41),
(44,	0,	0,	1,	'0000-00-00 00:00:00',	'2017-03-03 15:12:07',	2,	43),
(45,	0,	0,	0,	'2017-02-01 10:52:49',	'2017-02-01 10:52:49',	4,	44),
(46,	0,	0,	2,	'0000-00-00 00:00:00',	'2017-03-03 15:12:07',	2,	45),
(47,	0,	0,	0,	'2017-02-01 11:05:57',	'2017-02-01 11:05:57',	6,	46),
(48,	0,	0,	0,	'2017-02-01 11:07:35',	'2017-02-01 11:07:35',	6,	47),
(50,	0,	0,	0,	'2017-02-01 11:19:16',	'2017-02-01 11:19:16',	4,	49),
(51,	0,	0,	3,	'2017-02-01 10:40:01',	'2017-03-03 15:12:07',	2,	50),
(52,	0,	0,	4,	'2017-02-01 10:40:17',	'2017-03-03 15:12:07',	2,	51),
(53,	0,	0,	5,	'2017-02-01 10:40:27',	'2017-03-03 15:12:07',	2,	52),
(54,	0,	0,	6,	'2017-02-01 10:40:36',	'2017-03-03 15:12:07',	2,	53),
(56,	0,	0,	0,	'2017-02-01 11:27:54',	'2017-02-01 11:27:54',	3,	55),
(57,	0,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	4,	56),
(66,	0,	0,	0,	'2017-02-01 12:44:39',	'2017-02-01 12:44:39',	5,	9),
(68,	0,	0,	0,	'2017-02-01 10:30:11',	'2017-02-01 10:30:11',	4,	58),
(69,	0,	0,	0,	'2017-02-01 10:40:43',	'2017-02-01 10:40:43',	2,	59);;;;;

DROP TABLE IF EXISTS `trendata_permission`;;;;;
CREATE TABLE `trendata_permission` (
  `trendata_permission_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_permission_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_permission_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_permission_title` int(10) unsigned NOT NULL,
  `trendata_permission_description` int(10) unsigned NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_permission_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_permission`;;;;;

DROP TABLE IF EXISTS `trendata_role`;;;;;
CREATE TABLE `trendata_role` (
  `trendata_role_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_role_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_role_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_role_name` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_role_status` enum('0','1','2') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_role_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_role`;;;;;

DROP TABLE IF EXISTS `trendata_role_metric`;;;;;
CREATE TABLE `trendata_role_metric` (
  `trendata_role_metric_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_role_metric_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_role_metric_last_modified_by` int(10) unsigned DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_role_id` int(10) unsigned DEFAULT NULL,
  `trendata_metric_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_role_metric_id`),
  KEY `trendata_role_id` (`trendata_role_id`),
  KEY `trendata_metric_id` (`trendata_metric_id`),
  CONSTRAINT `trendata_role_metric_ibfk_1` FOREIGN KEY (`trendata_role_id`) REFERENCES `trendata_role` (`trendata_role_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_role_metric_ibfk_2` FOREIGN KEY (`trendata_metric_id`) REFERENCES `trendata_metric` (`trendata_metric_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_role_metric`;;;;;

DROP TABLE IF EXISTS `trendata_sql_query`;;;;;
CREATE TABLE `trendata_sql_query` (
  `trendata_sql_query_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_sql_query_template` text COLLATE utf8_unicode_ci,
  `trendata_sql_query_custom_source` text COLLATE utf8_unicode_ci,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_chart_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_sql_query_id`),
  KEY `trendata_chart_id` (`trendata_chart_id`),
  CONSTRAINT `trendata_sql_query_ibfk_1` FOREIGN KEY (`trendata_chart_id`) REFERENCES `trendata_chart` (`trendata_chart_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_sql_query`;;;;;
INSERT INTO `trendata_sql_query` (`trendata_sql_query_id`, `trendata_sql_query_template`, `trendata_sql_query_custom_source`, `created_at`, `updated_at`, `trendata_chart_id`) VALUES
(1,	NULL,	'var current = new Date;\r\n    current = current.getFullYear() + \'-\' + ((current.getMonth() + 1) < 10 ? \'0\' + (current.getMonth() + 1).toString() : (current.getMonth() + 1)) + \'-01\';\r\n\r\n    orm.query(\r\n        \'SELECT \' +\r\n            \'COUNT(*) as `total_number_of_employees` \' +\r\n        \'FROM \' +\r\n            \'`trendata_bigdata_user` AS `tbu` \' +\r\n        \'INNER JOIN \' +\r\n            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n        \'ON \' +\r\n            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n        \'WHERE \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n        \'OR \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n    , {\r\n        type: ORM.QueryTypes.SELECT,\r\n        replacements: [\r\n            current,\r\n            current,\r\n            current\r\n        ]\r\n    }).then(function (rows) {\r\n        _resolve({\r\n            data: [\r\n                {\r\n                    labes: \'\',\r\n                    value: rows[0][\'total_number_of_employees\']\r\n                }\r\n            ]\r\n        });\r\n    }).catch(_reject);',	'2017-03-10 15:38:53',	'2017-03-10 10:58:30',	61),
(2,	NULL,	'Promise.props({\r\n    users: commonChartData.getUsersList()\r\n}).then(_resolve).catch(_reject);',	'2017-03-14 15:37:18',	'2017-03-14 15:37:18',	62),
(3,	NULL,	'Promise.props({\r\n        /**\r\n         *\r\n         */\r\n        users: commonChartData.getUsersList(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        chartData: (function () {\r\n            /**\r\n             * @return {Array<String>}\r\n             */\r\n            function rangeDate() {\r\n                var current = new Date;\r\n                var date1 = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\n                var date2 = new Date(current.getFullYear() - 1, current.getMonth(), 1, 23);\r\n                var between = [];\r\n                var month;\r\n\r\n                while(date2 < date1) {\r\n                    month = date1.getMonth() + 1;\r\n                    if (month < 10) {\r\n                        month = \'0\' + month.toString();\r\n                    }\r\n                    between.push(date1.getFullYear() + \'-\' + month);\r\n                    date1 = new Date(date1.setMonth(date1.getMonth() - 1));\r\n                }\r\n\r\n                return between.reverse();\r\n            }\r\n\r\n            return Promise.map(rangeDate(), function (item) {\r\n                return orm.query(\r\n                    \'SELECT COUNT(*) AS `count` FROM `trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN `trendata_bigdata_user_position` AS `tbup` ON `tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            item + \'-01\',\r\n                            item + \'-01\',\r\n                            item + \'-01\'\r\n                        ]\r\n                    }).then(function (rows) {\r\n                    return {\r\n                        month: item,\r\n                        count: rows[0].count\r\n                    };\r\n                });\r\n            })\r\n        })(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        trendLine: \'POST\' === req.method ? commonChartData.getTrendlineCurvePython(req.body) : [\r\n            [1, 0],\r\n            [2, 0],\r\n            [3, 0],\r\n            [4, 0],\r\n            [5, 0],\r\n            [6, 0],\r\n            [7, 0],\r\n            [8, 0],\r\n            [9, 0],\r\n            [10, 0],\r\n            [11, 0],\r\n            [12, 0]\r\n        ]\r\n    }).then(_resolve).catch(_reject);',	'2017-03-16 11:08:23',	'2017-03-16 11:08:23',	63),
(4,	NULL,	'function number_format(number, decimals, dec_point, thousands_sep) {\r\n  number = (number + \'\').replace(/[^0-9+\\-Ee.]/g, \'\');\r\n  var n = !isFinite(+number) ? 0 : +number,\r\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n    sep = (typeof thousands_sep === \'undefined\') ? \',\' : thousands_sep,\r\n    dec = (typeof dec_point === \'undefined\') ? \'.\' : dec_point,\r\n    s = \'\',\r\n    toFixedFix = function (n, prec) {\r\n      var k = Math.pow(10, prec);\r\n      return \'\' + Math.round(n * k) / k;\r\n    };\r\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\r\n  s = (prec ? toFixedFix(n, prec) : \'\' + Math.round(n)).split(\'.\');\r\n  if (s[0].length > 3) {\r\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n  }\r\n  if ((s[1] || \'\').length < prec) {\r\n    s[1] = s[1] || \'\';\r\n    s[1] += new Array(prec - s[1].length + 1).join(\'0\');\r\n  }\r\n  return s.join(dec);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    var current = new Date;\r\n    current = current.getFullYear() + \'-\' + ((current.getMonth() + 1) < 10 ? \'0\' + (current.getMonth() + 1).toString() : (current.getMonth() + 1)) + \'-01\';\r\n\r\n    orm.query(\r\n        \'SELECT \' +\r\n            \'ROUND(AVG(`tbu`.`trendata_bigdata_user_salary`), 0) as `average_salary` \' +\r\n        \'FROM `trendata_bigdata_user` AS `tbu` \' +\r\n        \'INNER JOIN \' +\r\n            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n        \'ON \' +\r\n            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n        \'WHERE \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n        \'OR \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n        , {\r\n            type: ORM.QueryTypes.SELECT,\r\n            replacements: [\r\n                current,\r\n                current,\r\n                current\r\n            ]\r\n        }\r\n    ).then(function (rows) {\r\n        _resolve({\r\n            data: [\r\n                {\r\n                    label: \'\',\r\n                    value: rows[0].average_salary ? (\'$\' + number_format(rows[0].average_salary)) : \'No data\'\r\n                }\r\n            ]\r\n        });\r\n    }).catch(_reject);',	'2017-03-22 12:42:58',	'2017-03-22 12:42:58',	60),
(5,	NULL,	'    Promise.props({\r\n        /**\r\n         *\r\n         */\r\n        users: commonChartData.getUsersList(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        trendLine: \'POST\' === req.method ? commonChartData.getTrendlineCurvePython(req.body) : [\r\n            [1, 0],\r\n            [2, 0],\r\n            [3, 0],\r\n            [4, 0],\r\n            [5, 0],\r\n            [6, 0],\r\n            [7, 0],\r\n            [8, 0],\r\n            [9, 0],\r\n            [10, 0],\r\n            [11, 0],\r\n            [12, 0]\r\n        ]\r\n    }).then(_resolve).catch(_reject);',	'2017-03-22 15:00:49',	'2017-03-22 15:00:49',	64),
(6,	NULL,	'var current = new Date;\r\nvar old = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\nvar current = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\ncurrent = current.getUTCFullYear() + \'-\' + ((current.getUTCMonth() + 1) < 10 ? (\'0\' + (current.getUTCMonth() + 1).toString()) : (current.getUTCMonth() + 1)) + \'-01\';\r\nold = old.getUTCFullYear() + \'-\' + ((old.getUTCMonth() + 1) < 10 ? (\'0\' + (old.getUTCMonth() + 1).toString()) : (old.getUTCMonth() + 1)) + \'-01\';\r\n\r\nPromise.props({\r\n    term: Promise.resolve().then(function() {\r\n        return orm.query(\r\n            \'SELECT \' +\r\n            \'COUNT(*) AS `count` \' +\r\n            \'FROM \' +\r\n            \'`trendata_bigdata_user` AS `tbu` \' +\r\n            \'INNER JOIN \' +\r\n            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n            \'ON \' +\r\n            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n            \'WHERE \' +\r\n            \'`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL \' +\r\n            \'AND \' +\r\n            \'`tbup`.`trendata_bigdata_user_position_termination_date` >= ? \' +\r\n            \'AND \' +\r\n            \'`tbup`.`trendata_bigdata_user_position_termination_date` < ?\'\r\n            , {\r\n                type: ORM.QueryTypes.SELECT,\r\n                replacements: [\r\n                    old,\r\n                    current\r\n                ]\r\n            }).then(function (rows) {\r\n            return rows[0].count;\r\n        });\r\n    }),\r\n    total: Promise.resolve().then(function() {\r\n        return orm.query(\r\n            \'SELECT \' +\r\n            \'COUNT(*) AS `count` \' +\r\n            \'FROM \' +\r\n            \'`trendata_bigdata_user` AS `tbu` \' +\r\n            \'INNER JOIN \' +\r\n            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n            \'ON \' +\r\n            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n            \'WHERE \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n            \'OR \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n            , {\r\n                type: ORM.QueryTypes.SELECT,\r\n                replacements: [\r\n                    old,\r\n                    old,\r\n                    old\r\n                ]\r\n            }).then(function (rows) {\r\n            return rows[0].count;\r\n        });\r\n    })\r\n}).then(function (data) {\r\n    _resolve({\r\n        decimals: \'2\',\r\n        data: [\r\n            {\r\n                label: \'Rest of Population\',\r\n                value: data.total\r\n            },\r\n            {\r\n                label: \'Termination\',\r\n                value: data.term\r\n            }\r\n        ]\r\n    });\r\n}).catch(_reject);',	'2017-03-27 13:28:10',	'2017-03-27 13:28:10',	7),
(7,	NULL,	'var TranslationModel = ormModels.Translation;\r\n\r\n    /**\r\n     * @return {Array.<String>}\r\n     */\r\n    function getMonthRange() {\r\n        var current = new Date;\r\n        var min = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n        var between = [];\r\n        for(var i = 0; i < 12; ++i) {\r\n            between.push(min.getFullYear() + \'-\' + ((min.getMonth() + 1) < 10 ? \'0\' + (min.getMonth() + 1).toString() : (min.getMonth() + 1)) + \'-01\');\r\n            min.setMonth(min.getMonth() - 1);\r\n        }\r\n        return between.reverse();\r\n    }\r\n\r\n    /**\r\n     * @param date\r\n     * @return {String}\r\n     */\r\n    function getMonthNameByDate(date) {\r\n        var monthNumber = date.split(\'-\')[1];\r\n        return {\r\n            \'01\': \'January\',\r\n            \'02\': \'February\',\r\n            \'03\': \'March\',\r\n            \'04\': \'April\',\r\n            \'05\': \'May\',\r\n            \'06\': \'June\',\r\n            \'07\': \'July\',\r\n            \'08\': \'August\',\r\n            \'09\': \'September\',\r\n            \'10\': \'October\',\r\n            \'11\': \'November\',\r\n            \'12\': \'December\'\r\n        }[monthNumber];\r\n    }\r\n\r\n    Promise.props({\r\n        /**\r\n         * Users\r\n         */\r\n        users: commonChartData.getUsersList(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        termAndActive: (function () {\r\n            var current = new Date;\r\n            var old = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n            var current = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\n            current = current.getUTCFullYear() + \'-\' + ((current.getUTCMonth() + 1) < 10 ? (\'0\' + (current.getUTCMonth() + 1).toString()) : (current.getUTCMonth() + 1)) + \'-01\';\r\n            old = old.getUTCFullYear() + \'-\' + ((old.getUTCMonth() + 1) < 10 ? (\'0\' + (old.getUTCMonth() + 1).toString()) : (old.getUTCMonth() + 1)) + \'-01\';\r\n\r\n            return Promise.props({\r\n                /**\r\n                 *\r\n                 */\r\n                term: orm.query(\r\n                    \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_termination_date` >= ? \' +\r\n                    \'AND \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_termination_date` <= ?\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            old,\r\n                            current\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return rows[0].count;\r\n                }),\r\n\r\n                /**\r\n                 *\r\n                 */\r\n                total: Promise.resolve().then(function() {\r\n                    return orm.query(\r\n                        \'SELECT \' +\r\n                        \'COUNT(*) AS `count` \' +\r\n                        \'FROM \' +\r\n                        \'`trendata_bigdata_user` AS `tbu` \' +\r\n                        \'INNER JOIN \' +\r\n                        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                        \'ON \' +\r\n                        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                        \'WHERE \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                        \'OR \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                        , {\r\n                            type: ORM.QueryTypes.SELECT,\r\n                            replacements: [\r\n                                current,\r\n                                current,\r\n                                current\r\n                            ]\r\n                        }\r\n                    ).then(function (rows) {\r\n                        return rows[0].count;\r\n                    });\r\n                })\r\n            }).then(function (data) {\r\n                return {\r\n                    \"data\": [\r\n                        {\r\n                            \"label\": \"Rest of Population\",\r\n                            \"value\": data.total\r\n                        },\r\n                        {\r\n                            \"label\": \"Termination\",\r\n                            \"value\": data.term\r\n                        }\r\n                    ]\r\n                };\r\n            });\r\n        })(),\r\n\r\n        /**\r\n         * Summary tab\r\n         */\r\n        summary: Promise.all([\r\n            /**\r\n             * Avg. Salary\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return orm.query(\r\n                    \'SELECT \' +\r\n                    \'AVG(`tbu`.`trendata_bigdata_user_salary`) AS `avg` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            item,\r\n                            item,\r\n                            item\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return {\r\n                        month: item.substr(0, 7),\r\n                        avgSalary: parseInt(rows[0].avg) || 0\r\n                    };\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = item.avgSalary;\r\n                return accum;\r\n            }, {\r\n                name: \'Avg. Salary\'\r\n            }),\r\n\r\n            /**\r\n             * Number of Employees\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return orm.query(\r\n                    \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            item,\r\n                            item,\r\n                            item\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return {\r\n                        month: item.substr(0, 7),\r\n                        count: parseInt(rows[0].count) || 0\r\n                    };\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = item.count;\r\n                return accum;\r\n            }, {\r\n                name: \'Number of Employees\'\r\n            }),\r\n\r\n            /**\r\n             * Remote Employees\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return Promise.props({\r\n                    month: item,\r\n                    value: Promise.props({\r\n                        remote: orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'((`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                            \'OR \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)) \' +\r\n                            \'AND \' +\r\n                            \'`tbu`.`trendata_bigdata_user_remote_employee` = \\\'yes\\\'\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item,\r\n                                    item,\r\n                                    item\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        }),\r\n                        total: orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                            \'OR \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item,\r\n                                    item,\r\n                                    item\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        })\r\n                    })\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = ! item.value.total ? 0 : (Math.round((item.value.remote / item.value.total) * 10000) / 10000);\r\n                return accum;\r\n            }, {\r\n                name: \'Remote Employees\'\r\n            }),\r\n\r\n            /**\r\n             * Total Turnover\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                item = item.split(\'-\');\r\n                var current = new Date(item[0], item[1]);\r\n                var old = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n                var current = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\n                return {\r\n                    old: old.getUTCFullYear() + \'-\' + ((old.getUTCMonth() + 1) < 10 ? (\'0\' + (old.getUTCMonth() + 1).toString()) : (old.getUTCMonth() + 1)) + \'-01\',\r\n                    current: current.getUTCFullYear() + \'-\' + ((current.getUTCMonth() + 1) < 10 ? (\'0\' + (current.getUTCMonth() + 1).toString()) : (current.getUTCMonth() + 1)) + \'-01\'\r\n                };\r\n            }).map(function (item) {\r\n                return Promise.props({\r\n                    term: Promise.resolve().then(function() {\r\n                        return orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL \' +\r\n                            \'AND\' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` >= ? \' +\r\n                            \'AND \' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` < ?\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item.old,\r\n                                    item.current\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        });\r\n                    }),\r\n\r\n                    total: orm.query(\r\n                        \'SELECT \' +\r\n                        \'COUNT(*) AS `count` \' +\r\n                        \'FROM \' +\r\n                        \'`trendata_bigdata_user` AS `tbu` \' +\r\n                        \'INNER JOIN \' +\r\n                        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                        \'ON \' +\r\n                        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                        \'WHERE \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                        \'OR \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                        , {\r\n                            type: ORM.QueryTypes.SELECT,\r\n                            replacements: [\r\n                                item.old,\r\n                                item.old,\r\n                                item.old\r\n                            ]\r\n                        }).then(function (rows) {\r\n                        return rows[0].count;\r\n                    }),\r\n\r\n                    month: item.old\r\n                });\r\n            }).map(function (item) {\r\n                item.total += item.term;\r\n                return item;\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = ! item.total ? 0 : (Math.round((item.term / item.total) * 10000) / 10000);\r\n                return accum;\r\n            }, {\r\n                name: \'Total Turnover\'\r\n            })\r\n        ]),\r\n\r\n        /**\r\n         *\r\n         */\r\n        trendLine: \'POST\' === req.method ? commonChartData.getTrendlineCurvePython(req.body) : [\r\n            [1, 0],\r\n            [2, 0],\r\n            [3, 0],\r\n            [4, 0],\r\n            [5, 0],\r\n            [6, 0],\r\n            [7, 0],\r\n            [8, 0],\r\n            [9, 0],\r\n            [10, 0],\r\n            [11, 0],\r\n            [12, 0]\r\n        ]\r\n    }).then(_resolve).catch(_reject);',	'2017-03-27 16:44:38',	'2017-03-27 16:44:38',	65),
(8,	NULL,	'var TranslationModel = ormModels.Translation;\r\n\r\n    /**\r\n     * @return {Array.<String>}\r\n     */\r\n    function getMonthRange() {\r\n        var current = new Date;\r\n        var min = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n        var between = [];\r\n        for(var i = 0; i < 6; ++i) {\r\n            between.push(min.getFullYear() + \'-\' + ((min.getMonth() + 1) < 10 ? \'0\' + (min.getMonth() + 1).toString() : (min.getMonth() + 1)) + \'-01\');\r\n            min.setMonth(min.getMonth() - 1);\r\n        }\r\n        return between.reverse();\r\n    }\r\n\r\n    /**\r\n     * @param date\r\n     * @return {String}\r\n     */\r\n    function getMonthNameByDate(date) {\r\n        var monthNumber = date.split(\'-\')[1];\r\n        return {\r\n            \'01\': \'January\',\r\n            \'02\': \'February\',\r\n            \'03\': \'March\',\r\n            \'04\': \'April\',\r\n            \'05\': \'May\',\r\n            \'06\': \'June\',\r\n            \'07\': \'July\',\r\n            \'08\': \'August\',\r\n            \'09\': \'September\',\r\n            \'10\': \'October\',\r\n            \'11\': \'November\',\r\n            \'12\': \'December\'\r\n        }[monthNumber];\r\n    }\r\n\r\n    Promise.props({\r\n        /**\r\n         * Users\r\n         */\r\n        users: commonChartData.getUsersList(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        termAndActive: (function () {\r\n            var current = new Date;\r\n            var old = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n            var current = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\n            current = current.getUTCFullYear() + \'-\' + ((current.getUTCMonth() + 1) < 10 ? (\'0\' + (current.getUTCMonth() + 1).toString()) : (current.getUTCMonth() + 1)) + \'-01\';\r\n            old = old.getUTCFullYear() + \'-\' + ((old.getUTCMonth() + 1) < 10 ? (\'0\' + (old.getUTCMonth() + 1).toString()) : (old.getUTCMonth() + 1)) + \'-01\';\r\n\r\n            return Promise.props({\r\n                /**\r\n                 *\r\n                 */\r\n                term: orm.query(\r\n                    \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_termination_date` >= ? \' +\r\n                    \'AND \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_termination_date` <= ?\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            old,\r\n                            current\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return rows[0].count;\r\n                }),\r\n\r\n                /**\r\n                 *\r\n                 */\r\n                total: Promise.resolve().then(function() {\r\n                    return orm.query(\r\n                        \'SELECT \' +\r\n                        \'COUNT(*) AS `count` \' +\r\n                        \'FROM \' +\r\n                        \'`trendata_bigdata_user` AS `tbu` \' +\r\n                        \'INNER JOIN \' +\r\n                        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                        \'ON \' +\r\n                        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                        \'WHERE \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                        \'OR \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                        , {\r\n                            type: ORM.QueryTypes.SELECT,\r\n                            replacements: [\r\n                                current,\r\n                                current,\r\n                                current\r\n                            ]\r\n                        }\r\n                    ).then(function (rows) {\r\n                        return rows[0].count;\r\n                    });\r\n                })\r\n            }).then(function (data) {\r\n                return {\r\n                    \"data\": [\r\n                        {\r\n                            \"label\": \"Rest of Population\",\r\n                            \"value\": data.total\r\n                        },\r\n                        {\r\n                            \"label\": \"Termination\",\r\n                            \"value\": data.term\r\n                        }\r\n                    ]\r\n                };\r\n            });\r\n        })(),\r\n\r\n        /**\r\n         * Summary tab\r\n         */\r\n        summary: Promise.all([\r\n            /**\r\n             * Avg. Salary\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return orm.query(\r\n                    \'SELECT \' +\r\n                    \'AVG(`tbu`.`trendata_bigdata_user_salary`) AS `avg` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            item,\r\n                            item,\r\n                            item\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return {\r\n                        month: item.substr(0, 7),\r\n                        avgSalary: parseInt(rows[0].avg) || 0\r\n                    };\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = item.avgSalary;\r\n                return accum;\r\n            }, {\r\n                name: \'Avg. Salary\'\r\n            }),\r\n\r\n            /**\r\n             * Number of Employees\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return orm.query(\r\n                    \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            item,\r\n                            item,\r\n                            item\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return {\r\n                        month: item.substr(0, 7),\r\n                        count: parseInt(rows[0].count) || 0\r\n                    };\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = item.count;\r\n                return accum;\r\n            }, {\r\n                name: \'Number of Employees\'\r\n            }),\r\n\r\n            /**\r\n             * Remote Employees\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return Promise.props({\r\n                    month: item,\r\n                    value: Promise.props({\r\n                        remote: orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'((`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                            \'OR \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)) \' +\r\n                            \'AND \' +\r\n                            \'`tbu`.`trendata_bigdata_user_remote_employee` = \\\'yes\\\'\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item,\r\n                                    item,\r\n                                    item\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        }),\r\n                        total: orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                            \'OR \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item,\r\n                                    item,\r\n                                    item\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        })\r\n                    })\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = ! item.value.total ? 0 : (Math.round((item.value.remote / item.value.total) * 10000) / 10000);\r\n                return accum;\r\n            }, {\r\n                name: \'Remote Employees\'\r\n            }),\r\n\r\n            /**\r\n             * Total Turnover\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                item = item.split(\'-\');\r\n                var current = new Date(item[0], item[1]);\r\n                var old = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n                var current = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\n                return {\r\n                    old: old.getUTCFullYear() + \'-\' + ((old.getUTCMonth() + 1) < 10 ? (\'0\' + (old.getUTCMonth() + 1).toString()) : (old.getUTCMonth() + 1)) + \'-01\',\r\n                    current: current.getUTCFullYear() + \'-\' + ((current.getUTCMonth() + 1) < 10 ? (\'0\' + (current.getUTCMonth() + 1).toString()) : (current.getUTCMonth() + 1)) + \'-01\'\r\n                };\r\n            }).map(function (item) {\r\n                return Promise.props({\r\n                    term: Promise.resolve().then(function() {\r\n                        return orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL \' +\r\n                            \'AND\' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` >= ? \' +\r\n                            \'AND \' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` < ?\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item.old,\r\n                                    item.current\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        });\r\n                    }),\r\n\r\n                    total: orm.query(\r\n                        \'SELECT \' +\r\n                        \'COUNT(*) AS `count` \' +\r\n                        \'FROM \' +\r\n                        \'`trendata_bigdata_user` AS `tbu` \' +\r\n                        \'INNER JOIN \' +\r\n                        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                        \'ON \' +\r\n                        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                        \'WHERE \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                        \'OR \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                        , {\r\n                            type: ORM.QueryTypes.SELECT,\r\n                            replacements: [\r\n                                item.old,\r\n                                item.old,\r\n                                item.old\r\n                            ]\r\n                        }).then(function (rows) {\r\n                        return rows[0].count;\r\n                    }),\r\n\r\n                    month: item.old\r\n                });\r\n            }).map(function (item) {\r\n                item.total += item.term;\r\n                return item;\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = ! item.total ? 0 : (Math.round((item.term / item.total) * 10000) / 10000);\r\n                return accum;\r\n            }, {\r\n                name: \'Total Turnover\'\r\n            })\r\n        ]),\r\n\r\n        /**\r\n         *\r\n         */\r\n        trendLine: \'POST\' === req.method ? commonChartData.getTrendlineCurvePython(req.body) : [\r\n            [1, 0],\r\n            [2, 0],\r\n            [3, 0],\r\n            [4, 0],\r\n            [5, 0],\r\n            [6, 0],\r\n            [7, 0],\r\n            [8, 0],\r\n            [9, 0],\r\n            [10, 0],\r\n            [11, 0],\r\n            [12, 0]\r\n        ]\r\n    }).then(_resolve).catch(_reject);',	'2017-03-27 16:45:35',	'2017-03-27 16:45:35',	66),
(9,	'SELECT \r\n    `tbhs`.`trendata_bigdata_hire_source_name_token` AS `source`, \r\n    COUNT(`tbhs`.`trendata_bigdata_hire_source_name_token`) AS `count` \r\nFROM \r\n    `trendata_bigdata_user` AS `tbu`\r\nINNER JOIN \r\n    `trendata_bigdata_hire_source` AS `tbhs`\r\nON \r\n    `tbu`.`trendata_bigdata_hire_source_id` = `tbhs`.`trendata_bigdata_hire_source_id`\r\nGROUP BY \r\n    `tbhs`.`trendata_bigdata_hire_source_name_token`',	'Promise.map(_data, function (item) {\r\n    return Promise.props({\r\n        label: ormModels.Translation.getTranslation(item.source),\r\n        value: item.count\r\n    });\r\n}).then(function (data) {\r\n    _resolve({\r\n        data: data,\r\n        legendItemFontSize: \'8\'\r\n    });\r\n}).catch(_reject);',	'2017-03-28 15:06:45',	'2017-03-28 15:06:45',	55),
(10,	'SELECT\r\n    COUNT(*) AS `count`, `tbu`.`trendata_bigdata_user_country` AS `country`\r\nFROM\r\n    `trendata_bigdata_user` AS `tbu`\r\nGROUP BY\r\n    `tbu`.`trendata_bigdata_user_country`',	'Promise.reduce(_data, function (accum, item) {\r\n        accum.categories[0].category.push({\r\n            label: item.country\r\n        });\r\n        accum.dataset[0].data.push({\r\n            value: item.count\r\n        });\r\n        return accum;\r\n\r\n        /*return {\r\n            label: item.country,\r\n            value: item.count\r\n        };*/\r\n    }, {\r\n        categories: [\r\n            {\r\n                category: []\r\n            }\r\n        ],\r\n        dataset: [\r\n            {\r\n                seriesname: \'count\',\r\n                data: []\r\n            }\r\n        ]\r\n    }).then(function (data) {\r\n        _resolve(data);\r\n    }).catch(_reject);',	'2017-03-29 14:10:32',	'2017-03-29 14:10:32',	1),
(11,	NULL,	'var TranslationModel = ormModels.Translation;\r\n\r\n    /**\r\n     * @return {Array.<String>}\r\n     */\r\n    function getMonthRange() {\r\n        var current = new Date;\r\n        var min = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n        var between = [];\r\n        for(var i = 0; i < 12; ++i) {\r\n            between.push(min.getFullYear() + \'-\' + ((min.getMonth() + 1) < 10 ? \'0\' + (min.getMonth() + 1).toString() : (min.getMonth() + 1)) + \'-01\');\r\n            min.setMonth(min.getMonth() - 1);\r\n        }\r\n        return between.reverse();\r\n    }\r\n\r\n    /**\r\n     * @param date\r\n     * @return {String}\r\n     */\r\n    function getMonthNameByDate(date) {\r\n        var monthNumber = date.split(\'-\')[1];\r\n        return {\r\n            \'01\': \'January\',\r\n            \'02\': \'February\',\r\n            \'03\': \'March\',\r\n            \'04\': \'April\',\r\n            \'05\': \'May\',\r\n            \'06\': \'June\',\r\n            \'07\': \'July\',\r\n            \'08\': \'August\',\r\n            \'09\': \'September\',\r\n            \'10\': \'October\',\r\n            \'11\': \'November\',\r\n            \'12\': \'December\'\r\n        }[monthNumber];\r\n    }\r\n\r\n    Promise.props({\r\n        /**\r\n         * Users\r\n         */\r\n        users: commonChartData.getUsersList(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        termAndActive: (function () {\r\n            var current = new Date;\r\n            var old = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n            var current = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\n            current = current.getUTCFullYear() + \'-\' + ((current.getUTCMonth() + 1) < 10 ? (\'0\' + (current.getUTCMonth() + 1).toString()) : (current.getUTCMonth() + 1)) + \'-01\';\r\n            old = old.getUTCFullYear() + \'-\' + ((old.getUTCMonth() + 1) < 10 ? (\'0\' + (old.getUTCMonth() + 1).toString()) : (old.getUTCMonth() + 1)) + \'-01\';\r\n\r\n            return Promise.props({\r\n                /**\r\n                 *\r\n                 */\r\n                term: orm.query(\r\n                    \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_termination_date` >= ? \' +\r\n                    \'AND \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_termination_date` <= ?\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            old,\r\n                            current\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return rows[0].count;\r\n                }),\r\n\r\n                /**\r\n                 *\r\n                 */\r\n                total: Promise.resolve().then(function() {\r\n                    return orm.query(\r\n                        \'SELECT \' +\r\n                        \'COUNT(*) AS `count` \' +\r\n                        \'FROM \' +\r\n                        \'`trendata_bigdata_user` AS `tbu` \' +\r\n                        \'INNER JOIN \' +\r\n                        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                        \'ON \' +\r\n                        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                        \'WHERE \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                        \'OR \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                        , {\r\n                            type: ORM.QueryTypes.SELECT,\r\n                            replacements: [\r\n                                current,\r\n                                current,\r\n                                current\r\n                            ]\r\n                        }\r\n                    ).then(function (rows) {\r\n                        return rows[0].count;\r\n                    });\r\n                })\r\n            }).then(function (data) {\r\n                return {\r\n                    \"data\": [\r\n                        {\r\n                            \"label\": \"Rest of Population\",\r\n                            \"value\": data.total\r\n                        },\r\n                        {\r\n                            \"label\": \"Termination\",\r\n                            \"value\": data.term\r\n                        }\r\n                    ]\r\n                };\r\n            });\r\n        })(),\r\n\r\n        /**\r\n         * Summary tab\r\n         */\r\n        summary: Promise.all([\r\n            /**\r\n             * Avg. Salary\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return orm.query(\r\n                    \'SELECT \' +\r\n                    \'AVG(`tbu`.`trendata_bigdata_user_salary`) AS `avg` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            item,\r\n                            item,\r\n                            item\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return {\r\n                        month: item.substr(0, 7),\r\n                        avgSalary: parseInt(rows[0].avg) || 0\r\n                    };\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = item.avgSalary;\r\n                return accum;\r\n            }, {\r\n                name: \'Avg. Salary\'\r\n            }),\r\n\r\n            /**\r\n             * Number of Employees\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return orm.query(\r\n                    \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            item,\r\n                            item,\r\n                            item\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return {\r\n                        month: item.substr(0, 7),\r\n                        count: parseInt(rows[0].count) || 0\r\n                    };\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = item.count;\r\n                return accum;\r\n            }, {\r\n                name: \'Number of Employees\'\r\n            }),\r\n\r\n            /**\r\n             * Remote Employees\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return Promise.props({\r\n                    month: item,\r\n                    value: Promise.props({\r\n                        remote: orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'((`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                            \'OR \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)) \' +\r\n                            \'AND \' +\r\n                            \'`tbu`.`trendata_bigdata_user_remote_employee` = \\\'yes\\\'\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item,\r\n                                    item,\r\n                                    item\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        }),\r\n                        total: orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                            \'OR \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item,\r\n                                    item,\r\n                                    item\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        })\r\n                    })\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = ! item.value.total ? 0 : (Math.round((item.value.remote / item.value.total) * 10000) / 10000);\r\n                return accum;\r\n            }, {\r\n                name: \'Remote Employees\'\r\n            }),\r\n\r\n            /**\r\n             * Total Turnover\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                item = item.split(\'-\');\r\n                var current = new Date(item[0], item[1]);\r\n                var old = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n                var current = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\n                return {\r\n                    old: old.getUTCFullYear() + \'-\' + ((old.getUTCMonth() + 1) < 10 ? (\'0\' + (old.getUTCMonth() + 1).toString()) : (old.getUTCMonth() + 1)) + \'-01\',\r\n                    current: current.getUTCFullYear() + \'-\' + ((current.getUTCMonth() + 1) < 10 ? (\'0\' + (current.getUTCMonth() + 1).toString()) : (current.getUTCMonth() + 1)) + \'-01\'\r\n                };\r\n            }).map(function (item) {\r\n                return Promise.props({\r\n                    term: Promise.resolve().then(function() {\r\n                        return orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL \' +\r\n                            \'AND\' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` >= ? \' +\r\n                            \'AND \' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` < ?\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item.old,\r\n                                    item.current\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        });\r\n                    }),\r\n\r\n                    total: orm.query(\r\n                        \'SELECT \' +\r\n                        \'COUNT(*) AS `count` \' +\r\n                        \'FROM \' +\r\n                        \'`trendata_bigdata_user` AS `tbu` \' +\r\n                        \'INNER JOIN \' +\r\n                        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                        \'ON \' +\r\n                        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                        \'WHERE \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                        \'OR \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                        , {\r\n                            type: ORM.QueryTypes.SELECT,\r\n                            replacements: [\r\n                                item.old,\r\n                                item.old,\r\n                                item.old\r\n                            ]\r\n                        }).then(function (rows) {\r\n                        return rows[0].count;\r\n                    }),\r\n\r\n                    month: item.old\r\n                });\r\n            }).map(function (item) {\r\n                item.total += item.term;\r\n                return item;\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = ! item.total ? 0 : (Math.round((item.term / item.total) * 10000) / 10000);\r\n                return accum;\r\n            }, {\r\n                name: \'Total Turnover\'\r\n            })\r\n        ]),\r\n\r\n        /**\r\n         *\r\n         */\r\n        trendLine: \'POST\' === req.method ? commonChartData.getTrendlineCurvePython(req.body) : [\r\n            [1, 0],\r\n            [2, 0],\r\n            [3, 0],\r\n            [4, 0],\r\n            [5, 0],\r\n            [6, 0],\r\n            [7, 0],\r\n            [8, 0],\r\n            [9, 0],\r\n            [10, 0],\r\n            [11, 0],\r\n            [12, 0]\r\n        ]\r\n    }).then(_resolve).catch(_reject);',	'2017-03-29 15:21:03',	'2017-03-29 15:21:03',	67),
(12,	NULL,	'var TranslationModel = ormModels.Translation;\r\n\r\n    /**\r\n     * @return {Array.<String>}\r\n     */\r\n    function getMonthRange() {\r\n        var current = new Date;\r\n        var min = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n        var between = [];\r\n        for(var i = 0; i < 6; ++i) {\r\n            between.push(min.getFullYear() + \'-\' + ((min.getMonth() + 1) < 10 ? \'0\' + (min.getMonth() + 1).toString() : (min.getMonth() + 1)) + \'-01\');\r\n            min.setMonth(min.getMonth() - 1);\r\n        }\r\n        return between.reverse();\r\n    }\r\n\r\n    /**\r\n     * @param date\r\n     * @return {String}\r\n     */\r\n    function getMonthNameByDate(date) {\r\n        var monthNumber = date.split(\'-\')[1];\r\n        return {\r\n            \'01\': \'January\',\r\n            \'02\': \'February\',\r\n            \'03\': \'March\',\r\n            \'04\': \'April\',\r\n            \'05\': \'May\',\r\n            \'06\': \'June\',\r\n            \'07\': \'July\',\r\n            \'08\': \'August\',\r\n            \'09\': \'September\',\r\n            \'10\': \'October\',\r\n            \'11\': \'November\',\r\n            \'12\': \'December\'\r\n        }[monthNumber];\r\n    }\r\n\r\n    Promise.props({\r\n        /**\r\n         * Users\r\n         */\r\n        users: commonChartData.getUsersList(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        termAndActive: (function () {\r\n            var current = new Date;\r\n            var old = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n            var current = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\n            current = current.getUTCFullYear() + \'-\' + ((current.getUTCMonth() + 1) < 10 ? (\'0\' + (current.getUTCMonth() + 1).toString()) : (current.getUTCMonth() + 1)) + \'-01\';\r\n            old = old.getUTCFullYear() + \'-\' + ((old.getUTCMonth() + 1) < 10 ? (\'0\' + (old.getUTCMonth() + 1).toString()) : (old.getUTCMonth() + 1)) + \'-01\';\r\n\r\n            return Promise.props({\r\n                /**\r\n                 *\r\n                 */\r\n                term: orm.query(\r\n                    \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_termination_date` >= ? \' +\r\n                    \'AND \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_termination_date` <= ?\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            old,\r\n                            current\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return rows[0].count;\r\n                }),\r\n\r\n                /**\r\n                 *\r\n                 */\r\n                total: Promise.resolve().then(function() {\r\n                    return orm.query(\r\n                        \'SELECT \' +\r\n                        \'COUNT(*) AS `count` \' +\r\n                        \'FROM \' +\r\n                        \'`trendata_bigdata_user` AS `tbu` \' +\r\n                        \'INNER JOIN \' +\r\n                        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                        \'ON \' +\r\n                        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                        \'WHERE \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                        \'OR \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                        , {\r\n                            type: ORM.QueryTypes.SELECT,\r\n                            replacements: [\r\n                                current,\r\n                                current,\r\n                                current\r\n                            ]\r\n                        }\r\n                    ).then(function (rows) {\r\n                        return rows[0].count;\r\n                    });\r\n                })\r\n            }).then(function (data) {\r\n                return {\r\n                    \"data\": [\r\n                        {\r\n                            \"label\": \"Rest of Population\",\r\n                            \"value\": data.total\r\n                        },\r\n                        {\r\n                            \"label\": \"Termination\",\r\n                            \"value\": data.term\r\n                        }\r\n                    ]\r\n                };\r\n            });\r\n        })(),\r\n\r\n        /**\r\n         * Summary tab\r\n         */\r\n        summary: Promise.all([\r\n            /**\r\n             * Avg. Salary\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return orm.query(\r\n                    \'SELECT \' +\r\n                    \'AVG(`tbu`.`trendata_bigdata_user_salary`) AS `avg` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            item,\r\n                            item,\r\n                            item\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return {\r\n                        month: item.substr(0, 7),\r\n                        avgSalary: parseInt(rows[0].avg) || 0\r\n                    };\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = item.avgSalary;\r\n                return accum;\r\n            }, {\r\n                name: \'Avg. Salary\'\r\n            }),\r\n\r\n            /**\r\n             * Number of Employees\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return orm.query(\r\n                    \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                    \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                    \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                    \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                    \'WHERE \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                    , {\r\n                        type: ORM.QueryTypes.SELECT,\r\n                        replacements: [\r\n                            item,\r\n                            item,\r\n                            item\r\n                        ]\r\n                    }\r\n                ).then(function (rows) {\r\n                    return {\r\n                        month: item.substr(0, 7),\r\n                        count: parseInt(rows[0].count) || 0\r\n                    };\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = item.count;\r\n                return accum;\r\n            }, {\r\n                name: \'Number of Employees\'\r\n            }),\r\n\r\n            /**\r\n             * Remote Employees\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                return Promise.props({\r\n                    month: item,\r\n                    value: Promise.props({\r\n                        remote: orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'((`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                            \'OR \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)) \' +\r\n                            \'AND \' +\r\n                            \'`tbu`.`trendata_bigdata_user_remote_employee` = \\\'yes\\\'\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item,\r\n                                    item,\r\n                                    item\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        }),\r\n                        total: orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                            \'OR \' +\r\n                            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item,\r\n                                    item,\r\n                                    item\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        })\r\n                    })\r\n                });\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = ! item.value.total ? 0 : (Math.round((item.value.remote / item.value.total) * 10000) / 10000);\r\n                return accum;\r\n            }, {\r\n                name: \'Remote Employees\'\r\n            }),\r\n\r\n            /**\r\n             * Total Turnover\r\n             */\r\n            Promise.map(getMonthRange(), function (item) {\r\n                item = item.split(\'-\');\r\n                var current = new Date(item[0], item[1]);\r\n                var old = new Date(current.getFullYear(), current.getMonth() - 1, 1, 23);\r\n                var current = new Date(current.getFullYear(), current.getMonth(), 1, 23);\r\n                return {\r\n                    old: old.getUTCFullYear() + \'-\' + ((old.getUTCMonth() + 1) < 10 ? (\'0\' + (old.getUTCMonth() + 1).toString()) : (old.getUTCMonth() + 1)) + \'-01\',\r\n                    current: current.getUTCFullYear() + \'-\' + ((current.getUTCMonth() + 1) < 10 ? (\'0\' + (current.getUTCMonth() + 1).toString()) : (current.getUTCMonth() + 1)) + \'-01\'\r\n                };\r\n            }).map(function (item) {\r\n                return Promise.props({\r\n                    term: Promise.resolve().then(function() {\r\n                        return orm.query(\r\n                            \'SELECT \' +\r\n                            \'COUNT(*) AS `count` \' +\r\n                            \'FROM \' +\r\n                            \'`trendata_bigdata_user` AS `tbu` \' +\r\n                            \'INNER JOIN \' +\r\n                            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                            \'ON \' +\r\n                            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                            \'WHERE \' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL \' +\r\n                            \'AND\' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` >= ? \' +\r\n                            \'AND \' +\r\n                            \'`tbup`.`trendata_bigdata_user_position_termination_date` < ?\'\r\n                            , {\r\n                                type: ORM.QueryTypes.SELECT,\r\n                                replacements: [\r\n                                    item.old,\r\n                                    item.current\r\n                                ]\r\n                            }).then(function (rows) {\r\n                            return rows[0].count;\r\n                        });\r\n                    }),\r\n\r\n                    total: orm.query(\r\n                        \'SELECT \' +\r\n                        \'COUNT(*) AS `count` \' +\r\n                        \'FROM \' +\r\n                        \'`trendata_bigdata_user` AS `tbu` \' +\r\n                        \'INNER JOIN \' +\r\n                        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                        \'ON \' +\r\n                        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                        \'WHERE \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                        \'OR \' +\r\n                        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n                        , {\r\n                            type: ORM.QueryTypes.SELECT,\r\n                            replacements: [\r\n                                item.old,\r\n                                item.old,\r\n                                item.old\r\n                            ]\r\n                        }).then(function (rows) {\r\n                        return rows[0].count;\r\n                    }),\r\n\r\n                    month: item.old\r\n                });\r\n            }).map(function (item) {\r\n                item.total += item.term;\r\n                return item;\r\n            }).reduce(function (accum, item) {\r\n                accum[getMonthNameByDate(item.month)] = ! item.total ? 0 : (Math.round((item.term / item.total) * 10000) / 10000);\r\n                return accum;\r\n            }, {\r\n                name: \'Total Turnover\'\r\n            })\r\n        ]),\r\n\r\n        /**\r\n         *\r\n         */\r\n        trendLine: \'POST\' === req.method ? commonChartData.getTrendlineCurvePython(req.body) : [\r\n            [1, 0],\r\n            [2, 0],\r\n            [3, 0],\r\n            [4, 0],\r\n            [5, 0],\r\n            [6, 0],\r\n            [7, 0],\r\n            [8, 0],\r\n            [9, 0],\r\n            [10, 0],\r\n            [11, 0],\r\n            [12, 0]\r\n        ]\r\n    }).then(_resolve).catch(_reject);',	'2017-03-29 15:21:46',	'2017-03-29 15:21:46',	68),
(13,	'',	'var current = new Date;\r\n    current = current.getFullYear() + \'-\' + ((current.getMonth() + 1) < 10 ? \'0\' + (current.getMonth() + 1).toString() : (current.getMonth() + 1)) + \'-01\';\r\n\r\n    Promise.reduce([\r\n        \'trendata_bigdata_user_performance_percentage_this_year\',\r\n        \'trendata_bigdata_user_performance_percentage_1_year_ago\',\r\n        \'trendata_bigdata_user_performance_percentage_2_year_ago\',\r\n        \'trendata_bigdata_user_performance_percentage_3_year_ago\',\r\n        \'trendata_bigdata_user_performance_percentage_4_year_ago\'\r\n    ], function (accum, item) {\r\n        return accum || orm.query(\'SELECT COUNT(*) AS `count` FROM `trendata_bigdata_user` WHERE `\' + item + \'` IS NOT NULL\', {\r\n                type: ORM.QueryTypes.SELECT\r\n            }).then(function (rows) {\r\n                return rows[0].count ? item : null;\r\n            });\r\n    }, null).then(function (column) {\r\n        if (! column) {\r\n            return Promise.props({\r\n                total: 1,\r\n                data: [\r\n                    {value: 0},\r\n                    {value: 0},\r\n                    {value: 0},\r\n                    {value: 0},\r\n                    {value: 0},\r\n                    {value: 0}\r\n                ]\r\n            });\r\n        }\r\n\r\n        return orm.query(\r\n            \'SELECT \' +\r\n                \'`tbu`.`\' + column + \'` AS `performance` \' +\r\n            \'FROM \' +\r\n                \'`trendata_bigdata_user` AS `tbu` \' +\r\n            \'INNER JOIN \' +\r\n                \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n            \'ON \' +\r\n                \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n            \'WHERE \' +\r\n                \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n            \'OR \' +\r\n                \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n        , {\r\n            type: ORM.QueryTypes.SELECT,\r\n            replacements: [\r\n                current,\r\n                current,\r\n                current\r\n            ]\r\n        }).reduce(function (accum, item, index, length) {\r\n            accum.total = length;\r\n            var performance = parseInt(item.performance) || 0;\r\n\r\n            if ([0, 1, 2, 3, 4, 5].indexOf(performance) === -1) {\r\n                return accum;\r\n            }\r\n\r\n            accum.data[performance].value++;\r\n            return accum;\r\n        }, {\r\n            total: 1,\r\n            data: [\r\n                {value: 0},\r\n                {value: 0},\r\n                {value: 0},\r\n                {value: 0},\r\n                {value: 0},\r\n                {value: 0}\r\n            ]\r\n        });\r\n    }).then(function (data) {\r\n        return Promise.map(data.data, function (item) {\r\n            return {\r\n                value: Math.round((item.value / data.total) * 10000) / 100\r\n            };\r\n        });\r\n    }).then(function (data) {\r\n        _resolve({\r\n            slantLabels: \'1\',\r\n            numberPrefix: \'\',\r\n            numberSuffix: \'%\',\r\n            numDivlines: \'3\',\r\n            adjustDiv: \'0\',\r\n            yAxisMaxvalue: \'100\',\r\n            yAxisMinValue: \'0\',\r\n            plotToolText:  \"$seriesname \" + \"$label\" + \", \" + \"$value\" + \"%\",\r\n            categories: [\r\n                {\r\n                    category: [\r\n                        {label: \'N/A\'},\r\n                        {label: \'1\'},\r\n                        {label: \'2\'},\r\n                        {label: \'3\'},\r\n                        {label: \'4\'},\r\n                        {label: \'5\'}\r\n                    ]\r\n                }\r\n            ],\r\n            dataset: [\r\n                {\r\n                    seriesname: \'Performance Score\',\r\n                    data: data\r\n                }\r\n            ]\r\n        });\r\n    }).catch(_reject);',	'2017-04-06 18:23:39',	'2017-04-06 18:23:39',	29),
(14,	NULL,	'Promise.props({\r\n    users: commonChartData.getUsersList()\r\n}).then(_resolve).catch(_reject);',	'2017-04-07 15:49:08',	'2017-04-07 15:49:08',	69),
(15,	NULL,	'Promise.props({\r\n    users: commonChartData.getUsersList()\r\n}).then(_resolve).catch(_reject);',	'2017-04-12 18:36:52',	'2017-04-12 18:36:52',	70),
(16,	NULL,	'function number_format(number, decimals, dec_point, thousands_sep) {\r\n  number = (number + \'\').replace(/[^0-9+\\-Ee.]/g, \'\');\r\n  var n = !isFinite(+number) ? 0 : +number,\r\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n    sep = (typeof thousands_sep === \'undefined\') ? \',\' : thousands_sep,\r\n    dec = (typeof dec_point === \'undefined\') ? \'.\' : dec_point,\r\n    s = \'\',\r\n    toFixedFix = function (n, prec) {\r\n      var k = Math.pow(10, prec);\r\n      return \'\' + Math.round(n * k) / k;\r\n    };\r\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\r\n  s = (prec ? toFixedFix(n, prec) : \'\' + Math.round(n)).split(\'.\');\r\n  if (s[0].length > 3) {\r\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n  }\r\n  if ((s[1] || \'\').length < prec) {\r\n    s[1] = s[1] || \'\';\r\n    s[1] += new Array(prec - s[1].length + 1).join(\'0\');\r\n  }\r\n  return s.join(dec);\r\n}\r\n\r\n\r\n\r\nPromise.props({\r\n        /**\r\n         *\r\n         */\r\n        users: (function () {\r\n            var current = new Date;\r\n            current = current.getFullYear() + \'-\' + ((current.getMonth() + 1) < 10 ? \'0\' + (current.getMonth() + 1).toString() : (current.getMonth() + 1)) + \'-01\';\r\n\r\n            return orm.query(\r\n                \'SELECT \' +\r\n                \'COUNT(*) as `total_number_of_employees` \' +\r\n                \'FROM \' +\r\n                \'`trendata_bigdata_user` AS `tbu` \' +\r\n                \'INNER JOIN \' +\r\n                \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                \'ON \' +\r\n                \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                \'WHERE \' +\r\n                \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                \'OR \' +\r\n                \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n            , {\r\n                type: ORM.QueryTypes.SELECT,\r\n                replacements: [\r\n                    current,\r\n                    current,\r\n                    current\r\n                ]\r\n            }).then(function (rows) {\r\n                return rows[0][\'total_number_of_employees\'];\r\n            });\r\n        })(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        value: (function () {\r\n            var FinancialDataModel = ormModels.FinancialData;\r\n            var currentDate = new Date();\r\n            var lastMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 3);\r\n            var valueYear = lastMonth.getFullYear();\r\n            var valueMonth = lastMonth.getMonth();\r\n\r\n            return FinancialDataModel.findOne({\r\n                where: {\r\n                    trendata_financial_data_year: valueYear\r\n                }\r\n            }).then(function (data) {\r\n                if (! data) {\r\n                    return 0;\r\n                }\r\n\r\n                var value = JSON.parse(data.trendata_financial_data_json_data);\r\n                return value && value[0] && value[0].data && value[0].data[valueMonth] && value[0].data[valueMonth].value || 0;\r\n            });\r\n        })()\r\n    }).then(function (data) {\r\n        return {\r\n            users: parseInt(data.users) || 0,\r\n            value: parseInt(data.value) || 0\r\n        };\r\n    }).then(function (data) {\r\n        _resolve({\r\n            data: [\r\n                {\r\n                    label: \'\',\r\n                    value: \'$\' + number_format(0 == data.users ? 0 : Math.round(data.value / data.users))\r\n                }\r\n            ]\r\n        });\r\n    }).catch(_reject);',	'2017-04-18 12:57:11',	'2017-04-18 12:57:11',	71),
(17,	NULL,	'Promise.props({\r\n        /**\r\n         *\r\n         */\r\n        users: commonChartData.getUsersList(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        gross_revenue: (function () {\r\n            var FinancialDataModel = ormModels.FinancialData;\r\n            var currentDate = new Date();\r\n            var lastMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 3);\r\n            var valueYear = lastMonth.getFullYear();\r\n            var valueMonth = lastMonth.getMonth();\r\n\r\n            return FinancialDataModel.findOne({\r\n                where: {\r\n                    trendata_financial_data_year: valueYear\r\n                }\r\n            }).then(function (data) {\r\n                if (! data) {\r\n                    return 0;\r\n                }\r\n\r\n                var value = JSON.parse(data.trendata_financial_data_json_data);\r\n                return parseInt(value && value[0] && value[0].data && value[0].data[valueMonth] && value[0].data[valueMonth].value || 0) || 0;\r\n            });\r\n        })()\r\n    }).then(_resolve).catch(_reject);',	'2017-04-18 15:45:42',	'2017-04-18 15:45:42',	72),
(18,	NULL,	'var current = new Date;\r\n    current = current.getFullYear() + \'-\' + ((current.getMonth() + 1) < 10 ? \'0\' + (current.getMonth() + 1).toString() : (current.getMonth() + 1)) + \'-01\';\r\n\r\n    orm.query(\r\n        \'SELECT \' +\r\n        \'DATEDIFF(CURDATE(), `tbup`.`trendata_bigdata_user_position_hire_date`) AS `hire_diff`, \' +\r\n        \'DATEDIFF(CURDATE(), `tbu`.`trendata_bigdata_user_rehire_date`) AS `rehire_diff` \' +\r\n        \'FROM \' +\r\n        \'`trendata_bigdata_user` AS `tbu` \' +\r\n        \'INNER JOIN \' +\r\n        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n        \'ON \' +\r\n        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n        \'WHERE \' +\r\n        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n        \'OR \' +\r\n        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n        , {\r\n            type: ORM.QueryTypes.SELECT,\r\n            replacements: [\r\n                current,\r\n                current,\r\n                current\r\n            ]\r\n        }).reduce(function (accum, item, index, length) {\r\n        if (! accum.total) {\r\n            accum.total = length;\r\n        }\r\n        var diff = item.rehire_diff || item.hire_diff || null;\r\n        if (null === diff) {\r\n            return accum;\r\n        }\r\n\r\n        if (diff <= 365) {\r\n            accum.less1++;\r\n        } else if (diff <= 365 * 2) {\r\n            accum.less2++;\r\n        } else if (diff <= 365 * 5) {\r\n            accum.less5++;\r\n        } else if (diff <= 365 * 10) {\r\n            accum.less10++;\r\n        } else if (diff <= 365 * 20) {\r\n            accum.less20++;\r\n        } else {\r\n            accum.more20++;\r\n        }\r\n\r\n        return accum;\r\n    }, {\r\n        less1: 0,\r\n        less2: 0,\r\n        less5: 0,\r\n        less10: 0,\r\n        less20: 0,\r\n        more20: 0,\r\n        total: undefined\r\n    }).then(function (data) {\r\n        _resolve({\r\n            categories: [\r\n                {\r\n                    category: [\r\n                        {label: \'<1\'},\r\n                        {label: \'<2\'},\r\n                        {label: \'<5\'},\r\n                        {label: \'<10\'},\r\n                        {label: \'<20\'},\r\n                        {label: \'>20\'}\r\n                    ]\r\n                }\r\n            ],\r\n            dataset: [\r\n                {\r\n                    seriesname: \'Tenure\',\r\n                    data: [\r\n                        {\r\n                            value: Math.round((data.less1 / data.total) * 10000) / 100\r\n                        },\r\n                        {\r\n                            value: Math.round((data.less2 / data.total) * 10000) / 100\r\n                        },\r\n                        {\r\n                            value: Math.round((data.less5 / data.total) * 10000) / 100\r\n                        },\r\n                        {\r\n                            value: Math.round((data.less10 / data.total) * 10000) / 100\r\n                        },\r\n                        {\r\n                            value: Math.round((data.less20 / data.total) * 10000) / 100\r\n                        },\r\n                        {\r\n                            value: Math.round((data.more20 / data.total) * 10000) / 100\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            numberPrefix: \'\',\r\n            numberSuffix: \'%\',\r\n            numDivlines: \'3\',\r\n            adjustDiv: \'0\',\r\n            yAxisMaxvalue: \'4\',\r\n            slantLabels: \'1\',\r\n            plotToolText:  \"$seriesname \" + \"$label\" + \", \" + \"$value\" + \"%\"\r\n        });\r\n    }).catch(_reject);',	'2017-04-19 12:59:56',	'2017-04-19 12:59:56',	30),
(19,	NULL,	'var current = new Date;\r\ncurrent = current.getFullYear() + \'-\' + ((current.getMonth() + 1) < 10 ? \'0\' + (current.getMonth() + 1).toString() : (current.getMonth() + 1)) + \'-01\';\r\n\r\norm.query(\r\n    \'SELECT \' +\r\n        \'ROUND(AVG(`tbu`.`trendata_bigdata_user_absences`), 1) AS `absences_average` \' +\r\n    \'FROM \' +\r\n        \'`trendata_bigdata_user` AS `tbu` \' +\r\n    \'INNER JOIN \' +\r\n        \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n    \'ON \' +\r\n        \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n    \'WHERE \' +\r\n        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n    \'OR \' +\r\n        \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)\'\r\n, {\r\n    type: ORM.QueryTypes.SELECT,\r\n    replacements: [\r\n        current,\r\n        current,\r\n        current\r\n    ]\r\n}).then(function (rows) {\r\n    _resolve({\r\n        data: [\r\n            {\r\n                label: \'\',\r\n                value: null === rows[0].absences_average ? \'No data\' : (rows[0].absences_average + \' days\')\r\n            }\r\n        ]\r\n    });\r\n}).catch(_reject);',	'2017-04-19 17:39:39',	'2017-04-19 17:39:39',	73),
(20,	NULL,	'var current = new Date;\r\n    current = current.getFullYear() + \'-\' + ((current.getMonth() + 1) < 10 ? \'0\' + (current.getMonth() + 1).toString() : (current.getMonth() + 1)) + \'-01\';\r\n\r\n    orm.query(\r\n        \'SELECT \' +\r\n            \'ROUND(AVG(DATEDIFF(`tbup`.`trendata_bigdata_user_position_hire_date`, `tbu`.`trendata_bigdata_user_posting_date`)), 1) AS `avg` \' +\r\n        \'FROM \' +\r\n            \'`trendata_bigdata_user` AS `tbu` \' +\r\n        \'INNER JOIN \' +\r\n            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n        \'ON \' +\r\n            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n        \'WHERE \' +\r\n            \'((`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n            \'OR \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)) \' +\r\n        \'AND \' +\r\n            \'`tbu`.`trendata_bigdata_user_posting_date` IS NOT NULL\'\r\n    , {\r\n        type: ORM.QueryTypes.SELECT,\r\n        replacements: [\r\n            current,\r\n            current,\r\n            current\r\n        ]\r\n    }).then(function (rows) {\r\n        _resolve({\r\n            data: [\r\n                {\r\n                    label: \'\',\r\n                    value: rows[0].avg + \' days\'\r\n                }\r\n            ]\r\n        });\r\n    }).catch(_reject);',	'2017-04-21 15:32:32',	'2017-04-21 15:32:32',	58),
(21,	NULL,	'Promise.props({\r\n        /**\r\n         *\r\n         */\r\n        costOfBenefit: (function () {\r\n            var FinancialDataModel = ormModels.FinancialData;\r\n            var currentDate = new Date();\r\n            var lastMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 3);\r\n            var valueYear = lastMonth.getFullYear();\r\n            var valueMonth = lastMonth.getMonth();\r\n\r\n            return FinancialDataModel.findOne({\r\n                where: {\r\n                    trendata_financial_data_year: valueYear\r\n                }\r\n            }).then(function (data) {\r\n                if (! data) {\r\n                    return 0;\r\n                }\r\n\r\n                var value = JSON.parse(data.trendata_financial_data_json_data);\r\n                return parseInt(value && value[0] && value[0].data && value[0].data[valueMonth] && value[4].data[valueMonth].value || 0);\r\n            });\r\n        })(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        costOfBenefitFromTuff: orm.query(\r\n            \'SELECT \' +\r\n            \'SUM(`tbu`.`trendata_bigdata_user_benefit_costs`) as `sum` \' +\r\n            \'FROM \' +\r\n            \'`trendata_bigdata_user` AS `tbu` \' +\r\n            \'INNER JOIN \' +\r\n            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n            \'ON \' +\r\n            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n            \'WHERE \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, \\\'%Y-%m-01\\\') AND `tbup`.`trendata_bigdata_user_position_termination_date` >= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, \\\'%Y-%m-01\\\')) \' +\r\n            \'OR \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, \\\'%Y-%m-01\\\'))\'\r\n        , {\r\n            type: ORM.QueryTypes.SELECT\r\n        }).then(function (rows) {\r\n            return rows[0].sum\r\n        }),\r\n\r\n        /**\r\n         *\r\n         */\r\n        cashCompensation: orm.query(\r\n            \'SELECT \' +\r\n            \'ROUND(SUM(`tbu`.`trendata_bigdata_user_salary`), 0) as `avg` \' +\r\n            \'FROM \' +\r\n            \'`trendata_bigdata_user` AS `tbu` \' +\r\n            \'INNER JOIN \' +\r\n            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n            \'ON \' +\r\n            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n            \'WHERE \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, \\\'%Y-%m-01\\\') AND `tbup`.`trendata_bigdata_user_position_termination_date` >= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, \\\'%Y-%m-01\\\')) \' +\r\n            \'OR \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, \\\'%Y-%m-01\\\'))\'\r\n        , {\r\n            type: ORM.QueryTypes.SELECT\r\n        }).then(function (rows) {\r\n            return rows[0].avg\r\n        })\r\n    }).then(function (data) {\r\n        _resolve({\r\n            decimals: \'2\',\r\n            data: [\r\n                {\r\n                    label: \'Cash compensation\',\r\n                    value: data.cashCompensation\r\n                },\r\n                {\r\n                    label: \'Cost of benefit\',\r\n                    value: null === data.costOfBenefitFromTuff ? data.costOfBenefit : data.costOfBenefitFromTuff\r\n                }\r\n            ]\r\n        });\r\n    }).catch(_reject);',	'2017-04-21 17:33:18',	'2017-04-21 17:33:18',	17),
(22,	NULL,	'var current = new Date;\r\n    current = current.getFullYear() + \'-\' + ((current.getMonth() + 1) < 10 ? \'0\' + (current.getMonth() + 1).toString() : (current.getMonth() + 1)) + \'-01\';\r\n\r\n    Promise.reduce([\r\n        \'trendata_bigdata_user_performance_percentage_this_year\',\r\n        \'trendata_bigdata_user_performance_percentage_1_year_ago\',\r\n        \'trendata_bigdata_user_performance_percentage_2_year_ago\',\r\n        \'trendata_bigdata_user_performance_percentage_3_year_ago\',\r\n        \'trendata_bigdata_user_performance_percentage_4_year_ago\'\r\n    ], function (accum, item) {\r\n        return accum || orm.query(\'SELECT COUNT(*) AS `count` FROM `trendata_bigdata_user` WHERE `\' + item + \'` IS NOT NULL\', {\r\n                type: ORM.QueryTypes.SELECT\r\n            }).then(function (rows) {\r\n                return rows[0].count ? item : null;\r\n            });\r\n    }, null).then(function (column) {\r\n        if (! column) {\r\n            return Promise.props({\r\n                total: 1,\r\n                data: [\r\n                    {value: 0},\r\n                    {value: 0},\r\n                    {value: 0},\r\n                    {value: 0},\r\n                    {value: 0},\r\n                    {value: 0}\r\n                ]\r\n            });\r\n        }\r\n\r\n        return orm.query(\r\n            \'SELECT \' +\r\n            \'`tbu`.`\' + column + \'` AS `performance` \' +\r\n            \'FROM \' +\r\n            \'`trendata_bigdata_user` AS `tbu` \' +\r\n            \'INNER JOIN \' +\r\n            \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n            \'ON \' +\r\n            \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n            \'WHERE \' +\r\n            \'((`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n            \'OR \' +\r\n            \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)) \' +\r\n            \'AND `tbu`.`trendata_bigdata_user_prof_development` = \\\'yes\\\'\'\r\n            , {\r\n                type: ORM.QueryTypes.SELECT,\r\n                replacements: [\r\n                    current,\r\n                    current,\r\n                    current\r\n                ]\r\n            }).reduce(function (accum, item, index, length) {\r\n            accum.total = length;\r\n            var performance = parseInt(item.performance) || 0;\r\n\r\n            if ([0, 1, 2, 3, 4, 5].indexOf(performance) === -1) {\r\n                return accum;\r\n            }\r\n\r\n            accum.data[performance].value++;\r\n            return accum;\r\n        }, {\r\n            total: 1,\r\n            data: [\r\n                {value: 0},\r\n                {value: 0},\r\n                {value: 0},\r\n                {value: 0},\r\n                {value: 0},\r\n                {value: 0}\r\n            ]\r\n        });\r\n    }).then(function (data) {\r\n        return Promise.map(data.data, function (item) {\r\n            return {\r\n                value: Math.round((item.value / data.total) * 10000) / 100\r\n            };\r\n        });\r\n    }).then(function (data) {\r\n        _resolve({\r\n            slantLabels: \'1\',\r\n            numberPrefix: \'\',\r\n            numberSuffix: \'%\',\r\n            numDivlines: \'3\',\r\n            adjustDiv: \'0\',\r\n            yAxisMaxvalue: \'100\',\r\n            yAxisMinValue: \'0\',\r\n            plotToolText:  \"$seriesname \" + \"$label\" + \", \" + \"$value\" + \"%\",\r\n            categories: [\r\n                {\r\n                    category: [\r\n                        {label: \'N/A\'},\r\n                        {label: \'1\'},\r\n                        {label: \'2\'},\r\n                        {label: \'3\'},\r\n                        {label: \'4\'},\r\n                        {label: \'5\'}\r\n                    ]\r\n                }\r\n            ],\r\n            dataset: [\r\n                {\r\n                    seriesname: \'Performance Score\',\r\n                    data: data\r\n                }\r\n            ]\r\n        });\r\n    }).catch(_reject);',	'2017-04-21 18:36:31',	'2017-04-21 18:36:31',	74),
(23,	NULL,	'function number_format(number, decimals, dec_point, thousands_sep) {\r\n  number = (number + \'\').replace(/[^0-9+\\-Ee.]/g, \'\');\r\n  var n = !isFinite(+number) ? 0 : +number,\r\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n    sep = (typeof thousands_sep === \'undefined\') ? \',\' : thousands_sep,\r\n    dec = (typeof dec_point === \'undefined\') ? \'.\' : dec_point,\r\n    s = \'\',\r\n    toFixedFix = function (n, prec) {\r\n      var k = Math.pow(10, prec);\r\n      return \'\' + Math.round(n * k) / k;\r\n    };\r\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\r\n  s = (prec ? toFixedFix(n, prec) : \'\' + Math.round(n)).split(\'.\');\r\n  if (s[0].length > 3) {\r\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n  }\r\n  if ((s[1] || \'\').length < prec) {\r\n    s[1] = s[1] || \'\';\r\n    s[1] += new Array(prec - s[1].length + 1).join(\'0\');\r\n  }\r\n  return s.join(dec);\r\n}\r\n\r\nPromise.props({\r\n        /**\r\n         *\r\n         */\r\n        count: (function () {\r\n            var min = new Date;\r\n            min = new Date(min.getFullYear(), min.getMonth() - 1, 1, 23, 59, 59);\r\n            min = min.getFullYear() + \'-\' + ((min.getMonth() + 1) < 10 ? \'0\' + (min.getMonth() + 1).toString() : (min.getMonth() + 1)) + \'-01\';\r\n\r\n            var max = new Date;\r\n            max = new Date(max.getFullYear(), max.getMonth(), 1, 23, 59, 59);\r\n            max = max.getFullYear() + \'-\' + ((max.getMonth() + 1) < 10 ? \'0\' + (max.getMonth() + 1).toString() : (max.getMonth() + 1)) + \'-01\';\r\n\r\n            return orm.query(\r\n                \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                \'WHERE \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_hire_date` >= ? \' +\r\n                \'AND \' +\r\n                    \'`tbup`.`trendata_bigdata_user_position_hire_date` < ?\'\r\n            , {\r\n                type: ORM.QueryTypes.SELECT,\r\n                replacements: [\r\n                    min,\r\n                    max\r\n                ]\r\n            }).then(function (rows) {\r\n                return parseInt(rows[0].count) || 0;\r\n            });\r\n        })(),\r\n\r\n        /**\r\n         *\r\n         */\r\n        value: (function () {\r\n            var FinancialDataModel = ormModels.FinancialData;\r\n            var currentDate = new Date();\r\n            var lastMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 3);\r\n            var valueYear = lastMonth.getFullYear();\r\n            var valueMonth = lastMonth.getMonth();\r\n\r\n            return FinancialDataModel.findOne({\r\n                where: {\r\n                    trendata_financial_data_year: valueYear\r\n                }\r\n            }).then(function (data) {\r\n                if (! data) {\r\n                    return 0;\r\n                }\r\n\r\n                var value = JSON.parse(data.trendata_financial_data_json_data);\r\n                return parseInt(value && value[0] && value[0].data && value[0].data[valueMonth] && value[5].data[valueMonth].value || 0);\r\n            });\r\n        })()\r\n    }).then(function (data) {\r\n        return data.count ? (Math.round((data.value / data.count) * 100) / 100) : 0;\r\n    }).then(function (value) {\r\n        _resolve({\r\n            data: [\r\n                {\r\n                    label: \'\',\r\n                    value: \'$\' + number_format(value)\r\n                }\r\n            ]\r\n        });\r\n    }).catch(_reject);',	'2017-04-25 13:29:12',	'2017-04-25 13:29:12',	59),
(24,	NULL,	'Promise.props({\r\n        /**\r\n         *\r\n         */\r\n        yes: (function () {\r\n            var last = new Date;\r\n            last = new Date(last.getFullYear(), last.getMonth() - 1, 1, 23, 59, 59);\r\n            last = last.getFullYear() + \'-\' + ((last.getMonth() + 1) < 10 ? \'0\' + (last.getMonth() + 1).toString() : (last.getMonth() + 1)) + \'-01\';\r\n\r\n            return orm.query(\r\n                \'SELECT \' +\r\n                    \'COUNT(*) AS `count` \' +\r\n                \'FROM \' +\r\n                    \'`trendata_bigdata_user` AS `tbu` \' +\r\n                \'INNER JOIN \' +\r\n                    \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                \'ON \' +\r\n                    \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                \'WHERE \' +\r\n                    \'((`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                    \'OR \' +\r\n                    \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)) \' +\r\n                \'AND `tbu`.`trendata_bigdata_user_successor` IS NOT NULL\'\r\n            , {\r\n                type: ORM.QueryTypes.SELECT,\r\n                replacements: [\r\n                    last,\r\n                    last,\r\n                    last\r\n                ]\r\n            }).then(function (rows) {\r\n                return parseInt(rows[0].count) || 0;\r\n            });\r\n        })(),\r\n        /**\r\n         *\r\n         */\r\n        no: (function () {\r\n            var last = new Date;\r\n            last = new Date(last.getFullYear(), last.getMonth() - 1, 1, 23, 59, 59);\r\n            last = last.getFullYear() + \'-\' + ((last.getMonth() + 1) < 10 ? \'0\' + (last.getMonth() + 1).toString() : (last.getMonth() + 1)) + \'-01\';\r\n\r\n            return orm.query(\r\n                \'SELECT \' +\r\n                \'COUNT(*) AS `count` \' +\r\n                \'FROM \' +\r\n                \'`trendata_bigdata_user` AS `tbu` \' +\r\n                \'INNER JOIN \' +\r\n                \'`trendata_bigdata_user_position` AS `tbup` \' +\r\n                \'ON \' +\r\n                \'`tbu`.`trendata_bigdata_user_id` = `tbup`.`trendata_bigdata_user_id` \' +\r\n                \'WHERE \' +\r\n                \'((`tbup`.`trendata_bigdata_user_position_termination_date` IS NOT NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ? AND `tbup`.`trendata_bigdata_user_position_termination_date` >= ?) \' +\r\n                \'OR \' +\r\n                \'(`tbup`.`trendata_bigdata_user_position_termination_date` IS NULL AND `tbup`.`trendata_bigdata_user_position_hire_date` <= ?)) \' +\r\n                \'AND `tbu`.`trendata_bigdata_user_successor` IS NULL\'\r\n                , {\r\n                    type: ORM.QueryTypes.SELECT,\r\n                    replacements: [\r\n                        last,\r\n                        last,\r\n                        last\r\n                    ]\r\n                }).then(function (rows) {\r\n                return parseInt(rows[0].count) || 0;\r\n            });\r\n        })()\r\n    }).then(function (data) {\r\n        _resolve({\r\n            data: [\r\n                {\r\n                    label: \'Yes\',\r\n                    value: data.yes\r\n                },\r\n                {\r\n                    label: \'No\',\r\n                    value: data.no\r\n                }\r\n            ]\r\n        });\r\n    }).catch(_reject);',	'2017-04-25 16:05:22',	'2017-04-25 16:05:22',	75);;;;;

DROP TABLE IF EXISTS `trendata_tag`;;;;;
CREATE TABLE `trendata_tag` (
  `trendata_tag_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_tag_title` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_tag_description` text COLLATE utf8_unicode_ci NOT NULL,
  `trendata_tag_status` enum('0','1','2') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_tag`;;;;;
INSERT INTO `trendata_tag` (`trendata_tag_id`, `trendata_tag_title`, `trendata_tag_description`, `trendata_tag_status`, `created_at`, `updated_at`) VALUES
(1,	'headcount',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(2,	'location',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(3,	'departments',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(4,	'designations',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(5,	'talent',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(6,	'productivity',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(7,	'manager',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(8,	'profit',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(9,	'employee',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(10,	'turnover',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(11,	'attrition',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(12,	'tenure',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(13,	'opportunity',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(14,	'salary',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(16,	'holiday',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(17,	'sickness',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(18,	'expenses',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(19,	'absence',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(20,	'compa',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(21,	'equivalents',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(22,	'health_care',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(23,	'interview_',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(24,	'satisfaction',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(25,	'gender',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(26,	'equality',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(27,	'job',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(28,	'empowerment',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(29,	'deviation',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(30,	'work_life',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(31,	'presence',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(32,	'global',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(33,	'worker',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(34,	'compensation',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(35,	'severity',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(36,	'training',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(37,	'recruiting',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(38,	'quality',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(39,	'boarding',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(40,	'nationality',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(41,	'hr',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(42,	'roi',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(43,	'source',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(44,	'Cost',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(45,	'revenue',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(46,	'joining',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00'),
(47,	'registration',	'',	'1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00');;;;;

DROP TABLE IF EXISTS `trendata_tile`;;;;;
CREATE TABLE `trendata_tile` (
  `trendata_tile_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_tile_key` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_tile_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_tile_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_tile_title_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_tile_description_token` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_tile_default_chart_type` int(10) unsigned NOT NULL DEFAULT '4',
  `trendata_tile_status` enum('0','1','2') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `trendata_tile_position_x` int(10) unsigned NOT NULL DEFAULT '0',
  `trendata_tile_position_y` int(10) unsigned NOT NULL DEFAULT '0',
  `trendata_tile_width` int(10) unsigned NOT NULL DEFAULT '3',
  `trendata_tile_height` int(10) unsigned NOT NULL DEFAULT '4',
  `trendata_tile_type` enum('1','2','3') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`trendata_tile_id`),
  KEY `trendata_tile_default_chart_type` (`trendata_tile_default_chart_type`),
  CONSTRAINT `trendata_tile_ibfk_1` FOREIGN KEY (`trendata_tile_default_chart_type`) REFERENCES `trendata_chart_type` (`trendata_chart_type_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_tile`;;;;;
INSERT INTO `trendata_tile` (`trendata_tile_id`, `trendata_tile_key`, `trendata_tile_created_by`, `trendata_tile_last_modified_by`, `trendata_tile_title_token`, `trendata_tile_description_token`, `trendata_tile_default_chart_type`, `trendata_tile_status`, `trendata_tile_position_x`, `trendata_tile_position_y`, `trendata_tile_width`, `trendata_tile_height`, `trendata_tile_type`, `created_at`, `updated_at`) VALUES
(1,	'headcount_vs_location',	0,	0,	'db546fdc-b7f4-458f-b19c-6aa8af1ac0de',	'086a2280-1e87-40e5-9e60-6de3c4cbcec7',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(2,	'headcount_vs_departments',	0,	0,	'717ad7ed-b8eb-46e2-a6fd-cfb288d71408',	'8eb827e5-5c09-4071-b4d8-77f85c6d7871',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(3,	'headcount_vs_designations',	0,	0,	'fc166853-115d-4a95-a0aa-6e9a9603064f',	'07663e4a-cf66-4d1e-9d79-bb04d6bb8dcb',	4,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(4,	'headcount_vs_Time',	0,	0,	'c9b1629d-e78e-4362-8100-4e97346e279c',	'145d1c36-b8c8-4a69-b64f-06e32530aeea',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(5,	'talent_vs_potential',	0,	0,	'1dccc3ab-2bcd-4cae-b88f-cdfd1c0508fc',	'69a69115-3ce3-4d0d-9493-a4d8c2143c64',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(6,	'performance_rating',	0,	0,	'e5aacd6c-e3dc-4dc3-9e4c-18d4833d6a41',	'3ba782d6-8b1d-4913-a4a4-0fe59421f862',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(7,	'manager_performance',	0,	0,	'16395b33-b1c7-413a-9d60-16b59119c0e7',	'8f3c7058-fd70-4cdf-84a8-622eba2450f5',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(8,	'above_average_performer_yield_ratio',	0,	0,	'94063e63-fc20-4869-9f48-f5f3c4290cce',	'5f827ade-bd06-4cc2-90ae-8cd6648ce733',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(9,	'profit_per_employee',	0,	0,	'1189b79e-856b-4e77-bd1c-f63144ba1bc0',	'4a5a8d74-cacb-40fb-8d4f-8d3a7a87d8ac',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(10,	'employee_turnover_overall',	0,	0,	'ca4a84d1-33d8-4cee-afbc-a44e02b53c63',	'd5414e1b-82f5-49a1-b3a5-97b9a1df7633',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(11,	'employee_turnover_by_department',	0,	0,	'e7f16e32-4bf2-4e40-8f3e-fc97bd126068',	'90c13d2e-92b8-447f-a698-672112a95b41',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(12,	'employee_turnover_by_manager',	0,	0,	'f08b35e2-27f8-451b-966d-79d42f304fe9',	'60f7bbdc-7ebf-4dcd-a087-dbf7d4140b1a',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(13,	'attrition_rate_vs_reasons',	0,	0,	'2c511354-a824-4012-a022-fccef152af77',	'996d58af-0ddb-4035-9081-189375e6bcbf',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(14,	'average_tenure_vs_department',	0,	0,	'6aa9bda3-e8ef-4975-9040-b79630c2d18b',	'9d5ea324-5fe5-40d6-8280-8325693d8897',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(15,	'average_tenure',	0,	0,	'9d682fb3-dd78-466d-8a11-7508d46805b8',	'8183f572-c1da-4b8a-ac3f-82ff4e5afc45',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(16,	'equal_opportunities',	0,	0,	'87440058-bb5f-4fb6-ae71-0a7c114875bb',	'a6067e33-8b30-4ef3-b8d3-bbda404f80a1',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(17,	'salary_deviation',	0,	0,	'5bde7342-bfc9-45a3-b4d8-4e4e3156b7d7',	'0a3c5546-7e7b-4ec9-b98c-0444bdf1b13b',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(18,	'profit_per_employee',	0,	0,	'a4eb79d9-9406-44d6-9eb1-7df0cd797e0c',	'9d3b3751-2783-471a-9082-33671bb1c618',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(19,	'holiday_by_departments',	0,	0,	'dd8a6840-d022-4f15-b7aa-5b34c50fc853',	'8a04f332-7fd2-4a8b-9876-c4bdcf937dc1',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(20,	'sickness_by_departments',	0,	0,	'0dbeaa22-aab2-40c1-932e-e1288da41c4e',	'450066d7-0c6f-49b8-b3ad-153760c9e7d7',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(21,	'department_expenses',	0,	0,	'07695ea0-89e8-4334-9e02-c501935d7451',	'046c5676-87d3-4262-b9f4-a6319949b6fc',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(22,	'absence_rate',	0,	0,	'aa3ea071-5203-4b19-80b4-d9daaf3fca37',	'f0032877-6c4d-4acf-a1c5-94390ae97827',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(23,	'compa_ratio_calculation',	0,	0,	'9da1f3b3-8ab9-414d-8313-237fa54b5bdd',	'dd2abfb0-d12f-403f-910b-b8b025c2ad87',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(24,	'full_time_equivalents',	0,	0,	'de1c19cf-f7f0-407e-92b1-d5644d0cac74',	'2c2a4149-f0fb-42a8-b8f7-141edafffde8',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(25,	'health_care_costs',	0,	0,	'6159d62c-19ad-4f6c-9a8a-58871454fbd6',	'cc70b9f7-ea49-426f-b220-cf0447de59f5',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(26,	'interview_accept_yield_ratio',	0,	0,	'999b66d5-82f8-45e3-a7eb-c714f91322f1',	'7e13319f-6c68-425e-ace2-3ec8618601a8',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(27,	'interview_offer_yield_ratio',	0,	0,	'89e835d6-5e56-4d53-8187-43ad08064ca9',	'ddf6cac5-c034-4d48-ae2f-ae550f78f4ba',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(28,	'employee_satisfaction',	0,	0,	'f3aead0c-ac9b-4d74-a973-1be5f3620424',	'bf668eef-a8b4-4c91-8875-f219245a8267',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(29,	'gender_equality',	0,	0,	'3583300f-1899-4643-8b6d-6a12e28da956',	'1345a761-2ba1-4745-b18c-dbf87be2f8d0',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(30,	'job_empowerment',	0,	0,	'b550e591-c278-42fe-aff3-8594888605c8',	'1e6f4711-5195-4d97-9d12-523c826b1775',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(31,	'work_life_balance',	0,	0,	'56481e3c-aa73-4f0e-a477-a33212415c4f',	'd66ac665-5d5d-4633-bf18-7bc2a98c2b2e',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(32,	'global_presence',	0,	0,	'ac918054-beb2-4de4-b3e4-87be1691f675',	'0ebf4549-5bc7-419b-8c8c-9ea107e787ab',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(33,	'employee_engagement_score',	0,	0,	'22373c87-98ea-48fa-b8f6-270ea1c46d1d',	'876c8361-7459-43b6-b49e-e4c7ee59418b',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(34,	'workers_compensation_cost_per_employee',	0,	0,	'9fca591c-07da-49d1-bd18-d6c9c4c01cdc',	'a7913bee-1d9f-494e-84fb-d4bfd74d6a4f',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(35,	'workers_compensation_incident_rate',	0,	0,	'3efa59d3-8e0b-4be2-98a7-ccec581c85d4',	'4bb54b64-a56f-46f2-8ae5-ca79bb198a77',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(36,	'workers_compensation_severity_rate',	0,	0,	'f0fee89d-d445-4c9f-ac16-a2e52a52bda1',	'99d6ab5b-154d-47e9-acb0-5a502ade9306',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(37,	'training_cost_per_employee_vs_time',	0,	0,	'45c0107e-a062-43cd-8ad0-64fee2e9b905',	'c2257672-3019-4baf-9c47-7ac7fccb95f2',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(38,	'training_cost_vs_departments',	0,	0,	'b8bd4acc-4f42-44c7-ac24-d2ab44ae29d1',	'455cec57-551b-4f56-9b78-2e8de25c9e30',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(39,	'employees_training_factor',	0,	0,	'4b5ab9e9-939e-4833-b8bb-809ba81d5430',	'cf864f54-8e27-4578-ad20-56aea90040a9',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(40,	'recruiting_expenses',	0,	0,	'766ea7e7-ce54-4f02-8dad-e69654a6d1d2',	'ab4e98e7-f528-45b1-a559-f8935f10db0f',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(41,	'quality_of_new_hires',	0,	0,	'6266b8c2-fddd-4353-a26e-01ffb84c2792',	'71cc7487-8063-4011-aa0d-9faad7043e06',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(42,	'time_to_fill_open_positions',	0,	0,	'1bc6a4ba-c931-466d-8f8f-1547452c740e',	'fb16bc43-0ed8-4f25-9590-cd88e2fa2476',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(43,	'on_boarding_cost',	0,	0,	'6b6e7dbf-94e6-49d1-9474-ab815da07088',	'915e4b0e-66c0-401d-8429-1484aacf89d4',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(44,	'on_boarding_time',	0,	0,	'26722b1e-f590-41dd-88a8-dd3ed75bf1fd',	'2f919468-171c-4621-8de0-0825f243bfd0',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(45,	'employee_vs_monthly_salary_slab',	0,	0,	'e57a302c-11a3-4d6c-88d0-fd9a16b76a31',	'67099a19-56de-4790-b4d7-d450f44b0004',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(46,	'employee_vs_nationality',	0,	0,	'74ab88fb-90ec-4202-b020-9edb8ae0c5bf',	'76a09bcf-43c9-431d-84e2-8227cc138dcf',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(47,	'new_joining_vs_resignation',	0,	0,	'458cf396-a6a8-4862-9525-44e4c127cfba',	'16a8b2ca-18f7-4c10-ba34-29e698878252',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(48,	'human_resource_ratio',	0,	0,	'33d68c6f-be9b-4398-9aa3-573f21eadda7',	'9ba926af-0a9a-4a21-ad5a-c49eb2ee7455',	4,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(49,	'hiring_process',	0,	0,	'd995d16f-791f-48e8-9937-e11fec240598',	'c25a705e-406c-4e7b-aef2-f519911a9314',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(50,	'roi',	0,	0,	'dbeeda96-4111-4d04-9b30-4f221146e85a',	'f9a1bcf3-74a0-4c3b-bd27-0707d61ae9ee',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(51,	'cost_vs_revenue',	0,	0,	'fb549a75-3de3-48ce-ab97-f9fbef0def19',	'77238613-3f6c-4a93-9a0c-59b02b2f1d62',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(52,	'hr_expenses',	0,	0,	'7e34a459-2320-43bf-9146-30f9e483b89a',	'7afaa113-8fad-4b6b-93d3-1cd6e954a253',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(53,	'labor_cost_as_percent_of_revenue',	0,	0,	'050c3e7b-52c7-47e4-beb1-3b1e376c0a1b',	'4ad51192-d357-48e9-ace3-98ad5552c5fe',	2,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(54,	'progress_of_objectives',	0,	0,	'fe5d58d5-60f9-4439-97bc-640bfa4f4743',	'c30217b2-9a56-4559-b504-ac29343f1b71',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(55,	'source_of_hire',	0,	0,	'8736c65c-f63a-463b-a1d3-8769bd869555',	'657b1d6a-880a-4cc6-90a8-68fcab4f8e80',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(56,	'job_offer_yield_ratio',	0,	0,	'a9d34123-db81-4edc-8c2b-6e3226b8eb03',	'd7d190cc-91db-4e95-967f-5b334e05d66e',	6,	'1',	0,	0,	3,	4,	'1',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(57,	'employees_cost_with_revenue_details',	0,	0,	'd0b851a1c75a48ca9543fca0497625aa',	'7a66069d0afe4a5aaa8b5befa2b2f5c2',	8,	'1',	0,	0,	3,	4,	'3',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(58,	'hiring_cycle_time',	0,	0,	'd3ae9c70801a4560a810628f3b3f660a',	'',	9,	'1',	0,	0,	3,	4,	'2',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(59,	'acceptance_rate',	0,	0,	'6a508904e34446978168a63ea50d8adf',	'',	9,	'1',	0,	0,	3,	4,	'2',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00'),
(60,	'average_salary',	0,	0,	'602ceaec98474415b8e8efe9b485b53d',	'',	9,	'1',	0,	0,	3,	4,	'2',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00');;;;;

DROP TABLE IF EXISTS `trendata_tile_tag`;;;;;
CREATE TABLE `trendata_tile_tag` (
  `trendata_tile_tag_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_tile_tag_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_tile_tag_last_modified_by` int(10) unsigned DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_tile_id` int(10) unsigned DEFAULT NULL,
  `trendata_tag_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_tile_tag_id`),
  KEY `trendata_tile_id` (`trendata_tile_id`),
  KEY `trendata_tag_id` (`trendata_tag_id`),
  CONSTRAINT `trendata_tile_tag_ibfk_1` FOREIGN KEY (`trendata_tile_id`) REFERENCES `trendata_tile` (`trendata_tile_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_tile_tag_ibfk_2` FOREIGN KEY (`trendata_tag_id`) REFERENCES `trendata_tag` (`trendata_tag_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_tile_tag`;;;;;
INSERT INTO `trendata_tile_tag` (`trendata_tile_tag_id`, `trendata_tile_tag_created_by`, `trendata_tile_tag_last_modified_by`, `created_at`, `updated_at`, `trendata_tile_id`, `trendata_tag_id`) VALUES
(1,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1,	1),
(2,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1,	2),
(3,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	2,	1),
(4,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	2,	3),
(5,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	3,	1),
(6,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	3,	4),
(7,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	4,	1),
(8,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	5,	5),
(9,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	5,	6),
(10,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	6,	6),
(11,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	7,	6),
(12,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	7,	7),
(13,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	8,	6),
(14,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	9,	9),
(15,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	9,	8),
(16,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	10,	9),
(17,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	10,	10),
(18,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	11,	9),
(19,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	11,	3),
(20,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	12,	9),
(21,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	12,	7),
(22,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	13,	11),
(23,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	14,	3),
(24,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	14,	12),
(25,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	15,	12),
(26,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	16,	13),
(27,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	17,	14),
(28,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	17,	29),
(29,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	18,	9),
(30,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	19,	3),
(31,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	19,	16),
(32,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	20,	3),
(33,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	20,	17),
(34,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	21,	3),
(35,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	21,	18),
(36,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	22,	19),
(37,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	23,	20),
(38,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	24,	21),
(39,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	25,	22),
(40,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	26,	23),
(41,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	27,	23),
(42,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	28,	9),
(43,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	28,	24),
(44,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	29,	25),
(45,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	29,	26),
(46,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	30,	27),
(47,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	25,	28),
(48,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	31,	30),
(49,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	32,	32),
(50,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	32,	31),
(51,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	33,	9),
(52,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	34,	33),
(53,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	33,	34),
(54,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	35,	33),
(55,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	36,	33),
(56,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	36,	35),
(57,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	37,	36),
(58,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	37,	9),
(59,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	38,	36),
(60,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	38,	3),
(61,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	39,	9),
(62,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	39,	36),
(63,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	40,	37),
(64,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	40,	18),
(65,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	41,	38),
(66,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	43,	41),
(67,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	44,	39),
(68,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	45,	9),
(69,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	45,	14),
(70,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	46,	9),
(71,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	46,	40),
(72,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	48,	41),
(73,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	50,	42),
(74,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	52,	41),
(75,	0,	0,	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	52,	18);;;;;

DROP TABLE IF EXISTS `trendata_translation`;;;;;
CREATE TABLE `trendata_translation` (
  `trendata_translation_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_translation_text` text COLLATE utf8_unicode_ci,
  `trendata_translation_token` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_language_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_translation_id`),
  KEY `trendata_language_id` (`trendata_language_id`),
  KEY `trendata_translation_trendata_translation_token` (`trendata_translation_token`),
  CONSTRAINT `trendata_translation_ibfk_1` FOREIGN KEY (`trendata_language_id`) REFERENCES `trendata_language` (`trendata_language_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_translation`;;;;;
INSERT INTO `trendata_translation` (`trendata_translation_id`, `trendata_translation_text`, `trendata_translation_token`, `created_at`, `updated_at`, `trendata_language_id`) VALUES
(1,	'Turnover',	'59271b3ab2df41e3bb885eb5ec9e174b',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(2,	'Cost per Hire',	'599610e09cf84f7da452f8afaefaeab3',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(3,	'Source of Hire',	'c93c95bf14f44c5aa3685dabedd9f460',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(4,	'Time to Fill',	'3d346ad2f051496aac8cd606f115b92d',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(5,	'Revenue per Employee',	'7327f74bbbdf415086f4c862b2eb19ac',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(6,	'Tenure',	'df548600dc7e41a7be8fe0c31b498b83',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(7,	'Performance Goals',	'0b7d216ab7784640b91d66837b741ad0',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(8,	'Benefit Costs per Employee',	'd3b1562d119a4acf876e61c50b6be4eb',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(9,	'Absence Rate',	'94b4b2e146574607a25e0ffe30cf3a8c',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(10,	'Average Compensation',	'961608e4cb7d4b4584a6d5f5188218a9',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(11,	'Employee Satisfaction',	'e93aed9c68824740b582e5e8f1e2f74f',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(12,	'Training and Development',	'324471e6853f4d049bfbf82308cf66da',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(37,	'Headcount vs location',	'db546fdc-b7f4-458f-b19c-6aa8af1ac0de',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(38,	'Headcount vs departments',	'717ad7ed-b8eb-46e2-a6fd-cfb288d71408',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(39,	'Headcount vs designations',	'fc166853-115d-4a95-a0aa-6e9a9603064f',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(40,	'Headcount vs Time',	'c9b1629d-e78e-4362-8100-4e97346e279c',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(41,	'Talent vs potential\r\n',	'1dccc3ab-2bcd-4cae-b88f-cdfd1c0508fc',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(42,	'Performance Rating\r\n',	'e5aacd6c-e3dc-4dc3-9e4c-18d4833d6a41',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(43,	'Turnover',	'16395b33-b1c7-413a-9d60-16b59119c0e7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(44,	'Above Average Performer Yield Ratio\r\n',	'94063e63-fc20-4869-9f48-f5f3c4290cce',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(45,	'Revenue per Employee',	'1189b79e-856b-4e77-bd1c-f63144ba1bc0',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(46,	'Turnover Cost by Location',	'ca4a84d1-33d8-4cee-afbc-a44e02b53c63',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(47,	'Turnover Cost by Department\r\n',	'e7f16e32-4bf2-4e40-8f3e-fc97bd126068',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(48,	'Turnover Cost by Job Level',	'f08b35e2-27f8-451b-966d-79d42f304fe9',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(49,	'High Potential Turover',	'2c511354-a824-4012-a022-fccef152af77',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(50,	'Average tenure vs department\r\n',	'6aa9bda3-e8ef-4975-9040-b79630c2d18b',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(51,	'Average tenure vs years\r\n',	'9d682fb3-dd78-466d-8a11-7508d46805b8',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(52,	'Absence Rate',	'87440058-bb5f-4fb6-ae71-0a7c114875bb',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(53,	'Benefit Costs',	'5bde7342-bfc9-45a3-b4d8-4e4e3156b7d7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(54,	'Profit per employee vs year\r\n',	'a4eb79d9-9406-44d6-9eb1-7df0cd797e0c',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(55,	'Holiday by departments',	'dd8a6840-d022-4f15-b7aa-5b34c50fc853',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(56,	'Sickness by departments\r\n',	'0dbeaa22-aab2-40c1-932e-e1288da41c4e',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(57,	'Department Expenses\r\n',	'07695ea0-89e8-4334-9e02-c501935d7451',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(58,	'Absence Rate\r\n',	'aa3ea071-5203-4b19-80b4-d9daaf3fca37',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(59,	'Compa Ratio Calculation\r\n',	'9da1f3b3-8ab9-414d-8313-237fa54b5bdd',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(60,	'Full-Time Equivalents (FTE) Calculations\r\n',	'de1c19cf-f7f0-407e-92b1-d5644d0cac74',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(61,	'Health Care Costs\r\n',	'6159d62c-19ad-4f6c-9a8a-58871454fbd6',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(62,	'Interview Accept Yield Ratio\r\n',	'999b66d5-82f8-45e3-a7eb-c714f91322f1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(63,	'Interview Offer Yield Ratio\r\n',	'89e835d6-5e56-4d53-8187-43ad08064ca9',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(64,	'Employee satisfaction\r\n',	'f3aead0c-ac9b-4d74-a973-1be5f3620424',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(65,	'Performance Scores',	'3583300f-1899-4643-8b6d-6a12e28da956',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(66,	'Tenure',	'b550e591-c278-42fe-aff3-8594888605c8',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(67,	'Work/Life Balance',	'56481e3c-aa73-4f0e-a477-a33212415c4f',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(68,	'Global presence\r\n',	'ac918054-beb2-4de4-b3e4-87be1691f675',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(69,	'Employee engagement score\r\n',	'22373c87-98ea-48fa-b8f6-270ea1c46d1d',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(70,	'Workers\' Compensation Cost per Employee (Cumulative)\r\n',	'9fca591c-07da-49d1-bd18-d6c9c4c01cdc',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(71,	'Workers\' Compensation Incident Rate\r\n',	'3efa59d3-8e0b-4be2-98a7-ccec581c85d4',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(72,	'Workers\' Compensation Severity Rate\r\n',	'f0fee89d-d445-4c9f-ac16-a2e52a52bda1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(73,	'Training cost per employee vs time\r\n',	'45c0107e-a062-43cd-8ad0-64fee2e9b905',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(74,	'Training cost vs departments\r\n',	'b8bd4acc-4f42-44c7-ac24-d2ab44ae29d1',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(75,	'Employees Training Factor\r\n',	'4b5ab9e9-939e-4833-b8bb-809ba81d5430',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(76,	'Recruiting expenses\r\n',	'766ea7e7-ce54-4f02-8dad-e69654a6d1d2',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(77,	'Quality of new hires\r\n',	'6266b8c2-fddd-4353-a26e-01ffb84c2792',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(78,	'Time to fill open positions\r\n',	'Time to fill open positions',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(79,	'On-boarding cost',	'6b6e7dbf-94e6-49d1-9474-ab815da07088',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(80,	'On-boarding time',	'26722b1e-f590-41dd-88a8-dd3ed75bf1fd',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(81,	'No. of employee vs monthly salary slab\r\n',	'e57a302c-11a3-4d6c-88d0-fd9a16b76a31',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(82,	'No of employee vs nationality\r\n',	'74ab88fb-90ec-4202-b020-9edb8ae0c5bf',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(83,	'New Joining vs Resignation\r\n',	'458cf396-a6a8-4862-9525-44e4c127cfba',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(84,	'Human Resource Ratio\r\n',	'33d68c6f-be9b-4398-9aa3-573f21eadda7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(85,	'Hiring Process',	'd995d16f-791f-48e8-9937-e11fec240598',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(86,	'ROI',	'dbeeda96-4111-4d04-9b30-4f221146e85a',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(87,	'Cost vs revenue\r\n',	'fb549a75-3de3-48ce-ab97-f9fbef0def19',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(88,	'Human Resource Expenses \r\n',	'7e34a459-2320-43bf-9146-30f9e483b89a',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(89,	'Labor Cost as Percent of Revenue\r\n',	'050c3e7b-52c7-47e4-beb1-3b1e376c0a1b',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(90,	'Progress of objectives',	'fe5d58d5-60f9-4439-97bc-640bfa4f4743',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(91,	'Source of hire',	'8736c65c-f63a-463b-a1d3-8769bd869555',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(92,	'Job Offer Yield Ratio',	'a9d34123-db81-4edc-8c2b-6e3226b8eb03',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(205,	'Dashboard',	'c0eadd82-4bff-4e2f-bbf2-c6ad630f6406',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(208,	'Employees cost with revenue details',	'd0b851a1c75a48ca9543fca0497625aa',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(211,	'Isquidunt late eum, sum quassunt faceribus, as de nimpor am as as apienim ilique voluptibus mo cus modiorp orendio denda exceatqui num es quistia dem untin cuptur, volore rernatio quias aut volorero te vel exceaquis et accum labor audae nonseque ent odi aut ent.',	'7a66069d0afe4a5aaa8b5befa2b2f5c2',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(214,	'Cost per Hire',	'6a508904e34446978168a63ea50d8adf',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(218,	'Time to Fill',	'd3ae9c70801a4560a810628f3b3f660a',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(221,	'Average Salary',	'602ceaec98474415b8e8efe9b485b53d',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(224,	'Social',	'ab2371a8-b6f5-11e6-80f5-76304dec7eb7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(225,	'Marketing',	'ab2374b4-b6f5-11e6-80f5-76304dec7eb7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(226,	'Recruitment',	'ab2375d6-b6f5-11e6-80f5-76304dec7eb7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(227,	'Social Event 1',	'28e254cc-b6f8-11e6-80f5-76304dec7eb7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(228,	'Event description goes here just below the heading and next to date.',	'28e2571a-b6f8-11e6-80f5-76304dec7eb7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(229,	'Social Event 2',	'28e25828-b6f8-11e6-80f5-76304dec7eb7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(230,	'Event 2 description goes here just below the heading and next to date.',	'28e25904-b6f8-11e6-80f5-76304dec7eb7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(231,	'Marketing',	'2eaee260-b7bd-11e6-80f5-76304dec7eb7',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(232,	'Test Event 1',	'aedeb5c0-baef-11e6-9843-5dfce1e66ee0',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(233,	'Testing Event Description',	'aedeb5c1-baef-11e6-9843-5dfce1e66ee0',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(234,	'Test Event 2',	'2248de50-bafa-11e6-8814-ddf39ce2e418',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(235,	'Testing Event 2 Description',	'22490560-bafa-11e6-8814-ddf39ce2e418',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(236,	'Test Event 2',	'a7db0d40-bafa-11e6-91be-83db83e767e4',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(237,	'Testing Event 2 Description',	'a7db0d41-bafa-11e6-91be-83db83e767e4',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(238,	'Test Event 3',	'cd7c8920-bafa-11e6-91be-83db83e767e4',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(239,	'Testing Event 3 Description',	'cd7c8921-bafa-11e6-91be-83db83e767e4',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(240,	'Trendata - User Deleted',	'0861a054-bc57-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(241,	'You are deleted from Trendata. Please contact if you have any issues.',	'0861a2f2-bc57-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(242,	'Trendata - User Suspended',	'0861a3ec-bc57-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(243,	'You are suspended from Trendata. Please contact if you have any issues.',	'0861a4d2-bc57-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(244,	'Trendata - Administrator updated your profile',	'ad40d75e-bc7d-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(245,	'You profile is updated by Administrator. You can also update your profile after login.',	'ad40db8c-bc7d-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(246,	'Trendata - Welcome',	'930a5278-bc89-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(247,	'You are added to Trendata. Please use the following credential for login.',	'930a6240-bc89-11e6-a4a6-cec0c932ce01',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(252,	'Organization',	'15331f40-bd3f-11e6-a994-33f704ba913f',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(253,	'Testing Event cat Description',	'15331f41-bd3f-11e6-a994-33f704ba913f',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(298,	'Social Event 3',	'2290c470-c358-11e6-8841-29b28f75a071',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(299,	'Social Event 3 Desc',	'2290c471-c358-11e6-8841-29b28f75a071',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(300,	'Social Event 4',	'2ea14c80-c358-11e6-8841-29b28f75a071',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(301,	'Social Event 4 Desc',	'2ea14c81-c358-11e6-8841-29b28f75a071',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(302,	'About',	'about',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(303,	'Support',	'support',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(304,	'Terms of Service',	'terms_of_service',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(305,	'Legal',	'legal',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(306,	'Help',	'help',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(307,	'Contact Us',	'contact_us',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(308,	'My Profile',	'my_profile',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(309,	'Event Manager',	'event_manager',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(310,	'Logout',	'logout',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(311,	'Didn\'t recieved password?',	'didnt_recieved_password?',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(312,	'Sign In Here',	'sign_in_here',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(313,	'Resend',	'resend',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(314,	'Email',	'email',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(315,	'Enter your email below to recieve temp password',	'enter_your_email_below_to_recieve_te',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(316,	'Send',	'send',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(317,	'Username/Email',	'username_or_email',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(318,	'Password',	'password',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(319,	'Sign In',	'sign_in',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(320,	'Forgot your password?',	'forgot_your_password?',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(321,	'Step 1: Select Metrics',	'step1_select_metrics',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(322,	'Step 2: Chart Type',	'step2_chart_type',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(323,	'Step 3: Review',	'step3_review',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(324,	'Male',	'male',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(325,	'Female',	'female',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(326,	'Years',	'years',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(327,	'Months',	'months',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(328,	'Choose dimension',	'choose_dimension',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(329,	'Select person',	'select_person',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(330,	'From',	'from',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(331,	'To',	'to',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(332,	'Close',	'close',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(333,	'Cancel',	'cancel',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(334,	'Continue',	'continue',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(335,	'Create New Chart',	'create_new_chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(336,	'Bar Chart',	'bar_chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(337,	'Line Chart',	'line_chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(338,	'Stack Chart',	'stack_chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(339,	'Pie Chart',	'pie_chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(340,	'Add Chart',	'add_chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(341,	'Keep me signed in',	'keep_me_signed_in',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(342,	'Configure KPI',	'configure_kpi',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(343,	'Drilldown',	'drilldown',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(344,	'Trending View',	'trending_view',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(345,	'Analytical View',	'analytical_view',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(346,	'Manager Performance Drilldown View',	'manager_performance_drilldown_view',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(347,	'Manager Performances in 2016',	'manager_performances_in_2016',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(348,	'Recommended Charts',	'recommended_charts',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(349,	'Administrator Settings',	'administrator_settings',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(350,	'Manage Users',	'manage_users',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(351,	'Manage Roles',	'manage_roles',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(352,	'Financial Inputs',	'financial_inputs',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(353,	'Data Sources',	'data_sources',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(354,	'Revenue Analysis for Aug\'16',	'revenue_analysis_for_aug_16',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(355,	'Save',	'save',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(356,	'Share',	'share',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(357,	'Description',	'description',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(358,	'Event Title',	'event_title',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(359,	'Add',	'add',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(360,	'Add Event',	'add_event',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(361,	'Add Event Category',	'add_event_category',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(362,	'Financial Data Input',	'financial_data_input',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(363,	'Choose Status',	'choose_status',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(364,	'Name',	'name',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(365,	'Add Profile Picture',	'add_profile_picture',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(366,	'Users List',	'users_list',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(367,	'Employees cost with revenue details',	'employees_cost_with_revenue_details',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(368,	'Add New User',	'add_new_user',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(370,	'Choose Designation',	'choose_designation',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(371,	'Choose Role',	'choose_role',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(372,	'Reset My Password',	'reset_my_password',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(373,	'Starting Date',	'starting_date',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(374,	'Private',	'private',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(375,	'Public',	'public',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(376,	'Showing Results For',	'showing_results_for',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(378,	'Chart Options',	'chart_options',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(379,	'Download Chart',	'download_chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(380,	'Add To Dashboard',	'add_to_dashboard',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(381,	'Analytics',	'analytics',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(382,	'Predictive',	'predictive',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(383,	'Notify on Failure',	'notify_on_failure',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(384,	'Test Connection',	'test_connection',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(385,	'Configure',	'configure',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(386,	'Chart Description',	'chart_description',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(387,	'Chart Title',	'chart_title',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(388,	'Settings',	'settings',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(392,	'Filters',	'filters',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(393,	'Time Span',	'time_span',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(394,	'Comparison',	'comparison',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(395,	'Events Overlay',	'events_overlay',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(396,	'Regression Analysis',	'regression_analysis',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(397,	'Filter by Label',	'filter_by_label',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(398,	'Group by',	'group_by',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(399,	'Enter your NLP query',	'enter_your_nlp_query',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(400,	'Search',	'search',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(401,	'Category',	'category',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(402,	'Add on',	'add_on',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(403,	'Last Update',	'last_update',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(404,	'Edit Profile',	'edit_profile',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(405,	'First Name',	'first_name',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(406,	'Please Enter',	'please_enter',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(407,	'Last Name',	'last_name',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(408,	'Phone Number',	'phone_number',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(409,	'Additional Number',	'additional_number',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(410,	'Date of Birth',	'date_of_birth',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(411,	'Department',	'department',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(412,	'Country',	'country',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(413,	'Title',	'title',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(414,	'Toggle Menu',	'toggle_menu',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(415,	'Create Custom Chart',	'create_custom_chart',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(416,	'Languages',	'languages',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(417,	'Search for Token',	'search_for_token',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(418,	'Token Name',	'token_name',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(419,	'Token Translation',	'token_translation',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(420,	'English',	'english',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(421,	'Select Language',	'select_language',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(422,	'TUFF',	'tuff',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(423,	'Trendata Universal File Format',	'trendata_universal_file_format',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(424,	'File',	'file',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(425,	'Actions',	'actions',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(426,	'Type',	'type',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(427,	'Edit User',	'edit_user',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(428,	'Upload File',	'upload_file',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(429,	'Download Sample File',	'download_sample_file',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(430,	'View Last Updated File',	'view_last_updated_file',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(431,	'Individual',	'individual',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(432,	'Summary',	'summary',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(433,	'Start modeling',	'start_modeling',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(434,	'123',	'4cdf43c0-ff47-11e6-95d3-71be4ab223da',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(435,	'123',	'4cdf6ad0-ff47-11e6-95d3-71be4ab223da',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(436,	'Number of Employees',	'number_of_employee',	'2017-03-10 10:35:45',	'2017-03-10 10:35:45',	1),
(437,	'Chart View',	'chart_view',	'2017-03-13 00:00:00',	'2017-03-13 00:00:00',	1),
(438,	'Search the system in natural language',	'search_the_system_in_natural_languag',	'2017-03-22 13:40:44',	'2017-03-22 13:40:44',	1),
(439,	'Search the system in natural language',	'search_the_system_in_natural_language',	'2017-03-23 16:43:38',	'2017-03-23 16:43:38',	1),
(440,	'Test event title',	'f1d3e1f0-0fe2-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:08:25',	'2017-03-23 16:08:25',	1),
(441,	'Test event description',	'f1d40900-0fe2-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:08:25',	'2017-03-23 16:08:25',	1),
(442,	'Test event title',	'050388c0-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:08:57',	'2017-03-23 16:08:57',	1),
(443,	'Test event description',	'050388c1-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:08:57',	'2017-03-23 16:08:57',	1),
(444,	'qwe',	'487ec5b0-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:10:50',	'2017-03-23 16:10:50',	1),
(445,	'rty',	'487ec5b1-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:10:50',	'2017-03-23 16:10:50',	1),
(446,	'qwe',	'4f2c8500-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:11:01',	'2017-03-23 16:11:01',	1),
(447,	'rty',	'4f2c8501-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:11:01',	'2017-03-23 16:11:01',	1),
(448,	'qwe',	'9dbd4830-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:13:13',	'2017-03-23 16:13:13',	1),
(449,	'rty',	'9dbd4831-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:13:13',	'2017-03-23 16:13:13',	1),
(450,	'qwe',	'bae6f320-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:14:02',	'2017-03-23 16:14:02',	1),
(451,	'rty',	'bae6f321-0fe3-11e7-bfe8-7b7d1ba1c327',	'2017-03-23 16:14:02',	'2017-03-23 16:14:02',	1),
(452,	'LinkedIn',	'linkedin',	'2017-03-28 16:18:26',	'2017-03-28 16:18:26',	1),
(453,	'Job Fair',	'job_fair',	'2017-03-28 16:20:35',	'2017-03-28 16:20:35',	1),
(454,	'Word of Mouth',	'word_of_mouth',	'2017-03-28 16:21:11',	'2017-03-28 16:21:11',	1),
(455,	'Facebook',	'facebook',	'2017-03-28 16:21:45',	'2017-03-28 16:21:45',	1),
(456,	'Employee Referral',	'employee_referral',	'2017-03-28 16:22:27',	'2017-03-28 16:22:27',	1),
(457,	'Male',	'male',	'2017-03-28 16:22:48',	'2017-03-28 16:22:48',	1),
(458,	'Female',	'female',	'2017-03-28 16:23:01',	'2017-03-28 16:23:01',	1),
(459,	'Full-Time',	'full_time',	'2017-03-28 16:23:26',	'2017-03-28 16:23:26',	1),
(460,	'Part-Time',	'part_time',	'2017-03-28 16:23:47',	'2017-03-28 16:23:47',	1),
(461,	'Contractor',	'contractor',	'2017-03-28 16:24:10',	'2017-03-28 16:24:10',	1),
(462,	'qwe',	'ed32d490-155e-11e7-a3cd-791ce988be73',	'2017-03-30 15:38:31',	'2017-03-30 15:38:31',	1),
(463,	'qwe',	'ed32fba0-155e-11e7-a3cd-791ce988be73',	'2017-03-30 15:38:31',	'2017-03-30 15:38:31',	1),
(464,	'ffffff',	'de83de70-155f-11e7-a3cd-791ce988be73',	'2017-03-30 15:45:16',	'2017-03-30 15:45:16',	1),
(465,	'',	'de83de71-155f-11e7-a3cd-791ce988be73',	'2017-03-30 15:45:16',	'2017-03-30 15:45:16',	1),
(466,	'Acquisition',	'fe78a890-1565-11e7-aee0-3deddf5aaf09',	'2017-03-30 16:29:06',	'2017-03-30 16:29:06',	1),
(467,	'Acquisition event.',	'fe78cfa0-1565-11e7-aee0-3deddf5aaf09',	'2017-03-30 16:29:06',	'2017-03-30 16:29:06',	1),
(468,	'Layoffs',	'0ddd1690-1566-11e7-aee0-3deddf5aaf09',	'2017-03-30 16:29:32',	'2017-03-30 16:29:32',	1),
(469,	'Layoffs event.',	'0ddd1691-1566-11e7-aee0-3deddf5aaf09',	'2017-03-30 16:29:32',	'2017-03-30 16:29:32',	1),
(470,	'New Benefits Program',	'213246c0-1566-11e7-aee0-3deddf5aaf09',	'2017-03-30 16:30:04',	'2017-03-30 16:30:04',	1),
(471,	'New Benefits Program event.',	'213246c1-1566-11e7-aee0-3deddf5aaf09',	'2017-03-30 16:30:04',	'2017-03-30 16:30:04',	1),
(472,	'Surveys',	'surveys',	'2017-04-05 17:18:52',	'2017-04-05 17:18:52',	1),
(473,	'Recipients',	'recipients',	'2017-04-05 17:25:43',	'2017-04-05 17:25:43',	1),
(474,	'Send Survey',	'send_survey',	'2017-04-05 17:26:10',	'2017-04-05 17:26:10',	1),
(475,	'Add Question',	'add_question',	'2017-04-05 17:26:30',	'2017-04-05 17:26:30',	1),
(476,	'Remove Question',	'remove_question',	'2017-04-05 17:28:20',	'2017-04-05 17:28:20',	1),
(477,	'Question',	'question',	'2017-04-05 17:28:52',	'2017-04-05 17:28:52',	1),
(478,	'No existing events',	'no_existing_events',	'2017-04-05 17:29:14',	'2017-04-05 17:29:14',	1),
(479,	'Job Fair',	'b092f740-1ecd-11e7-895a-957ca309c045',	'2017-04-11 15:44:03',	'2017-04-11 15:44:03',	1),
(480,	'',	'b0931e50-1ecd-11e7-895a-957ca309c045',	'2017-04-11 15:44:03',	'2017-04-11 15:44:03',	1),
(481,	'Test event',	'4ea130e0-1f79-11e7-86e8-97e08866bbf7',	'2017-04-12 12:12:32',	'2017-04-12 12:12:32',	1),
(482,	'',	'4ea130e1-1f79-11e7-86e8-97e08866bbf7',	'2017-04-12 12:12:32',	'2017-04-12 12:12:32',	1),
(483,	'Ending Date',	'ending_date',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(484,	'Test July',	'1f71a730-1f7b-11e7-9e20-01b5637c8d38',	'2017-04-12 12:25:32',	'2017-04-12 12:25:32',	1),
(485,	'',	'1f71a731-1f7b-11e7-9e20-01b5637c8d38',	'2017-04-12 12:25:32',	'2017-04-12 12:25:32',	1),
(486,	'August - September event',	'cf8110a0-1fa0-11e7-853f-fdb96de25ebc',	'2017-04-12 16:55:19',	'2017-04-12 16:55:19',	1),
(487,	'',	'cf8137b0-1fa0-11e7-853f-fdb96de25ebc',	'2017-04-12 16:55:19',	'2017-04-12 16:55:19',	1),
(488,	'Event August 1st - September 30th',	'75c20ca0-2030-11e7-b001-63058b911ede',	'2017-04-13 10:03:36',	'2017-04-13 10:03:36',	1),
(489,	'',	'75c20ca1-2030-11e7-b001-63058b911ede',	'2017-04-13 10:03:36',	'2017-04-13 10:03:36',	1),
(490,	'Event August 1st - September 30th 222',	'df0f9540-2037-11e7-851d-01a57adf6917',	'2017-04-13 10:56:39',	'2017-04-13 10:56:39',	1),
(491,	'',	'df0fbc50-2037-11e7-851d-01a57adf6917',	'2017-04-13 10:56:39',	'2017-04-13 10:56:39',	1),
(492,	'Revenue per Employee',	'revenue_per_employee',	'2017-04-18 12:25:11',	'2017-04-18 12:25:11',	1),
(493,	'Absences Average',	'absences_average',	'2017-04-19 17:05:51',	'2017-04-19 17:05:51',	1),
(494,	'Professional Development',	'professional_development',	'2017-04-21 18:27:52',	'2017-04-21 18:27:52',	1),
(495,	'Successors Identified',	'successors_identified',	'2017-04-25 15:59:58',	'2017-04-25 15:59:58',	1),
(496,	'tuff_data_dictionary',	'TUFF Data Dictionary',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(497,	'user_login_data_dictionary_field_name',	'User Login',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(498,	'user_login_data_dictionary_field_description',	'Some Description for User Login Field',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(499,	'first_name_data_dictionary_field_description',	'Some Description for First Name Field',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(500,	'first_name_data_dictionary_field_name',	'First Name',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(501,	'middle_name_data_dictionary_field_name',	'Middle Name',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(502,	'middle_name_data_dictionary_field_description',	'Some Description for Middle Name Field',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(503,	'last_name_data_dictionary_field_name',	'Last Name',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(504,	'last_name_data_dictionary_field_description',	'Some Description for Last Name Field',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(505,	'employee_id_data_dictionary_field_name',	'Employee ID',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(506,	'employee_id_data_dictionary_field_description',	'Some Description for Employee ID Field',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1),
(507,	'last_uploaded_file',	'Last Uploaded File',	'0000-00-00 00:00:00',	'0000-00-00 00:00:00',	1);;;;;

DROP TABLE IF EXISTS `trendata_user`;;;;;
CREATE TABLE `trendata_user` (
  `trendata_user_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_user_firstname` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_middlename` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_lastname` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_email` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_dob` date NOT NULL,
  `trendata_user_status` enum('0','1','2') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `trendata_user_designation` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_profile_image` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_user_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_user_salt` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_password` text COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_reset_password_token` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_reset_password_expiry` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_user_language_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_user_id`),
  KEY `trendata_user_language_id` (`trendata_user_language_id`),
  CONSTRAINT `trendata_user_ibfk_1` FOREIGN KEY (`trendata_user_language_id`) REFERENCES `trendata_language` (`trendata_language_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_user`;;;;;
INSERT INTO `trendata_user` (`trendata_user_id`, `trendata_user_firstname`, `trendata_user_middlename`, `trendata_user_lastname`, `trendata_user_email`, `trendata_user_dob`, `trendata_user_status`, `trendata_user_designation`, `trendata_user_profile_image`, `trendata_user_created_by`, `trendata_user_last_modified_by`, `trendata_user_salt`, `trendata_user_password`, `trendata_user_reset_password_token`, `trendata_user_reset_password_expiry`, `created_at`, `updated_at`, `trendata_user_language_id`) VALUES
(1,	'john',	'',	'kauf',	'admin@trendata.com',	'2016-04-19',	'2',	'',	'',	0,	0,	'4e8ac6516021035f55e3ac5967236e5d',	'ed3b38a71819c259fc2f96aa2b1cd8ec7045a63739f363435f8407578e7ba52fe9f355dcf8ab1a9714ebaa2aeab0159f20ca57567a698d9650e652579794928c',	'',	'',	'2017-01-01 00:00:00',	'2017-02-21 10:00:44',	1),
(2,	'ss',	'',	'rr',	'trendata1@mailinator.com',	'2017-01-01',	'0',	'se',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(3,	'shashi',	'',	'ranjan',	'ss@mailinator.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(4,	'shashi',	'',	'ranjan',	'ss1@mailinator.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(5,	'shashi',	'',	'ranjan',	'ss2@mailinator.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(6,	'shashi',	'',	'ranjan',	'ss2@yopmail.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(7,	'shashi',	'',	'ranjan',	'ss3@yopmail.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(8,	'shashi',	'',	'ranjan',	'ss4@yopmail.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(9,	'shashi',	'',	'ranjan',	'ss5@yopmail.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(10,	'shashi',	'',	'ranjan',	'ss6@yopmail.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(11,	'shashi',	'',	'ranjan',	'ss7@yopmail.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(12,	'shashi',	'',	'ranjan',	'ss8@yopmail.com',	'2017-01-01',	'0',	'des',	'',	1,	0,	'',	'',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(13,	'shashi',	'',	'ranjan',	'ss9@yopmail.com',	'2017-01-01',	'2',	'738f7066c56bf6847bea95274f1ec032',	'',	1,	0,	'151045ef31dd8da32db04870a466ddfa8d38496ac958d3b415c5cde498c585ad6d716748971d51951c4c6c23dae2288831cb',	'des',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(14,	'shashi',	'',	'ranjan',	'ss10@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'09bae5e713b452c3a2c2f940a140a274',	'ded33c29727e4116bc9a124731d93f3ec16dc6fe4cdbf19b786cce0f9a7a2eda4dd528c09dbc527281d91ac5e10c839c1e995808c22304457d96a4983c17e6ff',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(15,	'shashi',	'',	'Ranjan',	'ss@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'ec93704cb8b45859f1e712ac620e63ad',	'7a12a98d3944bdaa23370e0da69bdd3f75eee9adda3434262fe362cfd8398a61adaacaa3319536b9d896cbdb588120f888a6f76d0db8088c6f2b715fb2d307ec',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(16,	'shashi',	'',	'Ranjan',	'ss1@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'8d292c70302b1f8e9849ae2d96d858b0',	'2aba09fd17d6a3396e95a9bc98a49e34be5f1e0c3f711b9cf6c75fb3b9414c4ecb1a0e7ad88a125919f2671c6d0f85400dea3f1d2c101b7c8bc77487e7473605',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(17,	'Subhan',	'',	'Ali',	'sa@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'8bfe35e2657b4842fbd905eb98236140',	'765a823584ebc2ef951ff15e7165fbcc633e21654e03d0ffaeb8bdae60ee4516214f68fa72849d843c2603cd9fa85f75be7808028196062931962e2331542a09',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(18,	'shashi',	'',	'Ranjan',	'ssr@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'37642d7f9b850206508c44308aa6e364',	'8567c03c98226cb800a146a99ca29d12069dd3296c44b7081129aab7fa7cc287aad7720ac7ee2dbf2f5487e1bdb16bc6d9892cadc97aa40776f12d65a4e64d2c',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(19,	'shashi',	'',	'Ranjan1',	'ss44@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'cb561eb8e8a387db4a7fe83956ab2d3c',	'c5fe0bae2eb7b2ef66375c730651c0e1121d6f768d73a91fdad9e85308384164cadd01b693995a2c98d576d2c9221c7a1ed498230b7f28ca324ec88b501dc2a9',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(20,	'shashi',	'',	'Ranjan',	'ss12@ss.com',	'2017-01-01',	'2',	'Android Developer',	'',	1,	0,	'66bffce6847cfef180346acfd3a06881',	'c82bc66a9a2bbb169d3714effcb57968615c9866f534d807304c541710b3d12f6c1e693a695acb4f342c2d33eabfc2f59f3f2fa0081034f504b3ab9973829bf2',	'',	'',	'2017-01-01 00:00:00',	'2017-01-01 00:00:00',	1),
(21,	'shashi',	'',	'Ranjan',	'ssss@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'7d53a123bedd3db7a6a98a19de69abc1',	'e79f117e7d40e860ff331f21425f225c9fab31970a49bcd5dd46e7192316802f520dc5408edc0504aa6f7d1774e2e795c85778a932ae1905af9e782f676f40ae',	'',	'',	'2016-11-22 15:36:25',	'2016-11-22 15:36:25',	1),
(22,	'tt',	'',	'rr',	'ttr@yopmail.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'ed063a3ab082e00d7ef46b64f07cfdd6',	'2d6ab924fc3960dc2138a84bde49bd91cbe8a6c4cddb68398111e3841f01f52952828b33c0a7493eb4eb74ebd7dfff2b0a1c41eb74a717b6dd23a9f72c778d5f',	'',	'',	'2016-11-22 15:43:32',	'2016-11-22 15:43:32',	1),
(23,	'nishant',	'',	'sapra',	'nishant@yopmail.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'a0d1739fc0f170a4f6bfe9132f71dd0b',	'704881cf4e5a95673cadebe63db9b0ea5316a4f62e8cce4c7fb94d193b161a9b0a452a637ba82d2100e1423b61453f87f119cacd04aa33439045936d4c2dc84e',	'',	'',	'2016-11-22 15:48:25',	'2016-11-22 15:48:25',	1),
(24,	'shashi',	'',	'Ranjan',	'ss123@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'1e773f0782425ce0b1b193bb1e65ad63',	'7b2ec78adcb31fe7f7812c1b13e0a40f2aa1f5326243cd1373da94662d78a4b15673a5dacf6ceb5255707e53406450bfb47051d7e3d41d7ddfd903cbcaaa2bf1',	'',	'',	'2016-11-22 17:17:52',	'2016-11-22 17:17:52',	1),
(25,	'shashi Ranjan',	'',	'Singh',	'ss1234@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'9c47b762fda935fcbb861ed3f1c904f9',	'aed445ca724c5d17d4397ea8c766a860078c72d6bcc04e251c7af3cd749867f2a45706efe66d1f09d66a0b700ebeec3dbd97120040c52d1d0d71621d11f791a7',	'',	'',	'2016-11-22 17:21:39',	'2016-11-22 17:21:39',	1),
(26,	'shashi',	'',	'Ranjan',	'ss12345@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'67c1306b8dfb1742518712b775192b30',	'2e163e7b4951d0a8c3b84f6345b41375cf4ba5f85228c5a8cd6ff18ad478c77ef016964a7615144bdc4079ef1c75540171c8e36c0bce393f1f0d0f83764afc56',	'',	'',	'2016-11-22 17:26:42',	'2016-11-22 17:26:42',	1),
(27,	'shashi',	'',	'Ranjan',	'ss123456@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'88bac7a029b5877626d121f9e4ac10e8',	'c0055934378cd105ab688ab28138d7ff333b8d96ec4520ea331a0ab08c9bba30cf3eff311c5421470ebda4f7807b4d9b46041408498c2e380a18c038d6614076',	'',	'',	'2016-11-22 17:28:24',	'2016-11-22 17:28:24',	1),
(28,	'shashi',	'',	'Ranjan',	'ss1234567@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'f83d62f9fc89ddac31e3bc663545bf8b',	'd22cf7ccb3d771dca57963588fb86b2a87b08662eecc059e92b3592762a47a471c230fe798bc761abca45e7c4e0d1c3ead65aac69bbec4f086ed99fd8fe07737',	'',	'',	'2016-11-22 17:29:16',	'2016-11-22 17:29:16',	1),
(29,	'shashi',	'',	'Ranjan',	'ss12345679@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'a5f3705b0eea6b1211f5d4ffcb409e69',	'878e8661ee002289d707162bd45b3c0c4cfafe8ae1b12a9c860b210c096c0b6936cfc2e364d9bed2d00e332ed7cf326a267480d1c318fc7f546ebd8bccd42a37',	'',	'',	'2016-11-22 17:37:29',	'2016-11-22 17:37:29',	1),
(30,	'shashi',	'',	'Ranjan',	'ss12345670@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'd4235f215cc35ac916e468ddcb62008c',	'cba6129bc916e39fb4906f8148cb53c1c332f729afcafe566a8d68104a445cc8cf7e71dc3bb023421d24d7586517b6012022d84834df3f4c2169c70b98193448',	'',	'',	'2016-11-22 17:40:01',	'2016-11-22 17:40:01',	1),
(31,	'shashi',	'',	'Ranjan',	'ss12345671@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'91c93a586a44d63e4a6ba9a10f511d1e',	'6c6e74a4fb4f546f9aa10900a41a17d584399704e73f3a46a6df75616b123cb3607dc1cea4dca55223a55582073b13abaa30bfe941c60e4accf47d715b0fd245',	'',	'',	'2016-11-22 17:41:46',	'2016-11-22 17:41:46',	1),
(32,	'shashi',	'',	'Ranjan',	'ss12345672@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'5e23e5f098dad5d7b77297c4dc7b7d50',	'8761e6ef066dea5ffb8aabad6e0363206e169fb6a73878d8729ba57d98702d71caae62efb3a5e042226a3b0118e205025b683318337fadaa82dd6c5359f80c75',	'',	'',	'2016-11-22 17:43:22',	'2016-11-22 17:43:22',	1),
(33,	'Anil',	'',	'Prakash',	'anil@yopmail.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'fec24ba5028d3381fa533c82b198397c',	'cd43da1c42c36e59160768f49181b376c978bad739889f1487ac14383bf28443588821b5bd5fd7f3cb40ddf45f6ab884bd43d0241d5ab07fb359c6ae84b167f8',	'',	'',	'2016-11-22 17:47:41',	'2016-11-22 17:47:41',	1),
(34,	'shashi',	'',	'Ranjan',	'ss112@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'fabccbe0de65ea05ea52dade8552fdf6',	'f2e4b4924016f870b8e6d3969378f9baff9abf5e165701c5ec2563ec81d0db82422dac65ef5282a8ed9c8a8fc303d17e2c2cf78dfe8b50133f36e61b94d83144',	'',	'',	'2016-11-22 17:51:42',	'2016-11-22 17:51:42',	1),
(35,	'shashi',	'',	'Ranjan',	'ss321@ss.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'7b6e6b107b6f437b4db07512e256d7bd',	'3a9e13f6f90a6cf319f319fb91416f62629e08f9c983120a48a3e50807943bdd7e2adb56b6e57ed9eb5ad7ea5fb4a710784e2a34668d329fa0c3c3672f9099b2',	'',	'',	'2016-11-22 17:54:28',	'2016-11-22 17:54:28',	1),
(36,	'Subhan',	'',	'Ahmd',	'sub@yopmail.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'ce061b2e38f203c8279542e0a7a9dbf1',	'6f0b979aaed6354772c807afab8f61ba9849a2a208f3b06d954e2b4af12c077f8123669b9e5f11af591c1f413fd885c7158dbae67ad95afa463204ac727c51df',	'',	'',	'2016-11-22 18:01:03',	'2016-11-22 18:01:03',	1),
(37,	'shashi',	'',	'Ranjan',	'ssk@yopmail.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'8358cf05b1bdd6415b8f2c0f0bd1b7a2',	'523ed7764a09fc11e679f8fd9c0edcd568b85e3091ad701b98f4b7d71deed71368ab708658bffecbc1a604e8ae4399e6f580a0e27cf8b17934ae64d2b305d7e6',	'',	'',	'2016-11-24 17:12:45',	'2016-11-24 17:12:45',	1),
(38,	'shashi',	'',	'ranjan',	'ss1@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'2fce51b0ea6361b018cc68a01061ec5b',	'3e5f0173c9640a3b0484f57b31b1d4ee31d37e4ee827536f5b0ce7b92b6c357097a86fa965860562835ec27961875343e86b0d2f89be49672edca2582767deb3',	'',	'',	'2016-11-24 17:15:40',	'2016-11-24 17:15:40',	1),
(39,	'shashi',	'',	'ranjan',	'ss11@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'f941fb6b09a34397188b26352d4c8310',	'3f3eaa42492101eeba100f1ee4b07263744c2d58e0411549483a238d370965333ac0c965fd6a3d3b94a0aea6243720cc86c1b575ef0ca3fd442dc94cb7e45e3f',	'',	'',	'2016-11-24 17:15:56',	'2016-11-24 17:15:56',	1),
(40,	'shashi',	'',	'ranjan',	'ss12@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'52cdffb76ca40d18e4830d764423af9f',	'77af2a539bff6671e5bae05ff8c2c1dc90149e91642b4286cb3eb5084a410a630fe172e800e5f9a1f5c626a4ee3deef90f0dbdda416129982020192794e1f11f',	'',	'',	'2016-11-24 17:51:17',	'2016-11-24 17:51:17',	1),
(41,	'shashi',	'',	'ranjan',	'ss13@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'e63a5d4bc9e05d433cc14dd0b98b792e',	'7cf2c40bba9ec81b719e77f8bf6f20a4ce3accc0997201c377b4d02703169e67f9e10e20b87deabcfd5a84c82e001f50004134d7f0b794ffbac32a1544874d9d',	'',	'',	'2016-11-24 17:52:33',	'2016-11-24 17:52:33',	1),
(42,	'shashi',	'',	'ranjan',	'ss14@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'0b3c2846f65abb51b10f2b18d69569e3',	'3e166e49865f2312b7720887dc813a2af0f26d300094fe9bd28e46527362263ffbc7e5ceca3fb48ea831ff8f7445db74b437a113c15d8d752ca86e0768ed6802',	'',	'',	'2016-11-24 17:57:47',	'2016-11-24 17:57:47',	1),
(43,	'shashi',	'',	'ranjan',	'ss15@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'3ecc19e0051e24469b0e5aa548266239',	'769ac81360bca3cdacc43c65774979c8f5334d92b4c51e40d73d33944cfdbdfa46053a0928fd8979cfe4d7ba39532d514b5f7216cd6e92d2a469d97ab474552e',	'',	'',	'2016-11-24 18:02:36',	'2016-11-24 18:02:36',	1),
(44,	'shashi',	'',	'ranjan',	'shashi.r@coppermobile.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'a5257a72fe014b641353bd4312e04941',	'4d82a970e5df655c6798d65204a89c8db0559f6be13f64057c625075e3d8f5c6b57fc9cf771273c7f296db76836b963ff705925c82bea543a6a0296b1bb701df',	'',	'',	'2016-11-24 18:05:06',	'2016-11-24 18:05:06',	1),
(45,	'shashi1',	'',	'ranjan1',	'ss17@yopmail.com',	'2017-01-01',	'2',	'des1',	'',	1,	1,	'515edfbbda9268ab51041bbebe3ce447',	'9868f3aa2ab559d0b7e92e52ff743dcd95de5e546c1976e30915469663fdf6b77b0383289a5cd0e4a0036b8219f2b928e504ee24d29d8966b40b8e5518a6db4b',	'',	'',	'2016-12-07 17:34:42',	'2016-12-07 18:39:16',	1),
(46,	'shashi',	'',	'ranjan',	'ss16@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'0aab8f3a1cbc3a003b1024d5cd0d00a2',	'b59a09f4942bd934ed7629c0b3651bf7734a0518c5952cb90b9758500fdd186592f623415e9436756222db2a513a2f50703e7fa9851cb43721add91640e4daf2',	'',	'',	'2016-12-07 18:00:05',	'2017-01-01 00:00:00',	1),
(47,	'shashi',	'',	'ranjan',	'ss18@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'989894aba59a22e4e73b93ccc77bbb76',	'd6738fcbc9d2f26a9ef43640269ff0b5b8b9e3ba236c4e4196816e6d62132acef0ff81cff98f8ec5e5189a08b62c4b892e9f6d3f3079974bae181fae1cd8e217',	'',	'',	'2016-12-07 20:11:35',	'2017-01-01 00:00:00',	1),
(48,	'shashi',	'',	'ranjan',	'ss19@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'6b1accf2a64f90ac25ea7eb32ce97152',	'1a70711bd64689aeb8eb63c85469ec6297c6c40765d1fac92f9d2b7ef50aa240a3e970502410d759c4e3379d5fe607da0868d7e805c859de73847b64deb362a7',	'',	'',	'2016-12-07 20:15:03',	'2017-01-01 00:00:00',	1),
(49,	'shashi',	'',	'ranjan',	'ss120@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'd02d987aa45baa2063fb986814c652de',	'969fcf3147590dcdca6be293e6d9874b4c94b3ceaf61fbb431381d44a2dd2b01e5ad3054e9f782328e68f531bbfebded564166c509a765e6721fa4214572ae4f',	'',	'',	'2016-12-13 15:58:27',	'2017-01-01 00:00:00',	1),
(50,	'shashi',	'',	'ranjan',	'ss121@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'67ac552c1b9bc9d20b029abaa6c0a7b9',	'e68d109ab3f29ad2c28ee77b2823fdb50136ca732cf1ee67930dcab3a6626728420be70af4ae82829c170c90bd878c5c7871f0272c772d59b24c08c51362954e',	'',	'',	'2016-12-13 16:00:36',	'2017-01-01 00:00:00',	1),
(51,	'shashi',	'',	'ranjan',	'ss122@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'e9fb8bed09c2f91985dcd4cfd361a2b4',	'e50440e40b238a12f0544b4f7337019506088be9ecef2e87b1f686e4e0d46fcd171ec7f2ece0217bed7ba0a797b302e4a8328872af5205827ed1d5dc09656cf6',	'',	'',	'2016-12-13 16:03:19',	'2017-01-01 00:00:00',	1),
(52,	'shashi',	'',	'ranjan',	'ss123@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'd21dd551c1143d3b810f90ae3ba1797e',	'd850d64e789f14bae466d2711f39c674279a95e6a4b8af48e0902a80dabb2a62546cbec058f97db6ea2145ef525c55e35d9750b2e42b4ea0fb83f75355cfc305',	'',	'',	'2016-12-13 16:05:50',	'2017-01-01 00:00:00',	1),
(53,	'shashi',	'',	'ranjan',	'ss124@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'b29aa35c502b509a92001e9f026b34b6',	'406b2a1dea39066daf5d1faba09d131568fc2e0404b999b6c1ebae668191d78eac9d56e9ee1f62d0af0d26e164ac932906c65f201d30497ab45e77f77685c90c',	'',	'',	'2016-12-13 16:57:54',	'2017-01-01 00:00:00',	1),
(54,	'shashi',	'',	'ranjan',	'ss125@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'291a758619e9102ad5046845f3ad7a0b',	'cfe7d00d72b8686a8907fe88d80dfb53b4d6b2468a2a26aaba46708324de78f30980f69d14ec5c051c6cca582529f87b1bed2a02eb82c7355dd941002ad3a1f9',	'',	'',	'2016-12-13 16:59:17',	'2017-01-01 00:00:00',	1),
(55,	'shashi',	'',	'ranjan',	'ss126@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'34b65862a0bed13d7ea333c2c47ae332',	'f95b0096521e69ccb533ca099fa9beb1ed4a2deeb8c53d57de1e40cbf36ae6873d13d9e9cf196230f9cf4f31352de5a7992156babfa42a65c325e98bcadd3f33',	'',	'',	'2016-12-13 17:01:17',	'2017-01-01 00:00:00',	1),
(56,	'shashi',	'',	'ranjan',	'ss127@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'df8b16269bd2e479040a654ed1fb1a01',	'87fef927aa7de8b901e352b07e2db87892a492e29d30adf9985a53d1dc151f53b5ffbf200835d34c1ccaf09472793d8de15bd9fa9148061365fda4ce446cfbe0',	'',	'',	'2016-12-13 17:02:07',	'2017-01-01 00:00:00',	1),
(57,	'shashi',	'',	'ranjan',	'ss129@yopmail.com',	'2017-01-01',	'2',	'des',	'',	1,	0,	'e1bbad16879510ac4eb8f3d99b114b3c',	'323b3404fde359d67f2af255340944166115065989ec5c56f676977ca23a1c1f5beb3916baf6bd1acab303a0a2f6b67666ac14f486e5fb5ff8da076c4589cd8b',	'',	'',	'2016-12-16 12:15:18',	'2017-01-01 00:00:00',	1),
(58,	'Raja',	'',	'Ram',	'rajamohan@yopmail.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'e5599b4d24bfef4f4ef189917961ed14',	'6107e018dcd9310ea312a362253bee6f04270b8e5870d5a8cd4e1899ad690109f49cd8b3a710df7f5d9fb25f305d854f31e440618a3edb28c499c5326bbe4375',	'',	'',	'2016-12-16 12:16:38',	'2017-01-01 00:00:00',	1),
(59,	'Akhilesh',	'',	'Singh',	'akhilesh@yopmail.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'9aa21374fedb633c0fde08bb3d97e6f6',	'aaeb74c802b934980c023d3ae3e3f2183bacd9db4688e50a6d389cbb0e174b6a2b7ebbae420875348995b3e6308999c1e8c0c87d7ad2ead118f1be4476cd592d',	'',	'',	'2016-12-16 13:09:26',	'2017-01-01 00:00:00',	1),
(60,	'Pawan',	'',	'Sing',	'pawan@yopmail.com',	'2017-01-01',	'2',	'Java Developer',	'',	1,	0,	'268e7e7a7f94dc5b2c9bfc4ef139c057',	'0b2a9d2be47ff591376e65232cb164131f119282ad348af49f24e019e7ffeb96096c40932099ceb3e6d872059f55093297c5027c7e3678bb88ddf00408cc8377',	'',	'',	'2016-12-16 13:10:28',	'2017-01-01 00:00:00',	1),
(61,	'Ghilman',	'',	'Ali',	'ghilman@yopmail.com',	'2017-01-01',	'2',	'PM',	'',	1,	0,	'8e1fd612cd93b47b436f107ccd760d6a',	'1445bd858961b601c4887f029d9f101204107240bf227115309b69e7177ffe91627f736b4e862d835bec6dd55f8d6b3b10040e497edcfe457c67cb9a284b8c94',	'',	'',	'2016-12-16 13:12:17',	'2017-01-01 00:00:00',	1),
(62,	'Subhan',	'',	'Ali',	'subhan.a@coppermobile.com',	'2017-01-01',	'2',	'PM',	'',	1,	0,	'ae8e61a9620b245486af10194a2fff43',	'757037fcafda562a94ac6abd267b2a5c438f9323174896aeb009f956661d11ed85af2deb56b8ced2576bc53f60e9fd63cf1628ed0fd1a460fde7b818113c189d',	'',	'',	'2016-12-16 13:25:43',	'2017-01-01 00:00:00',	1),
(63,	'Subhan',	'',	'Ali',	'subhan.a1@coppermobile.com',	'2017-01-01',	'2',	'Android Developer',	'',	1,	0,	'7ad01c216a1415a7df7c58273aff2259',	'f44317b4c55b0e20058a4d48b31b8fdab52b78bb5d01c39a93db99f6217594947596d6685ac370f8d4570dff3a8b39e82478c40de7358c44d3c9c9dc96b2d5db',	'',	'',	'2016-12-16 13:26:05',	'2017-01-01 00:00:00',	1),
(64,	'wssss',	'',	'ddd',	'sss@ss.xom',	'2017-01-01',	'2',	'Android Developer',	'',	1,	0,	'c38752245e3e16b4a540158df10df93a',	'efae0dc704d35e03e2191e4cc5a3b7976fe7ae0558586d9dc59d4455c5b51473b187078f4d0cec6dd272663453ec1dc48b15893d765eb6c1a30aa24247d595a9',	'',	'',	'2016-12-16 13:27:08',	'2017-01-01 00:00:00',	1),
(65,	'Rahul',	'',	'Ranjan',	'rahul@yopmail.com',	'2017-01-01',	'0',	'Java Developer',	'',	1,	0,	'780a9427f86a0430abb293ee475c13ef',	'a859a34a4566e565e2e7a577c1e3a6e06ad625f2cd8e71ec9317a9912407ceb3b1506bd69ced32f07dcda862fc104674b91ff25699b8a8ec1dbd14b893ed486e',	'',	'',	'2016-12-16 17:56:57',	'2017-01-01 00:00:00',	1),
(66,	'Nishant',	'',	'Sapra',	'nissu@yopmail.com',	'2017-01-01',	'2',	'Android Developer',	'',	1,	0,	'1e7b5fb0156e5abdcf22cd7b09566713',	'80be9ae95d5ac1ede49a40924415f4a2c8d698a40aba338b157681aa43e0ca0721d590e007e33748b3946083aaf1f422ef7a1483aeebb1fe2b10ab016c94b774',	'',	'',	'2016-12-16 14:47:08',	'2017-01-01 00:00:00',	1),
(67,	'Nishu',	'',	'Sapra',	'nishu@yopmail.com',	'2017-01-01',	'1',	'Android Developer',	'',	1,	0,	'52a23961db7b150d37b58cfb9ae71501',	'dc83d4ce1bf54a31031e5fa7ac1e5585ed203000759f93f9b8e9c437c53e855c526d977ec081d0e5aaba869729b60d6b83f7e35b298c871086fb75fe88407cb3',	'',	'',	'2016-12-16 15:07:25',	'2017-01-01 00:00:00',	1),
(68,	'Name',	'Name - Name',	'Name',	'qwe@qwe.qwe',	'1990-01-01',	'1',	'Android Developer',	'',	1,	NULL,	'83d5a7b149930c2dde52506d67bc9a57',	'e201ddcec034ec69f2195d85b6bd0e08912a12c8fc434deeb455ac581b396c6364e4f0c87bdfb6292dbc33969582ada7b1009bf53a834db3810df47cfaa0715d',	'',	'',	'2017-02-24 07:46:26',	'2017-02-24 07:46:26',	1),
(69,	'Shadi',	'Shadi - Shadi',	'Zebian',	'shadizebian@gmail.com',	'1990-01-01',	'1',	'Android Developer',	'',	1,	NULL,	'b99c918aa19e527194fcaa33ca130778',	'6649262199854592498df1f25eaf72bb675435764dc7e2612a119772ffda1cf18d3a4926d3f99c0366d45ab889d35f734242e2b3a4da7e2ec2d74d9b6552be65',	'',	'',	'2017-02-24 14:31:36',	'2017-02-24 14:31:36',	1);;;;;

DROP TABLE IF EXISTS `trendata_user_address`;;;;;
CREATE TABLE `trendata_user_address` (
  `trendata_user_address_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_user_address_city` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_address_state` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_address_one` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_address_two` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `trendata_user_address_zipcode` varchar(10) COLLATE utf8_unicode_ci NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_user_id` int(10) unsigned DEFAULT NULL,
  `trendata_country_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_user_address_id`),
  KEY `trendata_user_id` (`trendata_user_id`),
  KEY `trendata_country_id` (`trendata_country_id`),
  CONSTRAINT `trendata_user_address_ibfk_1` FOREIGN KEY (`trendata_user_id`) REFERENCES `trendata_user` (`trendata_user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_user_address_ibfk_2` FOREIGN KEY (`trendata_country_id`) REFERENCES `trendata_country` (`trendata_country_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_user_address`;;;;;

DROP TABLE IF EXISTS `trendata_user_role`;;;;;
CREATE TABLE `trendata_user_role` (
  `trendata_user_role_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `trendata_user_role_created_by` int(10) unsigned DEFAULT NULL,
  `trendata_user_role_last_modified_by` int(10) unsigned DEFAULT NULL,
  `trendata_user_role_status` enum('0','1','2') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `trendata_user_id` int(10) unsigned DEFAULT NULL,
  `trendata_role_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`trendata_user_role_id`),
  KEY `trendata_user_id` (`trendata_user_id`),
  KEY `trendata_role_id` (`trendata_role_id`),
  CONSTRAINT `trendata_user_role_ibfk_1` FOREIGN KEY (`trendata_user_id`) REFERENCES `trendata_user` (`trendata_user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `trendata_user_role_ibfk_2` FOREIGN KEY (`trendata_role_id`) REFERENCES `trendata_role` (`trendata_role_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;;;;;

TRUNCATE `trendata_user_role`;;;;;
